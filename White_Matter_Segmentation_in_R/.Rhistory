rownames(Npct) <- c(vari, rn)
}
#   if (pvalue){
Npct = cbind(Npct,
p.value = c(pvaller(pval), rep("", nrow(Npct)-1))
)
#   }
return(Npct)
}
est <- "sd"
digit <- 1
data <- alldat
maketwo <- c("Age", "Enrollment_GCS_Add", "Enrollment_NIHSS_Total", "ICHVolume", "IVHVolume", "Prognostic_Score", "Hemphill", "Tuhrim", "ED_Presentation_GCS")
for (icol in maketwo) {
nname <- paste0(icol, "2")
alldat[, nname] <- alldat[, icol]
rando[, nname] <- rando[, icol]
}
for (idat in c("rando", "alldat")){
#   eval(parse(text=paste("data <- ", idat)))
data = get(idat)
group <- "group"
tab <- NULL
tab <- rbind(tab, run_contin(data, vari="Age", est2=est, digit=digit, na.rm=FALSE))
tab <- rbind(tab, run_contin(data, vari="Age2", est1="median", est2="iqr", digit=digit, na.rm=FALSE, pvalue=FALSE))
#   tab <- rbind(tab, run_cat(data, vari="Age_Cat"))
tab <- rbind(tab, run_cat(data, vari="Gender", level="Male", yesno=TRUE))
#   tab <- rbind(tab, run_cat(data, vari="Ethnicity"))
tab <- rbind(tab, run_cat(data, vari="Race"))
tab <- rbind(tab, run_contin(data, vari="Enrollment_GCS_Add", est2=est, digit=digit, na.rm=FALSE))
tab <- rbind(tab, run_contin(data, vari="Enrollment_GCS_Add2", est1 = "median", est2="iqr", digit=digit, na.rm=FALSE, pvalue=FALSE))
tab <- rbind(tab, run_contin(data, vari="ED_Presentation_GCS", est2=est, digit=digit, na.rm=FALSE))
tab <- rbind(tab, run_contin(data, vari="ED_Presentation_GCS2", est1 = "median", est2="iqr", digit=digit, na.rm=FALSE, pvalue=FALSE))
tab <- rbind(tab, run_cat(data, vari="GCS_Cat"))
tab <- rbind(tab, run_contin(data, vari="Enrollment_NIHSS_Total", est2=est, digit=digit, na.rm=FALSE))
tab <- rbind(tab, run_contin(data, vari="Enrollment_NIHSS_Total2", est1 = "median", est2="iqr", digit=digit, na.rm=FALSE, pvalue=FALSE))
tab <- rbind(tab, run_contin(data, vari="systolic"))
tab <- rbind(tab, run_contin(data, vari="diastolic"))
tab <- rbind(tab, run_cat(data, vari="Diabetes", level="Yes", yesno=TRUE))
tab <- rbind(tab, run_cat(data, vari="Hypertension", level="Yes", yesno=TRUE))
tab <- rbind(tab, run_cat(data, vari="Other_CV", level="Abnormal", yesno=TRUE))
tab <- rbind(tab, run_cat(data, vari="ETOH_Abuse", level="Yes", yesno=TRUE))
tab <- rbind(tab, run_contin(data, vari="ICHVolume", est2=est, digit=digit, na.rm=FALSE))
tab <- rbind(tab, run_contin(data, vari="ICHVolume2", est1="median", est2="iqr", digit=digit, na.rm=FALSE, pvalue=FALSE))
#   tab <- rbind(tab, run_cat(data, vari="Haematoma_volume"))
tab <- rbind(tab, run_contin(data, vari="IVHVolume", est2=est, digit=digit, na.rm=FALSE))
tab <- rbind(tab, run_contin(data, vari="IVHVolume2", est1="median", est2="iqr", digit=digit, na.rm=FALSE, pvalue=FALSE))
#   tab <- rbind(tab, run_cat(data, vari="Clot_Location_RC"))
tab <- rbind(tab, run_cat(data, vari="Lobar_BG_vs"))
tab <- rbind(tab, run_contin(data, vari="Ictus_to_Enrolled"))
tab <- rbind(tab, run_contin(data, vari="Randomization_to_Op_Procedure", na.rm=TRUE))
tab <- rbind(tab, run_cat(data, vari="Surgery_Time"))
tab <- rbind(tab, run_contin(data, vari="dosenum",
est= "median",
est2 = "iqr",
na.rm=TRUE))
tab <- rbind(tab, run_contin(data, vari="Tuhrim"))
tab <- rbind(tab, run_contin(data, vari="Prognostic_Score"))
tab <- rbind(tab, run_contin(data, vari="Prognostic_Score2", est1="median", est2="iqr", digit=digit))
tab <- rbind(tab, run_contin(data, vari="Hemphill"))
tab <- rbind(tab, run_cat(data, vari="Hemphill_Score"))
# tab <- rbind(tab, run_contin(data, vari="Ictus_to_Op_Procedure", est, digit))
tab[tab == "0 (NaN%)"] <- "NA"
tab[tab == "NA (NA)"] <- "NA"
rn <- rownames(tab)
tab[rn %in% c("<= 36 Hours", "> 36 Hours"), "Medical"] <- NA
rn[rn == "Clot_Location_RC"] <- "Clot Location"
rn[rn == "GCS_Cat"] <- "Enrollment GCS"
rn[rn == "Age_Cat"] <- "Age in Years"
rn[rn == "Haematoma_volume"] <- "ICH Volume (cc)"
rn[rn == "Lobar_BG_vs"] <- "Clot Site"
is.var <- apply(tab, 1, function(x) all(x %in% c("", NA)))
rn[!is.var] <- paste0("ZZZ", rn[!is.var])
rn[rn == "ZZZAge2"] <- "Age in Years: Median (IQR)"
rn[rn == "ZZZdosenum"] <- "Number of Doses: Median (IQR)"
rn[rn == "ZZZAge"] <- "Age in Years: Mean (SD)"
rn[rn == "ZZZEnrollment_GCS_Add"] <- "Enrollment GCS: Mean (SD)"
rn[rn == "ZZZEnrollment_GCS_Add2"] <- "Enrollment GCS: Median (IQR)"
rn[rn == "ZZZED_Presentation_GCS"] <- "ED Presentation GCS: Mean (SD)"
rn[rn == "ZZZED_Presentation_GCS2"] <- "ED Presentation GCS: Median (IQR)"
rn[rn == "ZZZICHVolume"] <- "ICH Volume (cc): Mean (SD)"
rn[rn == "ZZZICHVolume2"] <- "ICH Volume (cc): Median (IQR)"
rn[rn == "ZZZIVHVolume"] <- "IVH Volume (cc): Mean (SD)"
rn[rn == "ZZZIVHVolume2"] <- "IVH Volume (cc): Median (IQR)"
rn[rn == "ZZZPrognostic_Score"] <- "Prognostic Score: Mean (SD)"
rn[rn == "ZZZEnrollment_NIHSS_Total"] <- "Enrollment NIHSS: Mean (SD)"
rn[rn == "ZZZEnrollment_NIHSS_Total2"] <- "Enrollment NIHSS: Median (IQR)"
rn[rn == "ZZZPrognostic_Score2"] <- "Prognostic Score: Median (IQR)"
rn[rn == "ZZZSurgery_Time"] <- "Ictus to Surgery"
rn[rn == "ZZZsystolic"] <- "Systolic BP (mmHg): Mean (SD)"
rn[rn == "ZZZdiastolic"] <- "Diastolic BP (mmHg): Mean (SD)"
rn[rn == "ZZZRandomization_to_Op_Procedure"] <- "Randomization to Surgery (Hours)"
rn[rn == "ZZZTuhrim"] <- "Tuhrim Score"
rn[rn == "ZZZHemphill"] <- "Hemphill Score: Mean (SD)"
rn[rn == "ZZZIctus_to_Enrolled"] <- "Ictus to Randomization (Days)"
rn[rn == "ZZZAny_IVH"] <- "Any IVH Present at Randomization"
rn[rn == "ZZZDiabetes"] <- "Diabetes"
rn[rn == "ZZZHypertension"] <- "History of Hypertension"
rn[rn == "ZZZOther_CV"] <- "Other Cardiovascular Disease"
rn[rn == "ZZZETOH_Abuse"] <- "Alcohol Abuse"
rn[rn == "ZZZGender"] <- "Gender: Male"
rn <- gsub("_", " ", rn)
rownames(tab) <- rn
tt <- table(data[, group])
if (runall){
tt = c(tt, "All Randomized" = sum(tt))
}
tab <- data.frame(tab, stringsAsFactors=FALSE)
tab$Medical <- gsub("NaN (NA)", NA, tab$Medical, fixed=TRUE)
colnames(tab) <- c(paste0(names(tt), " (N=",tt, ")"), "p-value")
eval(parse(text=paste0("tab.", idat, " <- tab")))
}
tab
library(plyr)
rrange <- function(x, digit, ...) {
print("range")
r <- range(x, ...)
print(r)
r <- round(r, digit)
paste0(r[1], "-", r[2])
}
iqr <- function(x, digit, ...) {
r <- quantile(x, probs=c(0.25, 0.75), ...)
print(r)
r <- round(r, digit) ## hey
paste0(r[1], "-", r[2])
}
p25 <- function(x, ...) {quantile(x, probs=0.25, ...)}
p75 <- function(x, ...) {quantile(x, probs=0.75, ...)}
runall = TRUE
allname = "All"
pvaller = function(x){
ifelse(x < 0.001, "< 0.001", round(x, 3))
}
run_contin <- function(data, vari, est1="mean", est2="sd", digit=1, groupvar ="group", pvalue = TRUE,  ...){
data$group <- data[, groupvar]
data$Var <- data[, vari]
#   tab <- ddply(data, .(group), summarize, mean=mean(Var, na.rm=unique(nrm)), sd=sd(Var, na.rm=nrm), min=min(Var, na.rm=nrm), max=max(Var, na.rm=nrm), median=median(Var, na.rm=nrm), p25=p25(Var, na.rm=nrm), p75=p75(Var, na.rm=nrm))
#   if (na.rm) data <- data[ !is.na(data$Var), ]
tab <- ddply(data, .(group), summarize, mean=mean(Var, na.rm=TRUE), sd=sd(Var, na.rm=TRUE), min=min(Var, na.rm=TRUE), max=max(Var, na.rm=TRUE), median=median(Var, na.rm=TRUE), p25=p25(Var, na.rm=TRUE), p75=p75(Var, na.rm=TRUE))
if (runall) {
tab.all <- with(data,
data.frame(group = allname, mean=mean(Var, na.rm=TRUE),
sd=sd(Var, na.rm=TRUE),
min=min(Var, na.rm=TRUE),
max=max(Var, na.rm=TRUE),
median=median(Var, na.rm=TRUE),
p25=p25(Var, na.rm=TRUE),
p75=p75(Var, na.rm=TRUE)))
tab = rbind(tab, tab.all)
}
tg = tab[, "group"]
#p25=quantile(Var, probs=0.25), p75=quantile(Var, probs=0.75)
#
ttab <- tab[, !colnames(tab) %in% c("Group_Assigned", "group")]
ttab <- round(ttab, digit)
ttab$iqr <-paste0(ttab$p25, " - ", ttab$p75)
ttab <- matrix(paste0(ttab[,est1], " (", ttab[, est2], ")"), ncol=nrow(ttab))
rownames(ttab) <- vari
colnames(ttab) <- tab[, group]
if (pvalue){
if (length(unique(data$group[!is.na(data$Var)])) != 2){
pval = NA
} else {
tt = t.test(Var ~ group, data = data)
pval = tt$p.value
}
} else {
pval = NA
}
ttab = cbind(ttab, p.value = c(pvaller(pval), rep("", nrow(ttab)-1)))
return(ttab)
}
run_cat <- function(data, vari, level=NULL, yesno=FALSE, groupvar="group",
pvalue = TRUE){
tab <- table(data[,vari], data[, groupvar], useNA="ifany")
nona = tab[!is.na(rownames(tab)),]
nona = colSums(nona)
if (pvalue){
tt = fisher.test(tab)
pval = tt$p.value
if (sum(nona != 0) <= 1){
pval = NA
}
} else {
pval = NA
}
if (runall){
tab = cbind(tab, rowSums(tab))
colnames(tab)[ncol(tab)] = allname
}
ptab <- prop.table(tab, 2)
Npct <- matrix(paste(tab, " (", round(ptab*100, 1), "%)", sep=""), dimnames=dimnames(tab), ncol=ncol(tab), nrow=nrow(tab))
if (!is.null(level)) {
Npct <- Npct[level, , drop=FALSE]
}
Npct <- Npct[!is.na(rownames(Npct)),, drop=FALSE]
if (yesno){
rownames(Npct) <- vari
} else {
rn <- rownames(Npct)
Npct <- rbind(rep("", length.out = ncol(Npct)), Npct)
rownames(Npct) <- c(vari, rn)
}
#   if (pvalue){
Npct = cbind(Npct,
p.value = c(pvaller(pval), rep("", nrow(Npct)-1))
)
#   }
return(Npct)
}
est <- "sd"
digit <- 1
data <- alldat
maketwo <- c("Age", "Enrollment_GCS_Add", "Enrollment_NIHSS_Total", "ICHVolume", "IVHVolume", "Prognostic_Score", "Hemphill", "Tuhrim", "ED_Presentation_GCS")
for (icol in maketwo) {
nname <- paste0(icol, "2")
alldat[, nname] <- alldat[, icol]
rando[, nname] <- rando[, icol]
}
for (idat in c("rando", "alldat")){
#   eval(parse(text=paste("data <- ", idat)))
data = get(idat)
group <- "group"
tab <- NULL
tab <- rbind(tab, run_contin(data, vari="Age", est2=est, digit=digit, na.rm=FALSE))
tab <- rbind(tab, run_contin(data, vari="Age2", est1="median", est2="iqr", digit=digit, na.rm=FALSE, pvalue=FALSE))
#   tab <- rbind(tab, run_cat(data, vari="Age_Cat"))
tab <- rbind(tab, run_cat(data, vari="Gender", level="Male", yesno=TRUE))
#   tab <- rbind(tab, run_cat(data, vari="Ethnicity"))
tab <- rbind(tab, run_cat(data, vari="Race"))
tab <- rbind(tab, run_contin(data, vari="Enrollment_GCS_Add", est2=est, digit=digit, na.rm=FALSE))
tab <- rbind(tab, run_contin(data, vari="Enrollment_GCS_Add2", est1 = "median", est2="iqr", digit=digit, na.rm=FALSE, pvalue=FALSE))
tab <- rbind(tab, run_contin(data, vari="ED_Presentation_GCS", est2=est, digit=digit, na.rm=FALSE))
tab <- rbind(tab, run_contin(data, vari="ED_Presentation_GCS2", est1 = "median", est2="iqr", digit=digit, na.rm=FALSE, pvalue=FALSE))
tab <- rbind(tab, run_cat(data, vari="GCS_Cat"))
tab <- rbind(tab, run_contin(data, vari="Enrollment_NIHSS_Total", est2=est, digit=digit, na.rm=FALSE))
tab <- rbind(tab, run_contin(data, vari="Enrollment_NIHSS_Total2", est1 = "median", est2="iqr", digit=digit, na.rm=FALSE, pvalue=FALSE))
tab <- rbind(tab, run_contin(data, vari="systolic"))
tab <- rbind(tab, run_contin(data, vari="diastolic"))
tab <- rbind(tab, run_cat(data, vari="Diabetes", level="Yes", yesno=TRUE))
tab <- rbind(tab, run_cat(data, vari="Hypertension", level="Yes", yesno=TRUE))
tab <- rbind(tab, run_cat(data, vari="Other_CV", level="Abnormal", yesno=TRUE))
tab <- rbind(tab, run_cat(data, vari="ETOH_Abuse", level="Yes", yesno=TRUE))
tab <- rbind(tab, run_contin(data, vari="ICHVolume", est2=est, digit=digit, na.rm=FALSE))
tab <- rbind(tab, run_contin(data, vari="ICHVolume2", est1="median", est2="iqr", digit=digit, na.rm=FALSE, pvalue=FALSE))
#   tab <- rbind(tab, run_cat(data, vari="Haematoma_volume"))
tab <- rbind(tab, run_contin(data, vari="IVHVolume", est2=est, digit=digit, na.rm=FALSE))
tab <- rbind(tab, run_contin(data, vari="IVHVolume2", est1="median", est2="iqr", digit=digit, na.rm=FALSE, pvalue=FALSE))
#   tab <- rbind(tab, run_cat(data, vari="Clot_Location_RC"))
tab <- rbind(tab, run_cat(data, vari="Lobar_BG_vs"))
tab <- rbind(tab, run_contin(data, vari="Ictus_to_Enrolled"))
tab <- rbind(tab, run_contin(data, vari="Randomization_to_Op_Procedure", na.rm=TRUE))
tab <- rbind(tab, run_cat(data, vari="Surgery_Time"))
tab <- rbind(tab, run_contin(data, vari="dosenum",
est= "median",
est2 = "iqr",
na.rm=TRUE))
tab <- rbind(tab, run_contin(data, vari="Tuhrim"))
tab <- rbind(tab, run_contin(data, vari="Prognostic_Score"))
tab <- rbind(tab, run_contin(data, vari="Prognostic_Score2", est1="median", est2="iqr", digit=digit))
tab <- rbind(tab, run_contin(data, vari="Hemphill"))
tab <- rbind(tab, run_cat(data, vari="Hemphill_Score"))
# tab <- rbind(tab, run_contin(data, vari="Ictus_to_Op_Procedure", est, digit))
tab[tab == "0 (NaN%)"] <- "NA"
tab[tab == "NA (NA)"] <- "NA"
rn <- rownames(tab)
tab[rn %in% c("<= 36 Hours", "> 36 Hours"), "Medical"] <- NA
rn[rn == "Clot_Location_RC"] <- "Clot Location"
rn[rn == "GCS_Cat"] <- "Enrollment GCS"
rn[rn == "Age_Cat"] <- "Age in Years"
rn[rn == "Haematoma_volume"] <- "ICH Volume (cc)"
rn[rn == "Lobar_BG_vs"] <- "Clot Site"
is.var <- apply(tab, 1, function(x) all(x %in% c("", NA)))
rn[!is.var] <- paste0("ZZZ", rn[!is.var])
rn[rn == "ZZZAge2"] <- "Age in Years: Median (IQR)"
rn[rn == "ZZZdosenum"] <- "Number of Doses: Median (IQR)"
rn[rn == "ZZZAge"] <- "Age in Years: Mean (SD)"
rn[rn == "ZZZEnrollment_GCS_Add"] <- "Enrollment GCS: Mean (SD)"
rn[rn == "ZZZEnrollment_GCS_Add2"] <- "Enrollment GCS: Median (IQR)"
rn[rn == "ZZZED_Presentation_GCS"] <- "ED Presentation GCS: Mean (SD)"
rn[rn == "ZZZED_Presentation_GCS2"] <- "ED Presentation GCS: Median (IQR)"
rn[rn == "ZZZICHVolume"] <- "ICH Volume (cc): Mean (SD)"
rn[rn == "ZZZICHVolume2"] <- "ICH Volume (cc): Median (IQR)"
rn[rn == "ZZZIVHVolume"] <- "IVH Volume (cc): Mean (SD)"
rn[rn == "ZZZIVHVolume2"] <- "IVH Volume (cc): Median (IQR)"
rn[rn == "ZZZPrognostic_Score"] <- "Prognostic Score: Mean (SD)"
rn[rn == "ZZZEnrollment_NIHSS_Total"] <- "Enrollment NIHSS: Mean (SD)"
rn[rn == "ZZZEnrollment_NIHSS_Total2"] <- "Enrollment NIHSS: Median (IQR)"
rn[rn == "ZZZPrognostic_Score2"] <- "Prognostic Score: Median (IQR)"
rn[rn == "ZZZSurgery_Time"] <- "Ictus to Surgery"
rn[rn == "ZZZsystolic"] <- "Systolic BP (mmHg): Mean (SD)"
rn[rn == "ZZZdiastolic"] <- "Diastolic BP (mmHg): Mean (SD)"
rn[rn == "ZZZRandomization_to_Op_Procedure"] <- "Randomization to Surgery (Hours)"
rn[rn == "ZZZTuhrim"] <- "Tuhrim Score"
rn[rn == "ZZZHemphill"] <- "Hemphill Score: Mean (SD)"
rn[rn == "ZZZIctus_to_Enrolled"] <- "Ictus to Randomization (Days)"
rn[rn == "ZZZAny_IVH"] <- "Any IVH Present at Randomization"
rn[rn == "ZZZDiabetes"] <- "Diabetes"
rn[rn == "ZZZHypertension"] <- "History of Hypertension"
rn[rn == "ZZZOther_CV"] <- "Other Cardiovascular Disease"
rn[rn == "ZZZETOH_Abuse"] <- "Alcohol Abuse"
rn[rn == "ZZZGender"] <- "Gender: Male"
rn <- gsub("_", " ", rn)
rownames(tab) <- rn
tt <- table(data[, group])
if (runall){
tt = c(tt, "All Randomized" = sum(tt))
}
tab <- data.frame(tab, stringsAsFactors=FALSE)
tab$Medical <- gsub("NaN (NA)", NA, tab$Medical, fixed=TRUE)
colnames(tab) <- c(paste0(names(tt), " (N=",tt, ")"), "p-value")
eval(parse(text=paste0("tab.", idat, " <- tab")))
}
tab
is.var <- apply(tab, 1, function(x) all(x %in% c("", NA)))
is.var
data = get(idat)
group <- "group"
tab <- NULL
tab <- rbind(tab, run_contin(data, vari="Age", est2=est, digit=digit, na.rm=FALSE))
tab <- rbind(tab, run_contin(data, vari="Age2", est1="median", est2="iqr", digit=digit, na.rm=FALSE, pvalue=FALSE))
#   tab <- rbind(tab, run_cat(data, vari="Age_Cat"))
tab <- rbind(tab, run_cat(data, vari="Gender", level="Male", yesno=TRUE))
#   tab <- rbind(tab, run_cat(data, vari="Ethnicity"))
tab <- rbind(tab, run_cat(data, vari="Race"))
tab <- rbind(tab, run_contin(data, vari="Enrollment_GCS_Add", est2=est, digit=digit, na.rm=FALSE))
tab <- rbind(tab, run_contin(data, vari="Enrollment_GCS_Add2", est1 = "median", est2="iqr", digit=digit, na.rm=FALSE, pvalue=FALSE))
tab <- rbind(tab, run_contin(data, vari="ED_Presentation_GCS", est2=est, digit=digit, na.rm=FALSE))
tab <- rbind(tab, run_contin(data, vari="ED_Presentation_GCS2", est1 = "median", est2="iqr", digit=digit, na.rm=FALSE, pvalue=FALSE))
tab <- rbind(tab, run_cat(data, vari="GCS_Cat"))
tab <- rbind(tab, run_contin(data, vari="Enrollment_NIHSS_Total", est2=est, digit=digit, na.rm=FALSE))
tab <- rbind(tab, run_contin(data, vari="Enrollment_NIHSS_Total2", est1 = "median", est2="iqr", digit=digit, na.rm=FALSE, pvalue=FALSE))
tab <- rbind(tab, run_contin(data, vari="systolic"))
tab <- rbind(tab, run_contin(data, vari="diastolic"))
tab <- rbind(tab, run_cat(data, vari="Diabetes", level="Yes", yesno=TRUE))
tab <- rbind(tab, run_cat(data, vari="Hypertension", level="Yes", yesno=TRUE))
tab <- rbind(tab, run_cat(data, vari="Other_CV", level="Abnormal", yesno=TRUE))
tab <- rbind(tab, run_cat(data, vari="ETOH_Abuse", level="Yes", yesno=TRUE))
tab <- rbind(tab, run_contin(data, vari="ICHVolume", est2=est, digit=digit, na.rm=FALSE))
tab <- rbind(tab, run_contin(data, vari="ICHVolume2", est1="median", est2="iqr", digit=digit, na.rm=FALSE, pvalue=FALSE))
#   tab <- rbind(tab, run_cat(data, vari="Haematoma_volume"))
tab <- rbind(tab, run_contin(data, vari="IVHVolume", est2=est, digit=digit, na.rm=FALSE))
tab <- rbind(tab, run_contin(data, vari="IVHVolume2", est1="median", est2="iqr", digit=digit, na.rm=FALSE, pvalue=FALSE))
#   tab <- rbind(tab, run_cat(data, vari="Clot_Location_RC"))
tab <- rbind(tab, run_cat(data, vari="Lobar_BG_vs"))
tab <- rbind(tab, run_contin(data, vari="Ictus_to_Enrolled"))
tab <- rbind(tab, run_contin(data, vari="Randomization_to_Op_Procedure", na.rm=TRUE))
tab <- rbind(tab, run_cat(data, vari="Surgery_Time"))
tab <- rbind(tab, run_contin(data, vari="dosenum",
est= "median",
est2 = "iqr",
na.rm=TRUE))
tab <- rbind(tab, run_contin(data, vari="Tuhrim"))
tab <- rbind(tab, run_contin(data, vari="Prognostic_Score"))
tab <- rbind(tab, run_contin(data, vari="Prognostic_Score2", est1="median", est2="iqr", digit=digit))
tab <- rbind(tab, run_contin(data, vari="Hemphill"))
tab <- rbind(tab, run_cat(data, vari="Hemphill_Score"))
# tab <- rbind(tab, run_contin(data, vari="Ictus_to_Op_Procedure", est, digit))
tab[tab == "0 (NaN%)"] <- "NA"
tab[tab == "NA (NA)"] <- "NA"
rn <- rownames(tab)
tab[rn %in% c("<= 36 Hours", "> 36 Hours"), "Medical"] <- NA
rn[rn == "Clot_Location_RC"] <- "Clot Location"
rn[rn == "GCS_Cat"] <- "Enrollment GCS"
rn[rn == "Age_Cat"] <- "Age in Years"
rn[rn == "Haematoma_volume"] <- "ICH Volume (cc)"
rn[rn == "Lobar_BG_vs"] <- "Clot Site"
is.var <- apply(tab, 1, function(x) all(x %in% c("", NA)))
is.var
any(is.var)
which(is.var)
tab
rn
rn[!is.var] <- paste0("ZZZ", rn[!is.var])
rn[rn == "ZZZAge2"] <- "Age in Years: Median (IQR)"
rn[rn == "ZZZdosenum"] <- "Number of Doses: Median (IQR)"
rn[rn == "ZZZAge"] <- "Age in Years: Mean (SD)"
rn[rn == "ZZZEnrollment_GCS_Add"] <- "Enrollment GCS: Mean (SD)"
rn[rn == "ZZZEnrollment_GCS_Add2"] <- "Enrollment GCS: Median (IQR)"
rn[rn == "ZZZED_Presentation_GCS"] <- "ED Presentation GCS: Mean (SD)"
rn[rn == "ZZZED_Presentation_GCS2"] <- "ED Presentation GCS: Median (IQR)"
rn[rn == "ZZZICHVolume"] <- "ICH Volume (cc): Mean (SD)"
rn[rn == "ZZZICHVolume2"] <- "ICH Volume (cc): Median (IQR)"
rn[rn == "ZZZIVHVolume"] <- "IVH Volume (cc): Mean (SD)"
rn[rn == "ZZZIVHVolume2"] <- "IVH Volume (cc): Median (IQR)"
rn[rn == "ZZZPrognostic_Score"] <- "Prognostic Score: Mean (SD)"
rn[rn == "ZZZEnrollment_NIHSS_Total"] <- "Enrollment NIHSS: Mean (SD)"
rn[rn == "ZZZEnrollment_NIHSS_Total2"] <- "Enrollment NIHSS: Median (IQR)"
rn[rn == "ZZZPrognostic_Score2"] <- "Prognostic Score: Median (IQR)"
rn[rn == "ZZZSurgery_Time"] <- "Ictus to Surgery"
rn[rn == "ZZZsystolic"] <- "Systolic BP (mmHg): Mean (SD)"
rn[rn == "ZZZdiastolic"] <- "Diastolic BP (mmHg): Mean (SD)"
rn[rn == "ZZZRandomization_to_Op_Procedure"] <- "Randomization to Surgery (Hours)"
rn[rn == "ZZZTuhrim"] <- "Tuhrim Score"
rn[rn == "ZZZHemphill"] <- "Hemphill Score: Mean (SD)"
rn[rn == "ZZZIctus_to_Enrolled"] <- "Ictus to Randomization (Days)"
rn[rn == "ZZZAny_IVH"] <- "Any IVH Present at Randomization"
rn[rn == "ZZZDiabetes"] <- "Diabetes"
rn[rn == "ZZZHypertension"] <- "History of Hypertension"
rn[rn == "ZZZOther_CV"] <- "Other Cardiovascular Disease"
rn[rn == "ZZZETOH_Abuse"] <- "Alcohol Abuse"
rn[rn == "ZZZGender"] <- "Gender: Male"
rn <- gsub("_", " ", rn)
rn
rando$Hemphill_Score
knit("Manuscript_2013Dec30.Rnw")
library(knitr)
knit("Manuscript_2013Dec30.Rnw")
n_stagei
consort_data
head(consort_data)
table(consort_data$Dosing_Tier, consort_data$stageII)
levels(consort_data$Dosing_Tier)
stageii_maker <- function(data){
data = dropices(data)
data$PID = (data$patientName %% 1000)
data$stageII = data$PID %in% c(358:417, 504:526)
data$Tier = as.character(data$Dosing_Tier)
data$Tier[ data$Group_Assigned %in% "Medical" & data$stageII] = "Tier I: 0.3mg q8h"
data
}
consort_data = stageii_maker(full.data)
table(consort_data$Dosing_Tier, consort_data$stageII)
table(consort_data$Tier, consort_data$stageII)
knit("Manuscript_2013Dec30.Rnw")
head(consort_data)
table(consort_data$Tier, consort_data$stageII)
stageii_maker <- function(data){
data = dropices(data)
data$PID = (data$patientName %% 1000)
data$stageII = data$PID %in% c(358:417, 504:526)
data$Tier = as.character(data$Dosing_Tier)
data$Tier[ data$Group_Assigned %in% "Medical" &
data$stageII &
data$Dosing_Tier %in% "Tier III: ICES (No rt-PA)"] =
"Stage II: 1.0mg q8h"
data
}
consort_data = stageii_maker(full.data)
n_stagei = sum(!consort_data$stageII)
n_stageii = sum(consort_data$stageII)
table(consort_data$Tier, consort_data$stageII)
tier_tab = with(consort_data[ !consort_data$stageII,],
table(Tier, Group_Assigned))
tier_tab
n_tier1 = rowSums(tier_tab["Tier I: 0.3mg q8h",])
n_tier2 = rowSums(tier_tab["Tier II: 1.0mg q8h",])
n_tier1 = sum(tier_tab["Tier I: 0.3mg q8h",])
n_tier2 = sum(tier_tab["Tier II: 1.0mg q8h",])
n_tier1
n_tier2
head(consort_data)
tier_tab_have = with(consort_data[ !consort_data$stageII & !is.na(consort_data$Bad_Outcome_Day_180),],
table(Tier, Group_Assigned))
tier_tab_have
tier_tab
tier_tab_have = with(consort_data[ !is.na(consort_data$Bad_Outcome_Day_180),],
table(Tier, Group_Assigned))
tier_tab_have
tier_tab_have = with(consort_data[ !is.na(consort_data$Bad_Outcome_Day_180),], table(Tier, Group_Assigned))
tier_tab_nohave = with(consort_data[ is.na(consort_data$Bad_Outcome_Day_180),], table(Tier, Group_Assigned))
tier_tab
tier_tab_have
tier_tab_nohave
tier_tab
head(consort_data$Crani_Stereo_Procedure)
tier_tab_crani = with(consort_data[ consort_data$Crani_Stereo_Procedure == "Craniotomy",], table(Tier, Group_Assigned))
tier_tab_crani
setwd("~/Dropbox/Public/WordPress_Hopstat/White_Matter_Segmentation_in_R")
## ----, eval=FALSE--------------------------------------------------------
## devtools::install_github("muschellij2/oro.nifti")
## devtools::install_github("muschellij2/fslr")
## devtools::install_github("stnava/cmaker")
## devtools::install_github("stnava/ITKR")
## devtools::install_github("stnava/ANTsR")
## devtools::install_github("muschellij2/extrantsr")
## install.packages("scales")
## ------------------------------------------------------------------------
rm(list=ls())
library(fslr)
library(extrantsr)
library(scales)
options(fsl.path="/usr/local/fsl/")
img.name = "SUBJ0001-02-MPRAGE.nii.gz"
img.stub = nii.stub(img.name)
n4img = bias_correct( img.name, correction = "N4",
outfile = paste0(img.stub, "_N4.nii.gz") )
## ----biascorrection_plot, cache=FALSE------------------------------------
ortho2(n4img)
## ----bet, dependson="biascorrection"-------------------------------------
bet = fslbet_robust(img = n4img,
retimg = TRUE,
remove.neck = TRUE,
robust.mask = FALSE,
template.file = file.path( fsldir(),
"data/standard",
"MNI152_T1_1mm_brain.nii.gz"),
template.mask = file.path( fsldir(),
"data/standard",
"MNI152_T1_1mm_brain_mask.nii.gz"),
outfile = paste0(img.stub, "_N4_BET"),
correct = FALSE)
ortho2(n4img, bet > 0,
col.y=alpha("red", 0.5))
fast = fast(file = bet,
outfile = paste0(img.stub, "_BET_FAST"),
opts = '-N')
ortho2(bet, fast == 3,
col.y=alpha("red", 0.5))
ortho2(bet, fast == 1, col.y=alpha("red", 0.5), text="CSF Results")
ortho2(bet, fast == 2, col.y=alpha("red", 0.5), text="Gray Matter\nResults")
