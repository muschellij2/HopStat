setwd(file.path(wpdir, folname))
system(sprintf("open %s", shQuote(rmdname)))
source('~/.active-rstudio-document', echo=TRUE)
library(ROCR)
head(.define.environments)
data(ROCR.simple)
pred <- prediction(ROCR.simple$predictions,ROCR.simple$labels)
perf.jaccard = myperformance(pred, measure = "jaccard",
funnames = "jaccard", longnames="Jaccard Index",
exprs = list(c("cutoffs", "tp / (tp + fp + fn)")))
plot(perf.jaccard)
```
perf.dice = myperformance(pred, measure = "dice")
plot(perf.dice)
perf.both = myperformance(pred, x.measure = "dice",
measure = "jaccard",
funnames = c("dice", "jaccard"),
longnames=c("Dice Index", "Jaccard Index"),
exprs = list(c("cutoffs", "2 * tp / (2*tp + fp + fn)"),
c("cutoffs", "tp / (tp + fp + fn)")))
funnames = c("dice", "jaccard"),
longnames=c("Dice Index", "Jaccard Index"),
exprs = list(c("cutoffs", "2 * tp / (2*tp + fp + fn)"),
c("cutoffs", "tp / (tp + fp + fn)"))
funnames = c("dice", "jaccard")
longnames=c("Dice Index", "Jaccard Index")
exprs = list(c("cutoffs", "2 * tp / (2*tp + fp + fn)"),
c("cutoffs", "tp / (tp + fp + fn)"))
require(ROCR)
# get original environments
envir.list <- ROCR::.define.environments()
long.unit.names = envir.list$long.unit.names
function.names = envir.list$function.names
obligatory.x.axis = envir.list$obligatory.x.axis
optional.arguments = envir.list$optional.arguments
default.values = envir.list$default.values
.performance.dice <- function (predictions, labels, cutoffs, fp,
tp, fn, tn, n.pos,
n.neg, n.pos.pred, n.neg.pred) {
list(cutoffs, 2 * tp / (2*tp + fp + fn))
}
assign("dice", .performance.dice,
envir=function.names)
assign("dice", "Sorensenâ€“Dice coefficient",
envir=long.unit.names)
stopifnot(
length(funnames) == length(longnames) &&
length(funnames) == length(exprs)
)
stopifnot(length(optargs) == length(funnames))
funnames
plot(perf.both)
perf.both = myperformance(pred, x.measure = "dice",
measure = "jaccard",
funnames = c("dice", "jaccard"),
longnames=c("Dice Index", "Jaccard Index"),
exprs = list(c("cutoffs", "2 * tp / (2*tp + fp + fn)"),
c("cutoffs", "tp / (tp + fp + fn)")))
plot(perf.both)
rm(list=ls())
abline(a=0, b=1)
source('~/.active-rstudio-document', echo=TRUE)
knit("Adding_Cost_Functions_to_ROCR.Rmd", envir=.GlobalEnv)
knit("Adding_Cost_Functions_to_ROCR.Rmd", envir=.GlobalEnv)
perf.jaccard
plot(perf.jaccard@y.values[[1]], perf.dice@y.values[[1]])
perf.both = myperformance(pred, x.measure = "dice",
measure = "jaccard",
funnames = c("dice", "jaccard"),
longnames=c("Dice Index", "Jaccard Index"),
exprs = list(c("cutoffs", "2 * tp / (2*tp + fp + fn)"),
c("cutoffs", "tp / (tp + fp + fn)")))
plot(perf.both)
perf.both@x.values
perf.both@y.values
xx = cbind(dice =perf.both@x.values[[1]], jaccard=perf.both@y.values[[1]])
plot(xx)
plot(xx, type='l')
xx = xx[ order(xx[, "dice"]), ]
plot(xx, type='l')
abline(a=0, b=1)
head(xx)
xx = cbind(dice =perf.jaccard@y.values[[1]], jaccard=perf.dice@y.values[[1]])
xx
plot(xx)
source('~/.active-rstudio-document', echo=TRUE)
perf.both = myperformance(pred, x.measure = "dice2",
measure = "jaccard",
funnames = c("dice2", "jaccard"),
longnames=c("Dice Index", "Jaccard Index"),
exprs = list(c("cutoffs", "tp / (2*tp + fp + fn)"),
c("cutoffs", "tp / (tp + fp + fn)")))
rm(list=ls())
perf.both = myperformance(pred, x.measure = "dice",
measure = "jaccard",
funnames = "jaccard",
longnames=c("Jaccard Index"),
exprs = list(c("cutoffs", "tp / (tp + fp + fn)")))
knit("Adding_Cost_Functions_to_ROCR.Rmd")
plot(perf.both)
abline(a=0, b=1, col="red")
perf.both = myperformance(pred, x.measure = "blah",
measure = "jaccard",
funnames = c("jaccard", "blah"),
longnames=c("Jaccard Index", "blah"),
exprs = list(c("cutoffs", "tp / (tp + fp + fn)"),
c("cutoffs", "tn/fn")))
plot(perf.both)
knit("Adding_Cost_Functions_to_ROCR.Rmd")
source('~/.active-rstudio-document', echo=TRUE)
knit("Adding_Cost_Functions_to_ROCR.Rmd", envir = .GlobalEnv)
perf.both = myperformance(pred, x.measure = "blah",
measure = "jaccard",
funnames = c("jaccard", "blah"),
longnames=c("Jaccard Index", "blah"),
exprs = list(c("cutoffs", "tp / (tp + fp + fn)"),
c("cutoffs", "tn/fn")))
.define.environments()
x = .define.environments()
x$function.names
function.names = x$function.names
knit("Adding_Cost_Functions_to_ROCR.Rmd", envir = .GlobalEnv)
perf.both = myperformance(pred, x.measure = "blah",
measure = "jaccard",
funnames = c("jaccard", "blah"),
longnames=c("Jaccard Index", "blah"),
exprs = list(c("cutoffs", "tp / (tp + fp + fn)"),
c("cutoffs", "tn/fn")))
knit("Adding_Cost_Functions_to_ROCR.Rmd", envir = .GlobalEnv)
perf.both = myperformance(pred, x.measure = "blah",
measure = "jaccard",
funnames = c("jaccard", "blah"),
longnames=c("Jaccard Index", "blah"),
exprs = list(c("cutoffs", "tp / (tp + fp + fn)"),
c("cutoffs", "tn/fn")))
knit("Adding_Cost_Functions_to_ROCR.Rmd", envir = .GlobalEnv)
perf.both = myperformance(pred, x.measure = "blah",
measure = "jaccard",
funnames = c("jaccard", "blah"),
longnames=c("Jaccard Index", "blah"),
exprs = list(c("cutoffs", "tp / (tp + fp + fn)"),
c("cutoffs", "tn/fn")))
plot(perf.both)
exprs[[1]][1] = "cutoffs"
exprs = list(); exprs[[1]][1] = "cutoffs"
exprs = list(); exprs[[1]] = c("cutoffs")
parse(text=exprs[[iname]][[2]])
iname = 1
exprs = list(); exprs[[1]] = c("cutoffs", "cutoffs")
parse(text=exprs[[iname]][[2]])
eval(as.expression(
parse(text=exprs[[iname]][[2]])
))
?eval
iname = 1
eval(inae)
eval(iname)
knit("Adding_Cost_Functions_to_ROCR.Rmd", envir = .GlobalEnv)
perf.both = myperformance(pred, x.measure = "blah",
measure = "jaccard",
funnames = c("jaccard", "blah"),
longnames=c("Jaccard Index", "blah"),
exprs = list(c("cutoffs", "tp / (tp + fp + fn)"),
c("cutoffs", "tn/fn")))
f <- function(y) function() y
lf <- vector("list", 5)
for (i in seq_along(lf)) lf[[i]] <- f(i)
lf[[1]]()  # returns 5
lf[[1]]
library(knitr)
knit("Adding_Cost_Functions_to_ROCR.Rmd")
knit("Adding_Cost_Functions_to_ROCR.Rmd", envir = .GlobalEnv)
myperformance
perf.both = myperformance(pred, x.measure = "blah",
measure = "jaccard",
funnames = c("jaccard", "blah"),
longnames=c("Jaccard Index", "blah"),
exprs = list(c("cutoffs", "tp / (tp + fp + fn)"),
c("cutoffs", "tn/fn")))
ie1
ie1
knit("Adding_Cost_Functions_to_ROCR.Rmd", envir = .GlobalEnv)
perf.both = myperformance(pred, x.measure = "blah",
measure = "jaccard",
funnames = c("jaccard", "blah"),
longnames=c("Jaccard Index", "blah"),
exprs = list(c("cutoffs", "tp / (tp + fp + fn)"),
c("cutoffs", "tn/fn")))
knit("Adding_Cost_Functions_to_ROCR.Rmd", envir = .GlobalEnv)
perf.both = myperformance(pred, x.measure = "blah",
measure = "jaccard",
funnames = c("jaccard", "blah"),
longnames=c("Jaccard Index", "blah"),
exprs = list(c("cutoffs", "tp / (tp + fp + fn)"),
c("cutoffs", "tn/fn")))
plot(perf.both)
perf.both@x.name
both = data.frame(cbind(x= perf.both@x.values[[1]], y = perf.both@y.values[[1]]))
colnames(both) = c(perf.both@x.name, perf.both@y.name)
both = data.frame(cbind(x= perf.both@x.values[[1]], y = perf.both@y.values[[1]]))
both = both[ order(both$x), ]
colnames(both) = c(perf.both@x.name, perf.both@y.name)
plot(both)
perf.both = myperformance(pred, x.measure = "blah",
measure = "jaccard",
funnames = c("jaccard", "blah"),
longnames=c("Jaccard Index", "blah"),
exprs = list(c("cutoffs", "tp / (tp + fp + fn)"),
c("cutoffs", "tn/fn")))
plot(perf.both)
abline(a=0, b=1, col="red")
both = data.frame(cbind(x= perf.both@x.values[[1]], y = perf.both@y.values[[1]]))
both = both[ order(both$x), ]
head(both)
both
both = data.frame(cbind(x= perf.both@x.values[[1]], y = perf.both@y.values[[1]]))
both = both[ order(both$y), ]
colnames(both) = c(perf.both@x.name, perf.both@y.name)
plot(both, type="l")
perf.both = myperformance(pred, x.measure = "dice",
measure = "jaccard",
funnames = c("dice", "jaccard"),
longnames=c("Dice Index", "Jaccard Index"),
exprs = list(c("cutoffs", "2 * tp / (2*tp + fp + fn)"),
c("cutoffs", "tp / (tp + fp + fn)")))
plot(perf.both)
both = data.frame(cbind(x= perf.both@x.values[[1]], y = perf.both@y.values[[1]]))
both = both[ order(both$x), ]
colnames(both) = c(perf.both@x.name, perf.both@y.name)
plot(both, type="l")
library(knitr)
wp = TRUE
knit2wp2 = function (input, title = "A post from knitr", ..., shortcode = FALSE,
encoding = getOption("encoding"), publish = TRUE)
{
out = knit(input, encoding = encoding)
on.exit(unlink(out))
con = file(out, encoding = encoding)
on.exit(close(con), add = TRUE)
content = knitr:::native_encode(readLines(con, warn = FALSE))
content = paste(content, collapse = "\n")
content = markdown::markdownToHTML(text = content, fragment.only = TRUE)
shortcode = rep(shortcode, length.out = 2L)
if (shortcode[1]) {
content = gsub("<pre><code class=\"([[:alpha:]]+)\">(.+?)</code></pre>",
"[sourcecode language=\"\\1\"]\\2[/sourcecode]",
content)
}
content = gsub("<pre><code( class=\"no-highlight\"|)>(.+?)</code></pre>",
if (shortcode[2])
"[sourcecode]\\2[/sourcecode]"
else "<pre>\\2</pre>", content)
content = knitr:::native_encode(content, "UTF-8")
title = knitr:::native_encode(title, "UTF-8")
return(list(content = content, title=title))
}
#### set up new post
wpfol <- "WordPress_Hopstat"
wpdir <- file.path("~/Dropbox/Public", wpfol)
wpdir <- path.expand(wpdir)
mytitle <- folname <- "Adding Cost Functions to ROCR"
# mytitle <- folname <- "A small introduction to ROCR"
# folname <- "Converting LaTeX to MS Word"
folname = gsub(" ", "_", folname)
folname = gsub(",", "_", folname)
folname = gsub("'", "_", folname)
folname = gsub(":", "_", folname)
folname = gsub(";", "_", folname)
# categories = c("bmorebiostats")
# categories = "rbloggers"
categories = c("rbloggers", "bmorebiostats")
#"bmorebiostats"
publish = FALSE
fol = file.path(wpdir, folname)
rmdname <- file.path(wpdir, folname,  paste0(folname, ".Rmd"))
if (!file.exists(fol)) {
dir.create(fol)
}
if (!file.exists(rmdname)) {
file.create(rmdname)
addtxt = paste0("```{r label=opts, results='hide', echo=FALSE, message = FALSE, warning=FALSE}",
"\n", "library(knitr)\n", "opts_chunk$set(echo=FALSE, ",
"prompt=FALSE, message=FALSE, warning=FALSE, ",
'comment="", ', "results='hide')\n", "```")
cat(addtxt, file=rmdname)
system(sprintf("open %s", shQuote(rmdname)))
}
setwd(file.path(wpdir, folname))
######### Send it to the Website
if (wp){
if (!require('RWordPress'))
install.packages('RWordPress',
repos = 'http://www.omegahat.org/R',
type = 'source')
library(RWordPress)
pwd = 'hopkinsstat'
stopifnot(pwd != 'PWD')
options(WordpressLogin = c(strictlystat = pwd))
uname <- names(getOption("WordpressLogin"))
options( WordpressURL = 'http://hopstat.wordpress.com/xmlrpc.php')
### change this for the new folder
stopifnot(file.exists(rmdname))
opts_knit$set(base.dir = wpdir)
#     opts_knit$set(
#       base.url = paste0(
#         'https://dl.dropboxusercontent.com/u/600586/', wpfol, '/'),
#                   base.dir = wpdir)
opts_knit$set(upload.fun = imgur_upload,
base.url = NULL) # upload all images to imgur.com
#   input = rmdname
#   title = mytitle
#   shortcode= TRUE
#   encoding = getOption("encoding")
#   debug({knit2wp(rmdname,
#           title = mytitle, categories = categories,
#           publish=FALSE)})
x = knit2wp2(input = rmdname,
title = mytitle, categories = categories,
shortcode=c(TRUE, TRUE),
publish=publish)
#
writeLines(text =x$content, con=gsub("[.]Rmd$", "_text.html", rmdname))
}
library(knitr)
wp = TRUE
knit2wp2 = function (input, title = "A post from knitr", ..., shortcode = FALSE,
encoding = getOption("encoding"), publish = TRUE)
{
out = knit(input, encoding = encoding)
on.exit(unlink(out))
con = file(out, encoding = encoding)
on.exit(close(con), add = TRUE)
content = knitr:::native_encode(readLines(con, warn = FALSE))
content = paste(content, collapse = "\n")
content = markdown::markdownToHTML(text = content, fragment.only = TRUE)
shortcode = rep(shortcode, length.out = 2L)
if (shortcode[1]) {
content = gsub("<pre><code class=\"([[:alpha:]]+)\">(.+?)</code></pre>",
"[sourcecode language=\"\\1\"]\\2[/sourcecode]",
content)
}
content = gsub("<pre><code( class=\"no-highlight\"|)>(.+?)</code></pre>",
if (shortcode[2])
"[sourcecode]\\2[/sourcecode]"
else "<pre>\\2</pre>", content)
content = knitr:::native_encode(content, "UTF-8")
title = knitr:::native_encode(title, "UTF-8")
return(list(content = content, title=title))
}
#### set up new post
wpfol <- "WordPress_Hopstat"
wpdir <- file.path("~/Dropbox/Public", wpfol)
wpdir <- path.expand(wpdir)
mytitle <- folname <- "Adding Cost Functions to ROCR"
# mytitle <- folname <- "A small introduction to ROCR"
# folname <- "Converting LaTeX to MS Word"
folname = gsub(" ", "_", folname)
folname = gsub(",", "_", folname)
folname = gsub("'", "_", folname)
folname = gsub(":", "_", folname)
folname = gsub(";", "_", folname)
# categories = c("bmorebiostats")
# categories = "rbloggers"
categories = c("rbloggers", "bmorebiostats")
#"bmorebiostats"
publish = FALSE
fol = file.path(wpdir, folname)
rmdname <- file.path(wpdir, folname,  paste0(folname, ".Rmd"))
if (!file.exists(fol)) {
dir.create(fol)
}
if (!file.exists(rmdname)) {
file.create(rmdname)
addtxt = paste0("```{r label=opts, results='hide', echo=FALSE, message = FALSE, warning=FALSE}",
"\n", "library(knitr)\n", "opts_chunk$set(echo=FALSE, ",
"prompt=FALSE, message=FALSE, warning=FALSE, ",
'comment="", ', "results='hide')\n", "```")
cat(addtxt, file=rmdname)
system(sprintf("open %s", shQuote(rmdname)))
}
setwd(file.path(wpdir, folname))
######### Send it to the Website
if (wp){
if (!require('RWordPress'))
install.packages('RWordPress',
repos = 'http://www.omegahat.org/R',
type = 'source')
library(RWordPress)
pwd = 'hopkinsstat'
stopifnot(pwd != 'PWD')
options(WordpressLogin = c(strictlystat = pwd))
uname <- names(getOption("WordpressLogin"))
options( WordpressURL = 'http://hopstat.wordpress.com/xmlrpc.php')
### change this for the new folder
stopifnot(file.exists(rmdname))
opts_knit$set(base.dir = wpdir)
#     opts_knit$set(
#       base.url = paste0(
#         'https://dl.dropboxusercontent.com/u/600586/', wpfol, '/'),
#                   base.dir = wpdir)
opts_knit$set(upload.fun = imgur_upload,
base.url = NULL) # upload all images to imgur.com
#   input = rmdname
#   title = mytitle
#   shortcode= TRUE
#   encoding = getOption("encoding")
#   debug({knit2wp(rmdname,
#           title = mytitle, categories = categories,
#           publish=FALSE)})
x = knit2wp2(input = rmdname,
title = mytitle, categories = categories,
shortcode=c(TRUE, TRUE),
publish=publish)
}
knit("Adding_Cost_Functions_to_ROCR.Rmd")
knit("Adding_Cost_Functions_to_ROCR.Rmd")
knit("Adding_Cost_Functions_to_ROCR.Rmd", envir=.GlobalEnv)
library(knitr)
knit("Adding_Cost_Functions_to_ROCR.Rmd")
library(knitr)
wp = TRUE
knit2wp2 = function (input, title = "A post from knitr", ..., shortcode = FALSE,
encoding = getOption("encoding"), publish = TRUE)
{
out = knit(input, encoding = encoding)
on.exit(unlink(out))
con = file(out, encoding = encoding)
on.exit(close(con), add = TRUE)
content = knitr:::native_encode(readLines(con, warn = FALSE))
content = paste(content, collapse = "\n")
content = markdown::markdownToHTML(text = content, fragment.only = TRUE)
shortcode = rep(shortcode, length.out = 2L)
if (shortcode[1]) {
content = gsub("<pre><code class=\"([[:alpha:]]+)\">(.+?)</code></pre>",
"[sourcecode language=\"\\1\"]\\2[/sourcecode]",
content)
}
content = gsub("<pre><code( class=\"no-highlight\"|)>(.+?)</code></pre>",
if (shortcode[2])
"[sourcecode]\\2[/sourcecode]"
else "<pre>\\2</pre>", content)
content = knitr:::native_encode(content, "UTF-8")
title = knitr:::native_encode(title, "UTF-8")
return(list(content = content, title=title))
}
#### set up new post
wpfol <- "WordPress_Hopstat"
wpdir <- file.path("~/Dropbox/Public", wpfol)
wpdir <- path.expand(wpdir)
mytitle <- folname <- "Adding Cost Functions to ROCR"
# mytitle <- folname <- "A small introduction to ROCR"
# folname <- "Converting LaTeX to MS Word"
folname = gsub(" ", "_", folname)
folname = gsub(",", "_", folname)
folname = gsub("'", "_", folname)
folname = gsub(":", "_", folname)
folname = gsub(";", "_", folname)
# categories = c("bmorebiostats")
# categories = "rbloggers"
categories = c("rbloggers", "bmorebiostats")
#"bmorebiostats"
publish = FALSE
fol = file.path(wpdir, folname)
rmdname <- file.path(wpdir, folname,  paste0(folname, ".Rmd"))
if (!file.exists(fol)) {
dir.create(fol)
}
if (!file.exists(rmdname)) {
file.create(rmdname)
addtxt = paste0("```{r label=opts, results='hide', echo=FALSE, message = FALSE, warning=FALSE}",
"\n", "library(knitr)\n", "opts_chunk$set(echo=FALSE, ",
"prompt=FALSE, message=FALSE, warning=FALSE, ",
'comment="", ', "results='hide')\n", "```")
cat(addtxt, file=rmdname)
system(sprintf("open %s", shQuote(rmdname)))
}
setwd(file.path(wpdir, folname))
######### Send it to the Website
if (wp){
if (!require('RWordPress'))
install.packages('RWordPress',
repos = 'http://www.omegahat.org/R',
type = 'source')
library(RWordPress)
pwd = 'hopkinsstat'
stopifnot(pwd != 'PWD')
options(WordpressLogin = c(strictlystat = pwd))
uname <- names(getOption("WordpressLogin"))
options( WordpressURL = 'http://hopstat.wordpress.com/xmlrpc.php')
### change this for the new folder
stopifnot(file.exists(rmdname))
opts_knit$set(base.dir = wpdir)
#     opts_knit$set(
#       base.url = paste0(
#         'https://dl.dropboxusercontent.com/u/600586/', wpfol, '/'),
#                   base.dir = wpdir)
opts_knit$set(upload.fun = imgur_upload,
base.url = NULL) # upload all images to imgur.com
#   input = rmdname
#   title = mytitle
#   shortcode= TRUE
#   encoding = getOption("encoding")
#   debug({knit2wp(rmdname,
#           title = mytitle, categories = categories,
#           publish=FALSE)})
x = knit2wp2(input = rmdname,
title = mytitle, categories = categories,
shortcode=c(TRUE, TRUE),
publish=publish)
#
writeLines(text =x$content, con=gsub("[.]Rmd$", "_text.html", rmdname))
}
