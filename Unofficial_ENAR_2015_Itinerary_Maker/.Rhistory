df = df[ !df$sess %in% c(1:9, 35, 48,  61), ]
d = df[ df$sess == "10", ]
# times = c("1:45", "10:00", "10:10", "10:15", "10:30", "10:35", "10:45",
#           "10:50", "10:55", "11:00", "11:10", "11:15", "11:20", "11:30",
#           "11:45", "11:50", "12:00", "12:05", "12:10", "12:15", "2:00",
#           "2:05", "2:10", "2:15", "2:25", "2:30", "2:35", "2:45", "3:00",
#           "3:05", "3:15", "3:25", "3:30", "3:45", "4:00", "4:05", "4:10",
#           "4:15", "4:25", "4:30", "4:35", "4:45", "5:00", "5:05", "5:15",
#           "5:25", "8:30", "8:45", "8:50", "8:55", "9:00", "9:10", "9:15",
#           "9:20", "9:30", "9:45", "9:50")
df = ddply(df, .(sess), function(d){
d$sess_id  = cumsum(d$times)
d = d[ d$sess_id > 0, , drop=FALSE]
tab = table(d$sess_id)
dd = ddply(d, .(sess_id), function(x){
xx = paste(x$raw, collapse= " ")
x = x[1,]
x$raw = xx
x
})
#   if (any(tab > 3)){
#     print(unique(d$sess))
#     sess_id = names(tab)[tab > 2]
#     print(d[ d$sess_id %in% sess_id, ])
#     stop("here")
#   }
})
post = post[ !post$raw %in% "POSTER PRESENTATIONS", ]
post = post[ !grepl("Riverfront Ballroom", post$raw), ]
d = post[post$sess ==61, ]
post = ddply(post, .(sess), function(d){
d$sess_id  = cumsum(grepl("^\\d(?:|\\d)[a-z][.]", d$raw))
d = d[ d$sess_id > 0, , drop=FALSE]
tab = table(d$sess_id)
dd = ddply(d, .(sess_id), function(x){
xx = paste(x$raw, collapse= " ")
x = x[1,]
x$raw = str_trim(xx)
x
})
})
post$raw = gsub("^\\d(?:|\\d)[a-z][.] (.*)", "\\1", post$raw)
d = post[post$sess ==61, ]
df$tt = as.numeric(sapply(strsplit(df$time, ":"), `[`, 1))
df$am = "AM"
df$am[ df$tt %in% c(1:7, 12)] = "PM"
df$time = paste0(df$time, ":00 ", df$am )
df$sorttime = as.POSIXct(df$time, format = "%r")
df$tt = df$am = NULL
df$times = grepl("^\\d(|\\d):\\d\\d", df$raw)
df$raw = gsub("^(\\d(?:\\d|):\\d\\d) (.*)", "\\2",
df$raw)
df$times = NULL
df$sess = as.numeric(df$sess)
df = df[ order(df$sess, df$sess_id), ]
df$extra = df$id = df$isday = df$day = NULL
post$extra = post$id = post$isday = post$day = NULL
load(file = file.path(datadir, "ENAR_2015_Session_Dates.Rda"))
posters$session = posters$raw
post$inpost = 1
posters$inpp = 1
post = merge(post, posters[, c("sess", "session", "day", "date",
"start_dt", "stop_dt", "where", "inpp")],
by="sess", all=TRUE)
stopifnot(all(!is.na(post$inpost)))
stopifnot(all(!is.na(post$inpp)))
post$inpp = post$inpost = post$times = post$time = NULL
program$session = program$raw
df$indf = 1
program$inprog = 1
df = merge(df, program[, c("sess", "session", "day", "start_dt",
"stop_dt", "date", "where", "inprog")],
by="sess", all=TRUE)
stopifnot(all(!is.na(df$indf)))
stopifnot(all(!is.na(df$inprog)))
df$inprog = df$indf = df$times = NULL
df$start_dt_sess = paste(df$date, df$time)
df$start_dt_sess = as.POSIXct(df$start_dt_sess, format = "%m/%d/%Y %r")
df = df[ order(df$sess, df$sess_id), ]
d = df[ df$sess == 28, ]
nrows = ddply(df, .(sess), nrow)
colnames(nrows)[2]= "N"
nrows = nrows[order(nrows$N),]
df$stop_dt_sess = df$start_dt_sess
#
df = ddply(df, .(sess), function(d){
#   print(nrow(d))
d$stop_dt_sess[nrow(d)] = d$stop_dt[nrow(d)]
if (nrow(d) > 1){
d$stop_dt_sess[seq(1, nrow(d)-1)] =  d$start_dt_sess[seq(2, nrow(d))]
}
d
})
stopifnot(all(df$start_dt_sess != df$stop_dt_sess))
################################################
# Final Products
################################################
df$date = as.Date(df$date, format = "%m/%d/%Y")
df = df[ order(df$date, df$sess, df$start_dt, df$sess_id, df$start_dt_sess), ]
df = df[, c("raw", "session", "day", "start_dt", "stop_dt", "where", "date",
"start_dt_sess", "stop_dt_sess", "sess_id", "sess")]
df$class = "program"
post$date = as.Date(post$date, format = "%m/%d/%Y")
post = post[ order(post$date, post$sess, post$start_dt, post$sess_id), ]
post$start_dt_sess = post$start_dt
post$stop_dt_sess = post$stop_dt
post = post[, c("raw", "session", "day", "start_dt", "stop_dt", "where", "date",
"start_dt_sess", "stop_dt_sess", "sess_id", "sess")]
post$class = "poster"
alldf = rbind(df, post)
alldf = alldf[ order(alldf$date, alldf$sess, alldf$start_dt,
alldf$sess_id, alldf$start_dt_sess), ]
########################################
# Adding in SC and Tutorial data
########################################
sc$session = sc$raw
sc$start_dt_sess = sc$start_dt
sc$stop_dt_sess = sc$stop_dt
sc$sess_id = NA
sc = sc[, c("raw", "session", "day", "start_dt", "stop_dt", "where", "date",
"start_dt_sess", "stop_dt_sess", "sess_id", "sess")]
sc$class = "shortcourse"
alldf = rbind(alldf, sc)
tut$session = tut$raw
tut$start_dt_sess = tut$start_dt
tut$stop_dt_sess = tut$stop_dt
tut$sess_id = NA
tut = tut[, c("raw", "session", "day", "start_dt", "stop_dt", "where", "date",
"start_dt_sess", "stop_dt_sess", "sess_id", "sess")]
tut$class = "tutorial"
alldf = rbind(alldf, tut)
rm(list=ls())
library(tm)
library(stringr)
library(zoo)
library(plyr)
library(wordcloud)
library(reshape2)
library(tools)
homedir = "~/Dropbox/database/ENAR_scraper"
homedir = path.expand(homedir)
# pdfdir = file.path(homedir, "pdfs")
txtdir = file.path(homedir, "txts")
datadir = file.path(homedir, "data")
mid = function (x, n = 6L, ...) {
stopifnot(length(n) == 1L)
nr = nrow(x)
mid = floor(nr/2)
n2 = floor(n/2)
start = max( mid - n2, 1)
end = min( mid + n2, nr)
ind = seq(start, end, by=1)
x[ind, , drop = FALSE]
}
txts = dir(path=txtdir, pattern="abstracts", full.names=TRUE)
txts = txts[grepl("2015", txts)]
txt = txts[!grepl("old", txts)]
if (length(txt)== 0){
stop("No data")
}
raw = readLines(txt)
showNonASCIIfile(txt)
##############################
# Creating a data.frame
##############################
df = data.frame(raw=raw, stringsAsFactors=FALSE)
##############################
# Removing whitespace
##############################
df$raw = str_trim(df$raw)
df$raw = gsub("\\s+", " ", df$raw)
df = df[ !df$raw %in% "", , drop=FALSE]
df = df[ !is.na(df$raw), , drop=FALSE]
##############################
# Removing sponsors
##############################
df$extra = grepl("^((Sponsor|Chair|Organizer)(|s)):", df$raw)
stopifnot(all(df$extra[grepl("Sponsor", df$raw)]))
stopifnot(all(df$extra[grepl("Chair", df$raw)]))
stopifnot(all(df$extra[grepl("Organizer", df$raw)]))
# make sure all sponsors removed
# stopifnot(!any(grepl("Sponsor", df$raw[df$spons])))
# df$spons = NULL
##############################
# Removing whitespace again
##############################
df$raw = str_trim(df$raw)
df$raw = gsub("\\s+", " ", df$raw)
# removing empty entries
df = df[ !df$raw %in% "", , drop=FALSE]
df = df[ !is.na(df$raw), , drop=FALSE]
##############################
# grabbing the ID
df$id = grepl("^\\d(|\\d)(|\\d)\\.", df$raw)
df$id = grepl("^SC\\d(|\\d):", df$raw) | df$id
df$id = grepl("^T\\d(|\\d):", df$raw) | df$id
############################################################
# Making session
df$sess = NA
ss = sapply(strsplit(df$raw[df$id], " "), function(x){
x[1]
})
ss = gsub("[.]", "", ss)
ss = gsub(":", "", ss)
df$sess[df$id] = ss
fsess = df$sess[!is.na(df$sess)][1]
first.sess = which(df$sess %in% fsess)
df$sess[ seq(1, first.sess)] = fsess
df$sess[ grepl("DIVERSITY WORKSHOP", df$raw) ] = "DIVERSITY"
df$sess[ grepl("REFRESHMENT BREAK WITH OUR EXHIBITORS", df$raw) ] = "REFRESH"
df$sess[ grepl("ROUNDTABLE LUNCHEONS", df$raw) ] = "LUNCH"
df$sess[ grepl("REGIONAL ADVISORY BOARD", df$raw) ] = "RAB"
df$sess[ grepl("LUNCHEON MEETING", df$raw) ] = "INVITELUNCH"
df$sess[ grepl("REGIONAL COMMITTEE LUNCHEON MEETING", df$raw) ] = "REG_INVITELUNCH"
df$sess[ grepl("PLACEMENT SERVICE", df$raw) ] = "PLACEMENT"
df$sess[ grepl("CENS STUDENT MIXER", df$raw) ] = "CENS"
df$sess[ grepl("PRESIDENT'S RECEPTION", df$raw) ] = "PREZ"
df$sess[ grepl("SOCIAL MIXER AND POSTER SESSION", df$raw) ] = "POSTER"
df$sess[ grepl("ENAR BUSINESS MEETING", df$raw) ] = "ENARBIZ"
df$sess[ grepl("TUESDAY NIGHT EVENT", df$raw) ] = "CRUISE"
df$sess[ grepl("PRESIDENTIAL INVITED ADDRESS", df$raw)] = "75"
df$sess = na.locf(df$sess, na.rm=FALSE)
stopifnot(all(!is.na(df$sess)))
############################################################
############################################################
# Getting Day
daystr = "Sunday|Monday|Tuesday|Wednesday"
daystr = toupper(daystr)
df$isday = grepl(daystr, df$raw)
df$day[df$isday] = df$raw[df$isday]
df$day = na.locf(df$day, na.rm=FALSE)
days = c("MONDAY, MARCH 16", "SUNDAY, MARCH 15", "TUESDAY, MARCH 17",
"WEDNESDAY, MARCH 18")
df = df[ !df$raw %in% days, ]
############################################################
df$times = grepl("^\\d(|\\d):\\d\\d", df$raw)
df$day = df$time = NA
df$time[df$times] = gsub("^(\\d(?:|\\d):\\d\\d) (.*)", "\\1",
df$raw[df$times])
df$time = na.locf(df$time, na.rm=FALSE)
bad_times = grepl("\\d(|\\d):\\d\\d", df$raw) & !df$times
stopifnot(all(!bad_times))
# df$raw[df$times] = gsub("^(\\d(\\d|):\\d\\d) (.*)", "\\2",
#                         df$raw[df$times])
df$raw[df$times] = gsub("^(\\d(?:\\d|):\\d\\d) (.*)", "\\2",
df$raw[df$times])
#################################
# Take out sponsor/chair/organizer
################################
df = df[ !df$extra, ]
#################################
# Separate program from posters
################################
post = df[ df$sess %in% c(1:9, 35, 48, 61),]
df = df[ !df$sess %in% c(1:9, 35, 48,  61), ]
d = df[ df$sess == "10", ]
# times = c("1:45", "10:00", "10:10", "10:15", "10:30", "10:35", "10:45",
#           "10:50", "10:55", "11:00", "11:10", "11:15", "11:20", "11:30",
#           "11:45", "11:50", "12:00", "12:05", "12:10", "12:15", "2:00",
#           "2:05", "2:10", "2:15", "2:25", "2:30", "2:35", "2:45", "3:00",
#           "3:05", "3:15", "3:25", "3:30", "3:45", "4:00", "4:05", "4:10",
#           "4:15", "4:25", "4:30", "4:35", "4:45", "5:00", "5:05", "5:15",
#           "5:25", "8:30", "8:45", "8:50", "8:55", "9:00", "9:10", "9:15",
#           "9:20", "9:30", "9:45", "9:50")
df = ddply(df, .(sess), function(d){
d$sess_id  = cumsum(d$times)
d = d[ d$sess_id > 0, , drop=FALSE]
tab = table(d$sess_id)
dd = ddply(d, .(sess_id), function(x){
xx = paste(x$raw, collapse= " ")
x = x[1,]
x$raw = xx
x
})
#   if (any(tab > 3)){
#     print(unique(d$sess))
#     sess_id = names(tab)[tab > 2]
#     print(d[ d$sess_id %in% sess_id, ])
#     stop("here")
#   }
})
post = post[ !post$raw %in% "POSTER PRESENTATIONS", ]
post = post[ !grepl("Riverfront Ballroom", post$raw), ]
d = post[post$sess ==61, ]
post = ddply(post, .(sess), function(d){
d$sess_id  = cumsum(grepl("^\\d(?:|\\d)[a-z][.]", d$raw))
d = d[ d$sess_id > 0, , drop=FALSE]
tab = table(d$sess_id)
dd = ddply(d, .(sess_id), function(x){
xx = paste(x$raw, collapse= " ")
x = x[1,]
x$raw = str_trim(xx)
x
})
})
post$raw = gsub("^\\d(?:|\\d)[a-z][.] (.*)", "\\1", post$raw)
d = post[post$sess ==61, ]
df$tt = as.numeric(sapply(strsplit(df$time, ":"), `[`, 1))
df$am = "AM"
df$am[ df$tt %in% c(1:7, 12)] = "PM"
df$time = paste0(df$time, ":00 ", df$am )
df$sorttime = as.POSIXct(df$time, format = "%r")
df$tt = df$am = NULL
df$times = grepl("^\\d(|\\d):\\d\\d", df$raw)
df$raw = gsub("^(\\d(?:\\d|):\\d\\d) (.*)", "\\2",
df$raw)
df$times = NULL
df$sess = as.numeric(df$sess)
df = df[ order(df$sess, df$sess_id), ]
df$extra = df$id = df$isday = df$day = NULL
post$extra = post$id = post$isday = post$day = NULL
load(file = file.path(datadir, "ENAR_2015_Session_Dates.Rda"))
posters$session = posters$raw
post$inpost = 1
posters$inpp = 1
post = merge(post, posters[, c("sess", "session", "day", "date",
"start_dt", "stop_dt", "where", "inpp")],
by="sess", all=TRUE)
stopifnot(all(!is.na(post$inpost)))
stopifnot(all(!is.na(post$inpp)))
post$inpp = post$inpost = post$times = post$time = NULL
program$session = program$raw
df$indf = 1
program$inprog = 1
df = merge(df, program[, c("sess", "session", "day", "start_dt",
"stop_dt", "date", "where", "inprog")],
by="sess", all=TRUE)
stopifnot(all(!is.na(df$indf)))
stopifnot(all(!is.na(df$inprog)))
df$inprog = df$indf = df$times = NULL
df$start_dt_sess = paste(df$date, df$time)
df$start_dt_sess = as.POSIXct(df$start_dt_sess, format = "%m/%d/%Y %r")
df = df[ order(df$sess, df$sess_id), ]
d = df[ df$sess == 28, ]
nrows = ddply(df, .(sess), nrow)
colnames(nrows)[2]= "N"
nrows = nrows[order(nrows$N),]
df$stop_dt_sess = df$start_dt_sess
#
df = ddply(df, .(sess), function(d){
#   print(nrow(d))
d$stop_dt_sess[nrow(d)] = d$stop_dt[nrow(d)]
if (nrow(d) > 1){
d$stop_dt_sess[seq(1, nrow(d)-1)] =  d$start_dt_sess[seq(2, nrow(d))]
}
d
})
stopifnot(all(df$start_dt_sess != df$stop_dt_sess))
################################################
# Final Products
################################################
df$date = as.Date(df$date, format = "%m/%d/%Y")
df = df[ order(df$date, df$sess, df$start_dt, df$sess_id, df$start_dt_sess), ]
df = df[, c("raw", "session", "day", "start_dt", "stop_dt", "where", "date",
"start_dt_sess", "stop_dt_sess", "sess_id", "sess")]
df$class = "program"
post$date = as.Date(post$date, format = "%m/%d/%Y")
post = post[ order(post$date, post$sess, post$start_dt, post$sess_id), ]
post$start_dt_sess = post$start_dt
post$stop_dt_sess = post$stop_dt
post = post[, c("raw", "session", "day", "start_dt", "stop_dt", "where", "date",
"start_dt_sess", "stop_dt_sess", "sess_id", "sess")]
post$class = "poster"
alldf = rbind(df, post)
alldf = alldf[ order(alldf$date, alldf$sess, alldf$start_dt,
alldf$sess_id, alldf$start_dt_sess), ]
########################################
# Adding in SC and Tutorial data
########################################
sc$session = sc$raw
sc$start_dt_sess = sc$start_dt
sc$stop_dt_sess = sc$stop_dt
sc$sess_id = NA
sc$date = as.Date(sc$date, format = "%m/%d/%Y")
sc = sc[, c("raw", "session", "day", "start_dt", "stop_dt", "where", "date",
"start_dt_sess", "stop_dt_sess", "sess_id", "sess")]
sc$class = "shortcourse"
alldf = rbind(alldf, sc)
tut$session = tut$raw
tut$start_dt_sess = tut$start_dt
tut$stop_dt_sess = tut$stop_dt
tut$sess_id = NA
tut$date = as.Date(tut$date, format = "%m/%d/%Y")
tut = tut[, c("raw", "session", "day", "start_dt", "stop_dt", "where", "date",
"start_dt_sess", "stop_dt_sess", "sess_id", "sess")]
tut$class = "tutorial"
alldf = rbind(alldf, tut)
levs = c(sc$sess, "DIVERSITY", "PLACEMENT", 1:9, "T1", 10:22, "T2", 23:35,
"T3", 36:48, "T4", 49:61, "CENS", "PREZ", 62:75, "REG_INVITELUNCH",
"T5", 76:87, "T6", 88:99, "ENARBIZ", "CRUISE", 100:120)
extra[ extra$sess %in% levs, ]
extra[ !extra$sess %in% levs, ]
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
order(factor(c("Female", "Male")))
order(factor(c("Female", "Male"), levels=c("Male", "Female")))
alldf$sess = factor(alldf$sess, levels = levs)
head(alldf)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
head(alldf)
library(shiny)
library(shinyapps)
library(stringr)
library(tm)
library(plyr)
library(RCurl)
### make shiny max request size 30MB
options(stringsAsFactors=FALSE)
source('~/Dropbox/database/ENAR_scraper/ENAR_2015_new.R')
alldf[ is.na(alldf$auth),]
source('~/Dropbox/database/ENAR_scraper/ENAR_2015_new.R')
nchar(alldf$sess)
nchar(alldf$session)
table(nchar(alldf$session))
alldf[nchar(alldf$session) < 20,]
table(nchar(alldf$tit))
alldf[nchar(alldf$tit) < 20,"tit"]
alldf[nchar(alldf$tit) >100,"tit"]
any(grep("[*]", alldf$tit))
alldf[grep("[*]", alldf$tit),]
source('~/Dropbox/database/ENAR_scraper/ENAR_2015_new.R')
alldf[grep("[*]", alldf$tit),]
alldf[grep(",", alldf$tit),]
alldf[grep(",", alldf$tit),"tit"]
alldf[grep("niver", alldf$tit),"tit"]
source('~/Dropbox/database/ENAR_scraper/ENAR_2015_new.R')
alldf[grep("niver", alldf$tit),"tit"]
alldf[grep("olle", alldf$tit),"tit"]
source('~/Dropbox/database/ENAR_scraper/ENAR_2015_new.R')
alldf[!grepl("[*]", alldf$auth), "auth"]
alldf[!grepl("[*]", alldf$auth), c("auth", "tit"]
alldf[!grepl("[*]", alldf$auth), c("auth", "tit")]
alldf[!grepl("[*]", alldf$auth) & !grepl("Floor Discussion", alldf$tit), c("auth", "tit")]
alldf[!grepl("[*]", alldf$auth) & !grepl("Discuss", alldf$tit), c("auth", "tit")]
alldf[!grepl("[*]", alldf$auth) & !grepl("Discuss", alldf$tit) & !grepl("^R", alldf$sess), c("auth", "tit")]
alldf[!grepl("[*]", alldf$auth) & !grepl("Discuss", alldf$tit) & !grepl("^(R|SC|T)", alldf$sess), c("auth", "tit")]
alldf[!grepl("[*]", alldf$auth) & !grepl("Discuss", alldf$tit) & !grepl("^(R|SC|T)", alldf$sess) & !grepl("Student Award", alldf$auth), c("auth", "tit")]
library(knitr)
wp = TRUE
knit2wp2 = function (input, title = "A post from knitr", ..., shortcode = FALSE,
encoding = getOption("encoding"), publish = TRUE)
{
out = knit(input, encoding = encoding)
on.exit(unlink(out))
con = file(out, encoding = encoding)
on.exit(close(con), add = TRUE)
content = knitr:::native_encode(readLines(con, warn = FALSE))
content = paste(content, collapse = "\n")
content = markdown::markdownToHTML(text = content, fragment.only = TRUE)
shortcode = rep(shortcode, length.out = 2L)
if (shortcode[1]) {
content = gsub("<pre><code class=\"([[:alpha:]]+)\">(.+?)</code></pre>",
"[sourcecode language=\"\\1\"]\\2[/sourcecode]",
content)
}
content = gsub("<pre><code( class=\"no-highlight\"|)>(.+?)</code></pre>",
if (shortcode[2])
"[sourcecode]\\2[/sourcecode]"
else "<pre>\\2</pre>", content)
content = knitr:::native_encode(content, "UTF-8")
title = knitr:::native_encode(title, "UTF-8")
return(list(content = content, title=title))
}
#### set up new post
wpfol <- "WordPress_Hopstat"
wpdir <- file.path("~/Dropbox/Public", wpfol)
wpdir <- path.expand(wpdir)
# mytitle <- folname <- "A full structural MRI processing pipeline in R"
mytitle <- folname <- "Unofficial ENAR 2015 Itinerary Maker"
# folname <- "Converting LaTeX to MS Word"
folname = gsub(" ", "_", folname)
folname = gsub(",", "_", folname)
folname = gsub("'", "_", folname)
folname = gsub(":", "_", folname)
folname = gsub(";", "_", folname)
# categories = c("bmorebiostats")
# categories = "rbloggers"
categories = c("rbloggers", "bmorebiostats")
#"bmorebiostats"
publish = FALSE
fol = file.path(wpdir, folname)
rmdname <- file.path(wpdir, folname,  paste0(folname, ".Rmd"))
if (!file.exists(fol)) {
dir.create(fol)
}
if (!file.exists(rmdname)) {
file.create(rmdname)
addtxt = paste0("```{r label=opts, results='hide', echo=FALSE, message = FALSE, warning=FALSE}",
"\n", "library(knitr)\n", "opts_chunk$set(echo=FALSE, ",
"prompt=FALSE, message=FALSE, warning=FALSE, ",
'comment="", ', "results='hide')\n", "```")
cat(addtxt, file=rmdname)
system(sprintf("open %s", shQuote(rmdname)))
}
setwd(file.path(wpdir, folname))
source('~/.active-rstudio-document')
head(alldf$start_dt_sess)
head(alldf$start_dt_sess)-1
head(alldf$start_dt_sess)-60
head(alldf$start_dt_sess)+60
head(alldf$stop_dt_sess)-60
source('~/.active-rstudio-document')
shiny::runApp('~/Dropbox/ShinyApps/ENAR_2015')
shiny::runApp('~/Dropbox/ShinyApps/ENAR_2015')
source('~/Dropbox/database/ENAR_scraper/ENAR_2015_new.R')
source('~/Dropbox/My_Website/WordPresser.R')
source('~/Dropbox/My_Website/WordPresser.R')
imgur_upload("example.png")
imgur_upload
file = "/Users/johnmuschelli/Dropbox/Public/WordPress_Hopstat/Unofficial_ENAR_2015_Itinerary_Maker/example.png"
imgur_upload(file)
