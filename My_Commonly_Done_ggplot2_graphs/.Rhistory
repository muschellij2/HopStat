library(knitr)
knit("My_Commonly_Done_ggplot2_graphs.Rmd")
knit("My_Commonly_Done_ggplot2_graphs.Rmd")
knit("My_Commonly_Done_ggplot2_graphs.Rmd")
knit("My_Commonly_Done_ggplot2_graphs.Rmd")
data$newcol
knit("My_Commonly_Done_ggplot2_graphs.Rmd")
knit2html("My_Commonly_Done_ggplot2_graphs.Rmd")
slide <- function(fname) {
require(slidify)
require(knitr)
slidify(fname)
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
oknit <- function(fname, envir = new.env(),
knitfunc = "knit2html", ...) {
require(knitr)
do.call(knitfunc, list(input = fname, envir = envir, ... = ...))
fname <- gsub(".Rmd", ".html", fname)
system(sprintf('open %s', shQuote(fname)))
}
oknit("My_Commonly_Done_ggplot2_graphs.Rmd")
oknit("My_Commonly_Done_ggplot2_graphs.Rmd")
oknit("My_Commonly_Done_ggplot2_graphs.Rmd")
oknit("My_Commonly_Done_ggplot2_graphs.Rmd")
spag + aes(alpha = alpha)
library(plyr)
dat = ddply(dat, .(id), function(x){
x$alpha = runif(n = 1)
x
})
spag = ggplot(dat, aes(x=obs, y=yij, colour = factor(id))) +
geom_line() + guides(colour=FALSE) + xlab("Observation Time Point") +
ylab("Y")
spag + aes(alpha = alpha)
dat$alpha
spag = ggplot(dat, aes(x=obs, y=yij, colour = factor(id))) +
geom_line(aes(alpha=alpha)) + guides(colour=FALSE) + xlab("Observation Time Point") +
ylab("Y")
spag
spag = ggplot(dat, aes(x=obs, y=yij, group = id)) +
geom_line(aes(alpha=alpha)) + guides(colour=FALSE) + xlab("Observation Time Point") +
ylab("Y")
spag
library(plyr)
dat = ddply(dat, .(id), function(x){
x$alpha = ifelse(runif(n = 1) > 0.9, 1, 0.1)
x
})
spag = ggplot(dat, aes(x=obs, y=yij, colour = factor(id))) +
geom_line() + guides(colour=FALSE) + xlab("Observation Time Point") +
ylab("Y")
spag
spag = ggplot(dat, aes(x=obs, y=yij, group = id)) +
geom_line(aes(alpha=alpha)) + guides(colour=FALSE) + xlab("Observation Time Point") +
ylab("Y")
spag
library(plyr)
dat = ddply(dat, .(id), function(x){
x$alpha = ifelse(runif(n = 1) > 0.9, 1, 0.1)
x
})
spag = ggplot(dat, aes(x=obs, y=yij, colour = factor(id))) +
geom_line() + guides(colour=FALSE) + xlab("Observation Time Point") +
ylab("Y")
spag + aes(alpha=alpha)
spag + aes(alpha=alpha, group=factor(id))
library(plyr)
dat = ddply(dat, .(id), function(x){
x$alpha = ifelse(runif(n = 1) > 0.9, 1, 0.1)
x
})
tspag = ggplot(dat, aes(x=obs, y=yij)) +
geom_line() + guides(colour=FALSE) + xlab("Observation Time Point") +
ylab("Y")
spag = tspag + aes(colour = factor(id))
spag
tspag + aes(alpha=alpha, group=factor(id))
tspag + aes(alpha=alpha, group=factor(id)) + guides(alpha=FALSE)
tspag + aes(alpha=alpha, group=factor(id)) + guides(alpha=FALSE)
oknit("My_Commonly_Done_ggplot2_graphs.Rmd")
spag + geom_smooth(se=FALSE)
spag + geom_smooth(se=FALSE, colour="black")
spag + geom_smooth(se=FALSE, colour="black", linesize=2)
spag + geom_smooth(se=FALSE, colour="black", linesize=5)
?geom_line
spag + geom_smooth(se=FALSE, colour="black", size=5)
spag + geom_smooth(se=FALSE, colour="black", size=2)
library(plyr)
dat = ddply(dat, .(id), function(x){
x$alpha = ifelse(runif(n = 1) > 0.9, 1, 0.1)
x$group = rbinom(n=1, size =1 ,prob=0.5)
x
})
tspag = ggplot(dat, aes(x=obs, y=yij)) +
geom_line() + guides(colour=FALSE) + xlab("Observation Time Point") +
ylab("Y")
spag = tspag + aes(colour = factor(id))
spag
```
library(plyr)
dat = ddply(dat, .(id), function(x){
x$alpha = ifelse(runif(n = 1) > 0.9, 1, 0.1)
x$group = factor(rbinom(n=1, size =3 ,prob=0.5))
x
})
tspag = ggplot(dat, aes(x=obs, y=yij)) +
geom_line() + guides(colour=FALSE) + xlab("Observation Time Point") +
ylab("Y")
spag = tspag + aes(colour = factor(id))
spag
tspag + aes(alpha=alpha, group=factor(id)) + guides(alpha=FALSE)
spag + facet_wrap(~ group)
sspag = spag + geom_smooth(se=FALSE, colour="black", size=2)
sspag
sspag + facet_wrap(~ group)
library(plyr)
dat = ddply(dat, .(id), function(x){
x$alpha = ifelse(runif(n = 1) > 0.9, 1, 0.1)
x$group = factor(rbinom(n=1, size =3 ,prob=0.5), levels=0:3)
x
})
tspag = ggplot(dat, aes(x=obs, y=yij)) +
geom_line() + guides(colour=FALSE) + xlab("Observation Time Point") +
ylab("Y")
spag = tspag + aes(colour = factor(id))
spag
tspag + aes(alpha=alpha, group=factor(id)) + guides(alpha=FALSE)
spag + facet_wrap(~ group)
sspag = spag + geom_smooth(se=FALSE, colour="black", size=2)
sspag
sspag + facet_wrap(~ group)
tspag + facet_wrap(~ group)
tspag + aes(alpha=alpha, group=factor(id)) + facet_wrap(~ group)
bwspag = tspag + aes(alpha=alpha, group=factor(id)) + guides(alpha=FALSE)
bwspag
bwspag + facet_wrap(~ group)
bwspag + facet_wrap(~ group) + + geom_smooth(se=FALSE, colour="red", size=2)
bwspag + facet_wrap(~ group) + geom_smooth(se=FALSE, colour="red", size=2)
bwspag + facet_wrap(~ group)
bwspag + facet_wrap(~ group) + geom_smooth(se=FALSE, colour="red")
bwspag + facet_wrap(~ group) + geom_smooth(dat, aes(x=obs, y=yij), se=FALSE, colour="red")
bwspag + facet_wrap(~ group) + geom_smooth(data=dat, aes(x=obs, y=yij), se=FALSE, colour="red")
bwspag + facet_wrap(~ group) + geom_smooth(aes(group=1), se=FALSE, colour="red")
oknit("My_Commonly_Done_ggplot2_graphs.Rmd")
oknit("My_Commonly_Done_ggplot2_graphs.Rmd")
oknit("My_Commonly_Done_ggplot2_graphs.Rmd")
oknit("My_Commonly_Done_ggplot2_graphs.Rmd")
oknit("My_Commonly_Done_ggplot2_graphs.Rmd")
warnings()
rm(list=ls())
library(knitr)
wp = TRUE
knit2wp2 = function (input, title = "A post from knitr", ..., shortcode = FALSE,
encoding = getOption("encoding"), publish = TRUE)
{
out = knit(input, encoding = encoding)
on.exit(unlink(out))
con = file(out, encoding = encoding)
on.exit(close(con), add = TRUE)
content = knitr:::native_encode(readLines(con, warn = FALSE))
content = paste(content, collapse = "\n")
content = markdown::markdownToHTML(text = content, fragment.only = TRUE)
shortcode = rep(shortcode, length.out = 2L)
if (shortcode[1]) {
content = gsub("<pre><code class=\"([[:alpha:]]+)\">(.+?)</code></pre>",
"[sourcecode language=\"\\1\"]\\2[/sourcecode]",
content)
}
content = gsub("<pre><code( class=\"no-highlight\"|)>(.+?)</code></pre>",
if (shortcode[2])
"[sourcecode]\\2[/sourcecode]"
else "<pre>\\2</pre>", content)
content = knitr:::native_encode(content, "UTF-8")
title = knitr:::native_encode(title, "UTF-8")
return(list(content = content, title=title))
}
#### set up new post
wpfol <- "WordPress_Hopstat"
wpdir <- file.path("~/Dropbox/Public", wpfol)
wpdir <- path.expand(wpdir)
# mytitle <- folname <- "ggplot2 is not ALWAYS the_answer  it's not supposed to be"
mytitle <- folname <- "My Commonly Done ggplot2 graphs"
# folname <- "Converting LaTeX to MS Word"
folname = gsub(" ", "_", folname)
folname = gsub(",", "_", folname)
folname = gsub("'", "_", folname)
folname = gsub(":", "_", folname)
folname = gsub(";", "_", folname)
# categories = c("bmorebiostats")
# categories = "rbloggers"
categories = c("rbloggers", "bmorebiostats")
#"bmorebiostats"
publish = TRUE
fol = file.path(wpdir, folname)
rmdname <- file.path(wpdir, folname,  paste0(folname, ".Rmd"))
if (!file.exists(fol)) {
dir.create(fol)
}
if (!file.exists(rmdname)) {
file.create(rmdname)
addtxt = paste0("```{r label=opts, results='hide', echo=FALSE, message = FALSE, warning=FALSE}",
"\n", "library(knitr)\n", "opts_chunk$set(echo=FALSE, ",
"prompt=FALSE, message=FALSE, warning=FALSE, ",
'comment="", ', "results='hide')\n", "```")
cat(addtxt, file=rmdname)
system(sprintf("open %s", shQuote(rmdname)))
}
setwd(file.path(wpdir, folname))
######### Send it to the Website
if (wp){
if (!require('RWordPress'))
install.packages('RWordPress',
repos = 'http://www.omegahat.org/R',
type = 'source')
library(RWordPress)
pwd = 'hopkinsstat'
stopifnot(pwd != 'PWD')
options(WordpressLogin = c(strictlystat = pwd))
uname <- names(getOption("WordpressLogin"))
options( WordpressURL = 'http://hopstat.wordpress.com/xmlrpc.php')
### change this for the new folder
stopifnot(file.exists(rmdname))
opts_knit$set(base.dir = wpdir)
#     opts_knit$set(
#       base.url = paste0(
#         'https://dl.dropboxusercontent.com/u/600586/', wpfol, '/'),
#                   base.dir = wpdir)
opts_knit$set(upload.fun = imgur_upload,
base.url = NULL) # upload all images to imgur.com
#   input = rmdname
#   title = mytitle
#   shortcode= TRUE
#   encoding = getOption("encoding")
#   knit2wp(rmdname,
#           title = mytitle, categories = categories,
#           shortcode=TRUE,
#           publish=publish)
x = knit2wp2(rmdname,
title = mytitle, categories = categories,
shortcode=TRUE,
publish=publish)
}
x
knit2wp(rmdname,
title = mytitle, categories = categories,
shortcode=TRUE,
publish=publish)
install.packages('RWordPress',
repos = 'http://www.omegahat.org/R',
type = 'source')
install.packages("RWordPress", repos = "http://www.omegahat.org/R",
install.packages('RWordPress',
repos = 'http://www.omegahat.org/R',
type = 'source')
x
writeLines(text = x$content, con="My_Commonly_Done_ggplot2_graphs_text.html")
library(knitr)
wp = TRUE
knit2wp2 = function (input, title = "A post from knitr", ..., shortcode = FALSE,
encoding = getOption("encoding"), publish = TRUE)
{
out = knit(input, encoding = encoding)
on.exit(unlink(out))
con = file(out, encoding = encoding)
on.exit(close(con), add = TRUE)
content = knitr:::native_encode(readLines(con, warn = FALSE))
content = paste(content, collapse = "\n")
content = markdown::markdownToHTML(text = content, fragment.only = TRUE)
shortcode = rep(shortcode, length.out = 2L)
if (shortcode[1]) {
content = gsub("<pre><code class=\"([[:alpha:]]+)\">(.+?)</code></pre>",
"[sourcecode language=\"\\1\"]\\2[/sourcecode]",
content)
}
content = gsub("<pre><code( class=\"no-highlight\"|)>(.+?)</code></pre>",
if (shortcode[2])
"[sourcecode]\\2[/sourcecode]"
else "<pre>\\2</pre>", content)
content = knitr:::native_encode(content, "UTF-8")
title = knitr:::native_encode(title, "UTF-8")
return(list(content = content, title=title))
}
#### set up new post
wpfol <- "WordPress_Hopstat"
wpdir <- file.path("~/Dropbox/Public", wpfol)
wpdir <- path.expand(wpdir)
# mytitle <- folname <- "ggplot2 is not ALWAYS the_answer  it's not supposed to be"
mytitle <- folname <- "My Commonly Done ggplot2 graphs"
# folname <- "Converting LaTeX to MS Word"
folname = gsub(" ", "_", folname)
folname = gsub(",", "_", folname)
folname = gsub("'", "_", folname)
folname = gsub(":", "_", folname)
folname = gsub(";", "_", folname)
# categories = c("bmorebiostats")
# categories = "rbloggers"
categories = c("rbloggers", "bmorebiostats")
#"bmorebiostats"
publish = TRUE
fol = file.path(wpdir, folname)
rmdname <- file.path(wpdir, folname,  paste0(folname, ".Rmd"))
if (!file.exists(fol)) {
dir.create(fol)
}
if (!file.exists(rmdname)) {
file.create(rmdname)
addtxt = paste0("```{r label=opts, results='hide', echo=FALSE, message = FALSE, warning=FALSE}",
"\n", "library(knitr)\n", "opts_chunk$set(echo=FALSE, ",
"prompt=FALSE, message=FALSE, warning=FALSE, ",
'comment="", ', "results='hide')\n", "```")
cat(addtxt, file=rmdname)
system(sprintf("open %s", shQuote(rmdname)))
}
setwd(file.path(wpdir, folname))
######### Send it to the Website
if (wp){
if (!require('RWordPress'))
install.packages('RWordPress',
repos = 'http://www.omegahat.org/R',
type = 'source')
library(RWordPress)
pwd = 'hopkinsstat'
stopifnot(pwd != 'PWD')
options(WordpressLogin = c(strictlystat = pwd))
uname <- names(getOption("WordpressLogin"))
options( WordpressURL = 'http://hopstat.wordpress.com/xmlrpc.php')
### change this for the new folder
stopifnot(file.exists(rmdname))
opts_knit$set(base.dir = wpdir)
#     opts_knit$set(
#       base.url = paste0(
#         'https://dl.dropboxusercontent.com/u/600586/', wpfol, '/'),
#                   base.dir = wpdir)
opts_knit$set(upload.fun = imgur_upload,
base.url = NULL) # upload all images to imgur.com
#   input = rmdname
#   title = mytitle
#   shortcode= TRUE
#   encoding = getOption("encoding")
#   knit2wp(rmdname,
#           title = mytitle, categories = categories,
#           shortcode=TRUE,
#           publish=publish)
x = knit2wp2(rmdname,
title = mytitle, categories = categories,
shortcode=TRUE,
publish=publish)
writeLines(text =x$content, con="My_Commonly_Done_ggplot2_graphs_text.html")
}
knit2wp
getFromNamespace("newPost", "RWordPress")
