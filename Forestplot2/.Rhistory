nums
nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })
nums
nums <- strsplit(stich_data[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)
nums
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
#"Randomization ICH", "20-40", "40-60", "> 60", #
#"Surgery Time", "< 36 hours", ">= 36 hours"#
rpdf <- file.path(paperdir, "Stroke-2012-Gregson-1496-504.pdf")#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_times <- readpdf[282:322]#
stich1 <- c(stich_times[grepl(stich_times, pattern="Mendelow")])#
stich1 <- gsub(stich1, pattern="        ", replacement="")#
stich1 <- gsub(stich1, pattern="Mendelow", replacement="")#
data <- strsplit(stich1, split=" ")#
data <- lapply(data, function(x) x[x != ""])#
data <- lapply(data, function(x) gsub(gsub(x, pattern="[", replacement="", fixed=TRUE), pattern="]", replacement="", fixed=TRUE))#
data <- lapply(data, function(x) gsub(x, pattern=",", replacement="", fixed=TRUE))#
data[[1]] <- data[[1]][data[[1]] !="(fixed)"]#
data <- do.call("rbind", data)#
colnames(data) <- c("Early", "Conservative", "OR", "STICH_Lower", "STICH_Upper")#
data <- data.frame(data, stringsAsFactors=FALSE)#
data$Category <- c("< 8 hrs", "8-24 hrs", "24-72 hrs")#
data <- data[, c("Category", colnames(data)[colnames(data) != "Category"])]#
#colnames(data) <- #
stich_data <- data#
#
cn <- colnames(stich_data)#
for (icol in c("Early", "Conservative")){#
  nums <- strsplit(stich_data[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich_data <- cbind(stich_data, nums)#
  suf <- substr(icol, 1, 1)#
  colnames(stich_data) <- c(cn, paste(c("n", "N"), suf, sep="_"))#
}
stich_data
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
#"Randomization ICH", "20-40", "40-60", "> 60", #
#"Surgery Time", "< 36 hours", ">= 36 hours"#
rpdf <- file.path(paperdir, "Stroke-2012-Gregson-1496-504.pdf")#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_times <- readpdf[282:322]#
stich1 <- c(stich_times[grepl(stich_times, pattern="Mendelow")])#
stich1 <- gsub(stich1, pattern="        ", replacement="")#
stich1 <- gsub(stich1, pattern="Mendelow", replacement="")#
data <- strsplit(stich1, split=" ")#
data <- lapply(data, function(x) x[x != ""])#
data <- lapply(data, function(x) gsub(gsub(x, pattern="[", replacement="", fixed=TRUE), pattern="]", replacement="", fixed=TRUE))#
data <- lapply(data, function(x) gsub(x, pattern=",", replacement="", fixed=TRUE))#
data[[1]] <- data[[1]][data[[1]] !="(fixed)"]#
data <- do.call("rbind", data)#
colnames(data) <- c("Early", "Conservative", "OR", "STICH_Lower", "STICH_Upper")#
data <- data.frame(data, stringsAsFactors=FALSE)#
data$Category <- c("< 8 hrs", "8-24 hrs", "24-72 hrs")#
data <- data[, c("Category", colnames(data)[colnames(data) != "Category"])]#
#colnames(data) <- #
stich_data <- data#
#
cn <- colnames(stich_data)#
for (icol in c("Early", "Conservative")){#
  nums <- strsplit(stich_data[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich_data <- cbind(stich_data, nums)#
  suf <- substr(icol, 1, 1)#
  colnames(stich_data) <- c(cn, paste(c("n", "N"), suf, sep="_"))#
  cn <- colnames(stich_data)#
}
cn
stich_data
rpdf <- file.path(paperdir, "STICH.pdf")#
#
rpdf <- "/Users/muschellij2/Dropbox/CTR/DHanley/Papers/STICH.pdf"#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_tab <- readpdf[450:512]#
stich_tab <- gsub(pattern="\\u03fd", replacement =">=", x=stich_tab)#
stich_tab <- gsub(pattern="\\u03fe", replacement =">", x=stich_tab)#
spl <- strsplit(stich_tab, split= "         ")#
spl <- lapply(spl, function(x) if(length(x) > 0) x <- x[x!= ""])#
#spl[spl == ""] <- NULL#
nulls <- sapply(spl, function(x) is.null(x))#
spl <- spl[!nulls]#
spl <- lapply(spl, function(x) gsub(x=x, pattern="  ", replacement = ""))#
#spl <- lapply(spl, function(x) strsplit(x, split= "  "))#
spl <- lapply(spl, function(x) {#
  l <- length(x)#
  if (l < 5) {#
    c(x, rep("", 5-l))#
  } else {#
    x#
  }#
  })#
#
spl_top <- gsub(do.call('rbind', spl[1:3]), pattern="^ ", replacement="")#
spl_top <- apply(spl_top, 2, paste, collapse=' ')#
tab <- do.call('rbind', spl[4:length(spl)])#
tab <- rbind(spl_top, tab)#
rownames(tab) <- NULL#
tab <- tab[, 1:4]#
stich <- data.frame(tab, stringsAsFactors=FALSE)#
#
stich[,1] <- gsub(pattern="\u03fd", replacement =">= ", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="\u03fe", replacement ="> ", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="р50", replacement ="<= 50", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="у65", replacement ="< 65", x=stich[,1], fixed=TRUE)#
stich <- sapply(stich, function(x) gsub(pattern="·", replacement=".", fixed=TRUE, x=x))#
stich <- apply(stich, 2, function(x) gsub(x=x, pattern="^ ", replacement=""))
for (icol in 2:3){#
  nums <- strsplit(stich[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich <- cbind(stich, nums)#
}#
ORs <- strsplit(stich[,4], split=" ")#
ORs <- sapply(ORs, function(x) ifelse(length(x) > 0, x[1], "" ))#
ORs <- as.numeric(ORs)#
stich <- cbind(stich, OR = ORs)#
#
colnames(stich) <- c("Category", "Early", "Conservative", "OR 95% CI", "n_E", "N_E", "n_C", "N_C", "OR") #
stich <- data.frame(stich, stringsAsFactors=FALSE)#
for (icol in c("n_E", "N_E", "n_C", "N_C", "OR")) stich[, icol] <- as.numeric(stich[, icol])#
test <- round((stich$n_E* (stich$N_C - stich$n_C))/ (stich$n_C* (stich$N_E - stich$n_E)), 2)#
Diff <- abs(test - stich$OR) > 0.001 & !is.na(test)#
cbind(test, stich)[Diff,]#
#
# stich <-  cbind(c("Age", "< 65", "65 or older", "", "GCS", "5-8", "9-12", "13-15", "", "Side of Hematoma", "Left", "Right", "", "Site of Hematoma", "Lobar", "Basal Ganglia/Thalamus", "", "Hematoma Volume", "<= 50mL", ">50mL", "", "Depth from Cortical Surface", "<=1cm", "> 1cm"),#
#                 rbind(rep("", 4), c(182, 162, 204, 284), c(164, 206, 174, 212), rep("", 4), rep("", 4), c(80, 88, 83, 99), c(140, 187, 158, 196), c(126, 193, 137, 201), rep("", 4), rep("", 4), c(186, 246, 208, 265), c(160, 222, 170, 231), rep("", 4), rep("", 4), c(107, 181, 130, 194), c(236, 284, 247, 300), rep("", 4), rep("", 4), c(211, 302, 238, 323), c(135, 166, 140, 173), rep("", 4), rep("", 4), c(170, 257, 192, 260), c(174, 208, 184, 234)#
#                       ))#
# #
# stich2 <- cbind(stich, paste(stich[,2], stich[, 3], sep="/"), paste(stich[,4], stich[, 5], sep="/"))#
# stich2[stich2 == "/"] <- ""#
#
# stich2 <- data.frame(stich2)#
# colnames(stich2) <- c("Study or subcategory", "n Good", "N Good"#
#
stich$Category <- gsub(stich$Category, pattern="–", replacement = "-", fixed=TRUE)#
keep_stich <- which(stich$Category == "Depth from cortical surface")#
stich2 <- stich[1:(keep_stich-1), ]#
#
stich2$Category[stich2$Category == "Basal ganglia/thalamus"] <- "Not Lobar"#
stich2$Category[stich2$Category == "5-8"] <- "3-8"
stich2
stich_data
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
#"Randomization ICH", "20-40", "40-60", "> 60", #
#"Surgery Time", "< 36 hours", ">= 36 hours"#
rpdf <- file.path(paperdir, "Stroke-2012-Gregson-1496-504.pdf")#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_times <- readpdf[282:322]#
stich1 <- c(stich_times[grepl(stich_times, pattern="Mendelow")])#
stich1 <- gsub(stich1, pattern="        ", replacement="")#
stich1 <- gsub(stich1, pattern="Mendelow", replacement="")#
data <- strsplit(stich1, split=" ")#
data <- lapply(data, function(x) x[x != ""])#
data <- lapply(data, function(x) gsub(gsub(x, pattern="[", replacement="", fixed=TRUE), pattern="]", replacement="", fixed=TRUE))#
data <- lapply(data, function(x) gsub(x, pattern=",", replacement="", fixed=TRUE))#
data[[1]] <- data[[1]][data[[1]] !="(fixed)"]#
data <- do.call("rbind", data)#
colnames(data) <- c("Early", "Conservative", "OR", "STICH_Lower", "STICH_Upper")#
data <- data.frame(data, stringsAsFactors=FALSE)#
data$Category <- c("< 8 hrs", "8-24 hrs", "24-72 hrs")#
data <- data[, c("Category", colnames(data)[colnames(data) != "Category"])]#
#colnames(data) <- #
stich_data <- data#
#
cn <- colnames(stich_data)#
for (icol in c("Early", "Conservative")){#
  nums <- strsplit(stich_data[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich_data <- cbind(stich_data, nums)#
  suf <- substr(icol, 1, 1)#
  colnames(stich_data) <- c(cn, paste(c("n", "N"), suf, sep="_"))#
  cn <- colnames(stich_data)#
}#
#
stich_data$OR.95..CI <- paste(stich_data$OR, paste("(", stich_data$STICH_Lower, "-", stich_data$STICH_Upper, ")", sep="")sep=" ")
stich_data$OR.95..CI <- paste(stich_data$OR, paste("(", stich_data$STICH_Lower, "-", stich_data$STICH_Upper, ")", sep=""), sep=" ")
stich_data
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
#"Randomization ICH", "20-40", "40-60", "> 60", #
#"Surgery Time", "< 36 hours", ">= 36 hours"#
rpdf <- file.path(paperdir, "Stroke-2012-Gregson-1496-504.pdf")#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_times <- readpdf[282:322]#
stich1 <- c(stich_times[grepl(stich_times, pattern="Mendelow")])#
stich1 <- gsub(stich1, pattern="        ", replacement="")#
stich1 <- gsub(stich1, pattern="Mendelow", replacement="")#
data <- strsplit(stich1, split=" ")#
data <- lapply(data, function(x) x[x != ""])#
data <- lapply(data, function(x) gsub(gsub(x, pattern="[", replacement="", fixed=TRUE), pattern="]", replacement="", fixed=TRUE))#
data <- lapply(data, function(x) gsub(x, pattern=",", replacement="", fixed=TRUE))#
data[[1]] <- data[[1]][data[[1]] !="(fixed)"]#
data <- do.call("rbind", data)#
colnames(data) <- c("Early", "Conservative", "OR", "STICH_Lower", "STICH_Upper")#
data <- data.frame(data, stringsAsFactors=FALSE)#
data$Category <- c("< 8 hrs", "8-24 hrs", "24-72 hrs")#
data <- data[, c("Category", colnames(data)[colnames(data) != "Category"])]#
#colnames(data) <- #
stich_data <- data#
#
cn <- colnames(stich_data)#
for (icol in c("Early", "Conservative")){#
  nums <- strsplit(stich_data[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich_data <- cbind(stich_data, nums)#
  suf <- substr(icol, 1, 1)#
  colnames(stich_data) <- c(cn, paste(c("n", "N"), suf, sep="_"))#
  cn <- colnames(stich_data)#
}#
#
stich_data$OR.95..CI <- paste(stich_data$OR, paste("(", stich_data$STICH_Lower, "-", stich_data$STICH_Upper, ")", sep=""), sep=" ")#
#
rpdf <- file.path(paperdir, "STICH.pdf")#
#
rpdf <- "/Users/muschellij2/Dropbox/CTR/DHanley/Papers/STICH.pdf"#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_tab <- readpdf[450:512]#
stich_tab <- gsub(pattern="\\u03fd", replacement =">=", x=stich_tab)#
stich_tab <- gsub(pattern="\\u03fe", replacement =">", x=stich_tab)#
spl <- strsplit(stich_tab, split= "         ")#
spl <- lapply(spl, function(x) if(length(x) > 0) x <- x[x!= ""])#
#spl[spl == ""] <- NULL#
nulls <- sapply(spl, function(x) is.null(x))#
spl <- spl[!nulls]#
spl <- lapply(spl, function(x) gsub(x=x, pattern="  ", replacement = ""))#
#spl <- lapply(spl, function(x) strsplit(x, split= "  "))#
spl <- lapply(spl, function(x) {#
  l <- length(x)#
  if (l < 5) {#
    c(x, rep("", 5-l))#
  } else {#
    x#
  }#
  })#
#
spl_top <- gsub(do.call('rbind', spl[1:3]), pattern="^ ", replacement="")#
spl_top <- apply(spl_top, 2, paste, collapse=' ')#
tab <- do.call('rbind', spl[4:length(spl)])#
tab <- rbind(spl_top, tab)#
rownames(tab) <- NULL#
tab <- tab[, 1:4]#
stich <- data.frame(tab, stringsAsFactors=FALSE)#
#
stich[,1] <- gsub(pattern="\u03fd", replacement =">= ", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="\u03fe", replacement ="> ", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="р50", replacement ="<= 50", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="у65", replacement ="< 65", x=stich[,1], fixed=TRUE)#
stich <- sapply(stich, function(x) gsub(pattern="·", replacement=".", fixed=TRUE, x=x))#
stich <- apply(stich, 2, function(x) gsub(x=x, pattern="^ ", replacement=""))#
for (icol in 2:3){#
  nums <- strsplit(stich[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich <- cbind(stich, nums)#
}#
ORs <- strsplit(stich[,4], split=" ")#
ORs <- sapply(ORs, function(x) ifelse(length(x) > 0, x[1], "" ))#
ORs <- as.numeric(ORs)#
stich <- cbind(stich, OR = ORs)#
#
colnames(stich) <- c("Category", "Early", "Conservative", "OR 95% CI", "n_E", "N_E", "n_C", "N_C", "OR") #
stich <- data.frame(stich, stringsAsFactors=FALSE)#
for (icol in c("n_E", "N_E", "n_C", "N_C", "OR")) stich[, icol] <- as.numeric(stich[, icol])#
test <- round((stich$n_E* (stich$N_C - stich$n_C))/ (stich$n_C* (stich$N_E - stich$n_E)), 2)#
Diff <- abs(test - stich$OR) > 0.001 & !is.na(test)#
cbind(test, stich)[Diff,]#
#
# stich <-  cbind(c("Age", "< 65", "65 or older", "", "GCS", "5-8", "9-12", "13-15", "", "Side of Hematoma", "Left", "Right", "", "Site of Hematoma", "Lobar", "Basal Ganglia/Thalamus", "", "Hematoma Volume", "<= 50mL", ">50mL", "", "Depth from Cortical Surface", "<=1cm", "> 1cm"),#
#                 rbind(rep("", 4), c(182, 162, 204, 284), c(164, 206, 174, 212), rep("", 4), rep("", 4), c(80, 88, 83, 99), c(140, 187, 158, 196), c(126, 193, 137, 201), rep("", 4), rep("", 4), c(186, 246, 208, 265), c(160, 222, 170, 231), rep("", 4), rep("", 4), c(107, 181, 130, 194), c(236, 284, 247, 300), rep("", 4), rep("", 4), c(211, 302, 238, 323), c(135, 166, 140, 173), rep("", 4), rep("", 4), c(170, 257, 192, 260), c(174, 208, 184, 234)#
#                       ))#
# #
# stich2 <- cbind(stich, paste(stich[,2], stich[, 3], sep="/"), paste(stich[,4], stich[, 5], sep="/"))#
# stich2[stich2 == "/"] <- ""#
#
# stich2 <- data.frame(stich2)#
# colnames(stich2) <- c("Study or subcategory", "n Good", "N Good"#
#
stich$Category <- gsub(stich$Category, pattern="–", replacement = "-", fixed=TRUE)#
keep_stich <- which(stich$Category == "Depth from cortical surface")#
stich2 <- stich[1:(keep_stich-1), ]#
#
stich2$Category[stich2$Category == "Basal ganglia/thalamus"] <- "Not Lobar"#
stich2$Category[stich2$Category == "5-8"] <- "3-8"
stich2
stich_data
merge(stich2, stich_data, all=TRUE, sort=FALSE)
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
#"Randomization ICH", "20-40", "40-60", "> 60", #
#"Surgery Time", "< 36 hours", ">= 36 hours"#
rpdf <- file.path(paperdir, "Stroke-2012-Gregson-1496-504.pdf")#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_times <- readpdf[282:322]#
stich1 <- c(stich_times[grepl(stich_times, pattern="Mendelow")])#
stich1 <- gsub(stich1, pattern="        ", replacement="")#
stich1 <- gsub(stich1, pattern="Mendelow", replacement="")#
data <- strsplit(stich1, split=" ")#
data <- lapply(data, function(x) x[x != ""])#
data <- lapply(data, function(x) gsub(gsub(x, pattern="[", replacement="", fixed=TRUE), pattern="]", replacement="", fixed=TRUE))#
data <- lapply(data, function(x) gsub(x, pattern=",", replacement="", fixed=TRUE))#
data[[1]] <- data[[1]][data[[1]] !="(fixed)"]#
data <- do.call("rbind", data)#
colnames(data) <- c("Early", "Conservative", "OR", "STICH_Lower", "STICH_Upper")#
data <- data.frame(data, stringsAsFactors=FALSE)#
data$Category <- c("< 8 hrs", "8-24 hrs", "24-72 hrs")#
data <- data[, c("Category", colnames(data)[colnames(data) != "Category"])]#
#colnames(data) <- #
stich_data <- data#
#
cn <- colnames(stich_data)#
for (icol in c("Early", "Conservative")){#
  nums <- strsplit(stich_data[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich_data <- cbind(stich_data, nums)#
  suf <- substr(icol, 1, 1)#
  colnames(stich_data) <- c(cn, paste(c("n", "N"), suf, sep="_"))#
  cn <- colnames(stich_data)#
}#
#
stich_data$OR.95..CI <- paste(stich_data$OR, paste("(", stich_data$STICH_Lower, "-", stich_data$STICH_Upper, ")", sep=""), sep=" ")#
#
rpdf <- file.path(paperdir, "STICH.pdf")#
#
rpdf <- "/Users/muschellij2/Dropbox/CTR/DHanley/Papers/STICH.pdf"#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_tab <- readpdf[450:512]#
stich_tab <- gsub(pattern="\\u03fd", replacement =">=", x=stich_tab)#
stich_tab <- gsub(pattern="\\u03fe", replacement =">", x=stich_tab)#
spl <- strsplit(stich_tab, split= "         ")#
spl <- lapply(spl, function(x) if(length(x) > 0) x <- x[x!= ""])#
#spl[spl == ""] <- NULL#
nulls <- sapply(spl, function(x) is.null(x))#
spl <- spl[!nulls]#
spl <- lapply(spl, function(x) gsub(x=x, pattern="  ", replacement = ""))#
#spl <- lapply(spl, function(x) strsplit(x, split= "  "))#
spl <- lapply(spl, function(x) {#
  l <- length(x)#
  if (l < 5) {#
    c(x, rep("", 5-l))#
  } else {#
    x#
  }#
  })#
#
spl_top <- gsub(do.call('rbind', spl[1:3]), pattern="^ ", replacement="")#
spl_top <- apply(spl_top, 2, paste, collapse=' ')#
tab <- do.call('rbind', spl[4:length(spl)])#
tab <- rbind(spl_top, tab)#
rownames(tab) <- NULL#
tab <- tab[, 1:4]#
stich <- data.frame(tab, stringsAsFactors=FALSE)#
#
stich[,1] <- gsub(pattern="\u03fd", replacement =">= ", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="\u03fe", replacement ="> ", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="р50", replacement ="<= 50", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="у65", replacement ="< 65", x=stich[,1], fixed=TRUE)#
stich <- sapply(stich, function(x) gsub(pattern="·", replacement=".", fixed=TRUE, x=x))#
stich <- apply(stich, 2, function(x) gsub(x=x, pattern="^ ", replacement=""))#
for (icol in 2:3){#
  nums <- strsplit(stich[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich <- cbind(stich, nums)#
}#
ORs <- strsplit(stich[,4], split=" ")#
ORs <- sapply(ORs, function(x) ifelse(length(x) > 0, x[1], "" ))#
ORs <- as.numeric(ORs)#
stich <- cbind(stich, OR = ORs)#
#
colnames(stich) <- c("Category", "Early", "Conservative", "OR 95% CI", "n_E", "N_E", "n_C", "N_C", "OR") #
stich <- data.frame(stich, stringsAsFactors=FALSE)#
for (icol in c("n_E", "N_E", "n_C", "N_C", "OR")) stich[, icol] <- as.numeric(stich[, icol])#
test <- round((stich$n_E* (stich$N_C - stich$n_C))/ (stich$n_C* (stich$N_E - stich$n_E)), 2)#
Diff <- abs(test - stich$OR) > 0.001 & !is.na(test)#
cbind(test, stich)[Diff,]#
#
# stich <-  cbind(c("Age", "< 65", "65 or older", "", "GCS", "5-8", "9-12", "13-15", "", "Side of Hematoma", "Left", "Right", "", "Site of Hematoma", "Lobar", "Basal Ganglia/Thalamus", "", "Hematoma Volume", "<= 50mL", ">50mL", "", "Depth from Cortical Surface", "<=1cm", "> 1cm"),#
#                 rbind(rep("", 4), c(182, 162, 204, 284), c(164, 206, 174, 212), rep("", 4), rep("", 4), c(80, 88, 83, 99), c(140, 187, 158, 196), c(126, 193, 137, 201), rep("", 4), rep("", 4), c(186, 246, 208, 265), c(160, 222, 170, 231), rep("", 4), rep("", 4), c(107, 181, 130, 194), c(236, 284, 247, 300), rep("", 4), rep("", 4), c(211, 302, 238, 323), c(135, 166, 140, 173), rep("", 4), rep("", 4), c(170, 257, 192, 260), c(174, 208, 184, 234)#
#                       ))#
# #
# stich2 <- cbind(stich, paste(stich[,2], stich[, 3], sep="/"), paste(stich[,4], stich[, 5], sep="/"))#
# stich2[stich2 == "/"] <- ""#
#
# stich2 <- data.frame(stich2)#
# colnames(stich2) <- c("Study or subcategory", "n Good", "N Good"#
#
stich$Category <- gsub(stich$Category, pattern="–", replacement = "-", fixed=TRUE)#
keep_stich <- which(stich$Category == "Depth from cortical surface")#
stich2 <- stich[1:(keep_stich-1), ]#
#
stich2$Category[stich2$Category == "Basal ganglia/thalamus"] <- "Not Lobar"#
stich2$Category[stich2$Category == "5-8"] <- "3-8"#
#
stich_data <- merge(stich2, stich_data, all=TRUE, sort=FALSE)#
#
stich_data$STICH_Upper <- stich_data$STICH_Lower <- NULL#
#
cis <- sapply(strsplit(stich_data$OR.95..CI, split=" "), function(x) ifelse(length(x) > 0, x[2], NA))#
cis <- gsub(cis, pattern="(", replacement = "", fixed=TRUE)#
cis <- gsub(cis, pattern=")", replacement = "", fixed=TRUE)#
cis <- gsub(cis, pattern="–", replacement = "-", fixed=TRUE)#
cis <- strsplit(cis, split="-")#
cis <- lapply(cis, as.numeric)#
cis <- do.call("rbind", cis)
cis
tryout$STICH_Lower <- cis[,1]#
tryout$STICH_Upper <- cis[,2]
stich_data$STICH_Lower <- cis[,1]#
stich_data$STICH_Upper <- cis[,2]#
stich_data$STICH_Lower[1] <- "Lower"#
stich_data$STICH_Upper[1] <- "Upper"
stich_data
stich$OR
stich_data$OR
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
#"Randomization ICH", "20-40", "40-60", "> 60", #
#"Surgery Time", "< 36 hours", ">= 36 hours"#
rpdf <- file.path(paperdir, "Stroke-2012-Gregson-1496-504.pdf")#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_times <- readpdf[282:322]#
stich1 <- c(stich_times[grepl(stich_times, pattern="Mendelow")])#
stich1 <- gsub(stich1, pattern="        ", replacement="")#
stich1 <- gsub(stich1, pattern="Mendelow", replacement="")#
data <- strsplit(stich1, split=" ")#
data <- lapply(data, function(x) x[x != ""])#
data <- lapply(data, function(x) gsub(gsub(x, pattern="[", replacement="", fixed=TRUE), pattern="]", replacement="", fixed=TRUE))#
data <- lapply(data, function(x) gsub(x, pattern=",", replacement="", fixed=TRUE))#
data[[1]] <- data[[1]][data[[1]] !="(fixed)"]#
data <- do.call("rbind", data)#
colnames(data) <- c("Early", "Conservative", "OR", "STICH_Lower", "STICH_Upper")#
data <- data.frame(data, stringsAsFactors=FALSE)#
data$Category <- c("< 8 hrs", "8-24 hrs", "24-72 hrs")#
data <- data[, c("Category", colnames(data)[colnames(data) != "Category"])]#
#colnames(data) <- #
stich_data <- data#
#
cn <- colnames(stich_data)#
for (icol in c("Early", "Conservative")){#
  nums <- strsplit(stich_data[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich_data <- cbind(stich_data, nums)#
  suf <- substr(icol, 1, 1)#
  colnames(stich_data) <- c(cn, paste(c("n", "N"), suf, sep="_"))#
  cn <- colnames(stich_data)#
}#
#
stich_data$OR.95..CI <- paste(stich_data$OR, paste("(", stich_data$STICH_Lower, "-", stich_data$STICH_Upper, ")", sep=""), sep=" ")
stich_data$OR <- as.numeric(stich_data$OR)
stich_data
stich_data$n_E
stich_data$n_C
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
#"Randomization ICH", "20-40", "40-60", "> 60", #
#"Surgery Time", "< 36 hours", ">= 36 hours"#
rpdf <- file.path(paperdir, "Stroke-2012-Gregson-1496-504.pdf")#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_times <- readpdf[282:322]#
stich1 <- c(stich_times[grepl(stich_times, pattern="Mendelow")])#
stich1 <- gsub(stich1, pattern="        ", replacement="")#
stich1 <- gsub(stich1, pattern="Mendelow", replacement="")#
data <- strsplit(stich1, split=" ")#
data <- lapply(data, function(x) x[x != ""])#
data <- lapply(data, function(x) gsub(gsub(x, pattern="[", replacement="", fixed=TRUE), pattern="]", replacement="", fixed=TRUE))#
data <- lapply(data, function(x) gsub(x, pattern=",", replacement="", fixed=TRUE))#
data[[1]] <- data[[1]][data[[1]] !="(fixed)"]#
data <- do.call("rbind", data)#
colnames(data) <- c("Early", "Conservative", "OR", "STICH_Lower", "STICH_Upper")#
data <- data.frame(data, stringsAsFactors=FALSE)#
data$Category <- c("< 8 hrs", "8-24 hrs", "24-72 hrs")#
data <- data[, c("Category", colnames(data)[colnames(data) != "Category"])]#
#colnames(data) <- #
stich_data <- data#
#
cn <- colnames(stich_data)#
for (icol in c("Early", "Conservative")){#
  nums <- strsplit(stich_data[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich_data <- cbind(stich_data, nums)#
  suf <- substr(icol, 1, 1)#
  colnames(stich_data) <- c(cn, paste(c("n", "N"), suf, sep="_"))#
  cn <- colnames(stich_data)#
}#
#
stich_data$OR.95..CI <- paste(stich_data$OR, paste("(", stich_data$STICH_Lower, "-", stich_data$STICH_Upper, ")", sep=""), sep=" ")#
#
stich_data$OR <- as.numeric(stich_data$OR)#
#
rpdf <- file.path(paperdir, "STICH.pdf")#
#
rpdf <- "/Users/muschellij2/Dropbox/CTR/DHanley/Papers/STICH.pdf"#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_tab <- readpdf[450:512]#
stich_tab <- gsub(pattern="\\u03fd", replacement =">=", x=stich_tab)#
stich_tab <- gsub(pattern="\\u03fe", replacement =">", x=stich_tab)#
spl <- strsplit(stich_tab, split= "         ")#
spl <- lapply(spl, function(x) if(length(x) > 0) x <- x[x!= ""])#
#spl[spl == ""] <- NULL#
nulls <- sapply(spl, function(x) is.null(x))#
spl <- spl[!nulls]#
spl <- lapply(spl, function(x) gsub(x=x, pattern="  ", replacement = ""))#
#spl <- lapply(spl, function(x) strsplit(x, split= "  "))#
spl <- lapply(spl, function(x) {#
  l <- length(x)#
  if (l < 5) {#
    c(x, rep("", 5-l))#
  } else {#
    x#
  }#
  })#
#
spl_top <- gsub(do.call('rbind', spl[1:3]), pattern="^ ", replacement="")#
spl_top <- apply(spl_top, 2, paste, collapse=' ')#
tab <- do.call('rbind', spl[4:length(spl)])#
tab <- rbind(spl_top, tab)#
rownames(tab) <- NULL#
tab <- tab[, 1:4]#
stich <- data.frame(tab, stringsAsFactors=FALSE)#
#
stich[,1] <- gsub(pattern="\u03fd", replacement =">= ", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="\u03fe", replacement ="> ", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="р50", replacement ="<= 50", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="у65", replacement ="< 65", x=stich[,1], fixed=TRUE)#
stich <- sapply(stich, function(x) gsub(pattern="·", replacement=".", fixed=TRUE, x=x))#
stich <- apply(stich, 2, function(x) gsub(x=x, pattern="^ ", replacement=""))#
for (icol in 2:3){#
  nums <- strsplit(stich[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich <- cbind(stich, nums)#
}#
ORs <- strsplit(stich[,4], split=" ")#
ORs <- sapply(ORs, function(x) ifelse(length(x) > 0, x[1], "" ))#
ORs <- as.numeric(ORs)#
stich <- cbind(stich, OR = ORs)#
#
colnames(stich) <- c("Category", "Early", "Conservative", "OR 95% CI", "n_E", "N_E", "n_C", "N_C", "OR") #
stich <- data.frame(stich, stringsAsFactors=FALSE)#
for (icol in c("n_E", "N_E", "n_C", "N_C", "OR")) stich[, icol] <- as.numeric(stich[, icol])#
test <- round((stich$n_E* (stich$N_C - stich$n_C))/ (stich$n_C* (stich$N_E - stich$n_E)), 2)#
Diff <- abs(test - stich$OR) > 0.001 & !is.na(test)#
cbind(test, stich)[Diff,]#
#
# stich <-  cbind(c("Age", "< 65", "65 or older", "", "GCS", "5-8", "9-12", "13-15", "", "Side of Hematoma", "Left", "Right", "", "Site of Hematoma", "Lobar", "Basal Ganglia/Thalamus", "", "Hematoma Volume", "<= 50mL", ">50mL", "", "Depth from Cortical Surface", "<=1cm", "> 1cm"),#
#                 rbind(rep("", 4), c(182, 162, 204, 284), c(164, 206, 174, 212), rep("", 4), rep("", 4), c(80, 88, 83, 99), c(140, 187, 158, 196), c(126, 193, 137, 201), rep("", 4), rep("", 4), c(186, 246, 208, 265), c(160, 222, 170, 231), rep("", 4), rep("", 4), c(107, 181, 130, 194), c(236, 284, 247, 300), rep("", 4), rep("", 4), c(211, 302, 238, 323), c(135, 166, 140, 173), rep("", 4), rep("", 4), c(170, 257, 192, 260), c(174, 208, 184, 234)#
#                       ))#
# #
# stich2 <- cbind(stich, paste(stich[,2], stich[, 3], sep="/"), paste(stich[,4], stich[, 5], sep="/"))#
# stich2[stich2 == "/"] <- ""#
#
# stich2 <- data.frame(stich2)#
# colnames(stich2) <- c("Study or subcategory", "n Good", "N Good"#
#
stich$Category <- gsub(stich$Category, pattern="–", replacement = "-", fixed=TRUE)#
keep_stich <- which(stich$Category == "Depth from cortical surface")#
stich2 <- stich[1:(keep_stich-1), ]#
#
stich2$Category[stich2$Category == "Basal ganglia/thalamus"] <- "Not Lobar"#
stich2$Category[stich2$Category == "5-8"] <- "3-8"#
#
stich_data <- merge(stich2, stich_data, all=TRUE, sort=FALSE)#
#
stich_data$STICH_Upper <- stich_data$STICH_Lower <- NULL#
#
cis <- sapply(strsplit(stich_data$OR.95..CI, split=" "), function(x) ifelse(length(x) > 0, x[2], NA))#
cis <- gsub(cis, pattern="(", replacement = "", fixed=TRUE)#
cis <- gsub(cis, pattern=")", replacement = "", fixed=TRUE)#
cis <- gsub(cis, pattern="–", replacement = "-", fixed=TRUE)#
cis <- strsplit(cis, split="-")#
cis <- lapply(cis, as.numeric)#
cis <- do.call("rbind", cis)#
#
stich_data$STICH_Lower <- cis[,1]#
stich_data$STICH_Upper <- cis[,2]#
stich_data$STICH_Lower[1] <- "Lower"#
stich_data$STICH_Upper[1] <- "Upper"
stich_data
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
#"Randomization ICH", "20-40", "40-60", "> 60", #
#"Surgery Time", "< 36 hours", ">= 36 hours"#
rpdf <- file.path(paperdir, "Stroke-2012-Gregson-1496-504.pdf")#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_times <- readpdf[282:322]#
stich1 <- c(stich_times[grepl(stich_times, pattern="Mendelow")])#
stich1 <- gsub(stich1, pattern="        ", replacement="")#
stich1 <- gsub(stich1, pattern="Mendelow", replacement="")#
data <- strsplit(stich1, split=" ")#
data <- lapply(data, function(x) x[x != ""])#
data <- lapply(data, function(x) gsub(gsub(x, pattern="[", replacement="", fixed=TRUE), pattern="]", replacement="", fixed=TRUE))#
data <- lapply(data, function(x) gsub(x, pattern=",", replacement="", fixed=TRUE))#
data[[1]] <- data[[1]][data[[1]] !="(fixed)"]#
data <- do.call("rbind", data)#
colnames(data) <- c("Early", "Conservative", "OR", "STICH_Lower", "STICH_Upper")#
data <- data.frame(data, stringsAsFactors=FALSE)#
data$Category <- c("< 8 hrs", "8-24 hrs", "24-72 hrs")#
data <- data[, c("Category", colnames(data)[colnames(data) != "Category"])]#
#colnames(data) <- #
stich_data <- data#
#
cn <- colnames(stich_data)#
for (icol in c("Early", "Conservative")){#
  nums <- strsplit(stich_data[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich_data <- cbind(stich_data, nums)#
  suf <- substr(icol, 1, 1)#
  colnames(stich_data) <- c(cn, paste(c("n", "N"), suf, sep="_"))#
  cn <- colnames(stich_data)#
}#
#
stich_data$OR.95..CI <- paste(stich_data$OR, paste("(", stich_data$STICH_Lower, "-", stich_data$STICH_Upper, ")", sep=""), sep=" ")#
#
stich_data$OR <- as.numeric(stich_data$OR)
stich_data
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
#"Randomization ICH", "20-40", "40-60", "> 60", #
#"Surgery Time", "< 36 hours", ">= 36 hours"#
rpdf <- file.path(paperdir, "Stroke-2012-Gregson-1496-504.pdf")#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_times <- readpdf[282:322]#
stich1 <- c(stich_times[grepl(stich_times, pattern="Mendelow")])#
stich1 <- gsub(stich1, pattern="        ", replacement="")#
stich1 <- gsub(stich1, pattern="Mendelow", replacement="")#
data <- strsplit(stich1, split=" ")#
data <- lapply(data, function(x) x[x != ""])#
data <- lapply(data, function(x) gsub(gsub(x, pattern="[", replacement="", fixed=TRUE), pattern="]", replacement="", fixed=TRUE))#
data <- lapply(data, function(x) gsub(x, pattern=",", replacement="", fixed=TRUE))#
data[[1]] <- data[[1]][data[[1]] !="(fixed)"]#
data <- do.call("rbind", data)#
colnames(data) <- c("Early", "Conservative", "OR", "STICH_Lower", "STICH_Upper")#
data <- data.frame(data, stringsAsFactors=FALSE)#
data$Category <- c("< 8 hrs", "8-24 hrs", "24-72 hrs")#
data <- data[, c("Category", colnames(data)[colnames(data) != "Category"])]#
#colnames(data) <- #
stich_data <- data#
#
cn <- colnames(stich_data)#
for (icol in c("Early", "Conservative")){#
  nums <- strsplit(stich_data[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich_data <- cbind(stich_data, nums)#
  suf <- substr(icol, 1, 1)#
  colnames(stich_data) <- c(cn, paste(c("n", "N"), suf, sep="_"))#
  cn <- colnames(stich_data)#
}#
#
stich_data$OR.95..CI <- paste(stich_data$OR, paste("(", stich_data$STICH_Lower, "-", stich_data$STICH_Upper, ")", sep=""), sep=" ")#
#
stich_data$OR <- as.numeric(stich_data$OR)#
#
stich_data <- rbind(c("Time to Randomization", rep(NA, ncol(stich_data)-1)), stich_data)
stich_data
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
#"Randomization ICH", "20-40", "40-60", "> 60", #
#"Surgery Time", "< 36 hours", ">= 36 hours"#
rpdf <- file.path(paperdir, "Stroke-2012-Gregson-1496-504.pdf")#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_times <- readpdf[282:322]#
stich1 <- c(stich_times[grepl(stich_times, pattern="Mendelow")])#
stich1 <- gsub(stich1, pattern="        ", replacement="")#
stich1 <- gsub(stich1, pattern="Mendelow", replacement="")#
data <- strsplit(stich1, split=" ")#
data <- lapply(data, function(x) x[x != ""])#
data <- lapply(data, function(x) gsub(gsub(x, pattern="[", replacement="", fixed=TRUE), pattern="]", replacement="", fixed=TRUE))#
data <- lapply(data, function(x) gsub(x, pattern=",", replacement="", fixed=TRUE))#
data[[1]] <- data[[1]][data[[1]] !="(fixed)"]#
data <- do.call("rbind", data)#
colnames(data) <- c("Early", "Conservative", "OR", "STICH_Lower", "STICH_Upper")#
data <- data.frame(data, stringsAsFactors=FALSE)#
data$Category <- c("< 8 hrs", "8-24 hrs", "24-72 hrs")#
data <- data[, c("Category", colnames(data)[colnames(data) != "Category"])]#
#colnames(data) <- #
stich_data <- data#
#
cn <- colnames(stich_data)#
for (icol in c("Early", "Conservative")){#
  nums <- strsplit(stich_data[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich_data <- cbind(stich_data, nums)#
  suf <- substr(icol, 1, 1)#
  colnames(stich_data) <- c(cn, paste(c("n", "N"), suf, sep="_"))#
  cn <- colnames(stich_data)#
}#
#
stich_data$OR.95..CI <- paste(stich_data$OR, paste("(", stich_data$STICH_Lower, "-", stich_data$STICH_Upper, ")", sep=""), sep=" ")#
#
stich_data$OR <- as.numeric(stich_data$OR)#
#
stich_data <- rbind(c("Time to Randomization", rep(NA, ncol(stich_data)-1)), stich_data)#
rpdf <- file.path(paperdir, "STICH.pdf")#
#
rpdf <- "/Users/muschellij2/Dropbox/CTR/DHanley/Papers/STICH.pdf"#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_tab <- readpdf[450:512]#
stich_tab <- gsub(pattern="\\u03fd", replacement =">=", x=stich_tab)#
stich_tab <- gsub(pattern="\\u03fe", replacement =">", x=stich_tab)#
spl <- strsplit(stich_tab, split= "         ")#
spl <- lapply(spl, function(x) if(length(x) > 0) x <- x[x!= ""])#
#spl[spl == ""] <- NULL#
nulls <- sapply(spl, function(x) is.null(x))#
spl <- spl[!nulls]#
spl <- lapply(spl, function(x) gsub(x=x, pattern="  ", replacement = ""))#
#spl <- lapply(spl, function(x) strsplit(x, split= "  "))#
spl <- lapply(spl, function(x) {#
  l <- length(x)#
  if (l < 5) {#
    c(x, rep("", 5-l))#
  } else {#
    x#
  }#
  })#
#
spl_top <- gsub(do.call('rbind', spl[1:3]), pattern="^ ", replacement="")#
spl_top <- apply(spl_top, 2, paste, collapse=' ')#
tab <- do.call('rbind', spl[4:length(spl)])#
tab <- rbind(spl_top, tab)#
rownames(tab) <- NULL#
tab <- tab[, 1:4]#
stich <- data.frame(tab, stringsAsFactors=FALSE)#
#
stich[,1] <- gsub(pattern="\u03fd", replacement =">= ", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="\u03fe", replacement ="> ", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="р50", replacement ="<= 50", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="у65", replacement ="< 65", x=stich[,1], fixed=TRUE)#
stich <- sapply(stich, function(x) gsub(pattern="·", replacement=".", fixed=TRUE, x=x))#
stich <- apply(stich, 2, function(x) gsub(x=x, pattern="^ ", replacement=""))#
for (icol in 2:3){#
  nums <- strsplit(stich[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich <- cbind(stich, nums)#
}#
ORs <- strsplit(stich[,4], split=" ")#
ORs <- sapply(ORs, function(x) ifelse(length(x) > 0, x[1], "" ))#
ORs <- as.numeric(ORs)#
stich <- cbind(stich, OR = ORs)#
#
colnames(stich) <- c("Category", "Early", "Conservative", "OR 95% CI", "n_E", "N_E", "n_C", "N_C", "OR") #
stich <- data.frame(stich, stringsAsFactors=FALSE)#
for (icol in c("n_E", "N_E", "n_C", "N_C", "OR")) stich[, icol] <- as.numeric(stich[, icol])#
test <- round((stich$n_E* (stich$N_C - stich$n_C))/ (stich$n_C* (stich$N_E - stich$n_E)), 2)#
Diff <- abs(test - stich$OR) > 0.001 & !is.na(test)#
cbind(test, stich)[Diff,]#
#
# stich <-  cbind(c("Age", "< 65", "65 or older", "", "GCS", "5-8", "9-12", "13-15", "", "Side of Hematoma", "Left", "Right", "", "Site of Hematoma", "Lobar", "Basal Ganglia/Thalamus", "", "Hematoma Volume", "<= 50mL", ">50mL", "", "Depth from Cortical Surface", "<=1cm", "> 1cm"),#
#                 rbind(rep("", 4), c(182, 162, 204, 284), c(164, 206, 174, 212), rep("", 4), rep("", 4), c(80, 88, 83, 99), c(140, 187, 158, 196), c(126, 193, 137, 201), rep("", 4), rep("", 4), c(186, 246, 208, 265), c(160, 222, 170, 231), rep("", 4), rep("", 4), c(107, 181, 130, 194), c(236, 284, 247, 300), rep("", 4), rep("", 4), c(211, 302, 238, 323), c(135, 166, 140, 173), rep("", 4), rep("", 4), c(170, 257, 192, 260), c(174, 208, 184, 234)#
#                       ))#
# #
# stich2 <- cbind(stich, paste(stich[,2], stich[, 3], sep="/"), paste(stich[,4], stich[, 5], sep="/"))#
# stich2[stich2 == "/"] <- ""#
#
# stich2 <- data.frame(stich2)#
# colnames(stich2) <- c("Study or subcategory", "n Good", "N Good"#
#
stich$Category <- gsub(stich$Category, pattern="–", replacement = "-", fixed=TRUE)#
keep_stich <- which(stich$Category == "Depth from cortical surface")#
stich2 <- stich[1:(keep_stich-1), ]#
#
stich2$Category[stich2$Category == "Basal ganglia/thalamus"] <- "Not Lobar"#
stich2$Category[stich2$Category == "5-8"] <- "3-8"#
#
stich_data <- merge(stich2, stich_data, all=TRUE, sort=FALSE)#
#
stich_data$STICH_Upper <- stich_data$STICH_Lower <- NULL#
#
cis <- sapply(strsplit(stich_data$OR.95..CI, split=" "), function(x) ifelse(length(x) > 0, x[2], NA))#
cis <- gsub(cis, pattern="(", replacement = "", fixed=TRUE)#
cis <- gsub(cis, pattern=")", replacement = "", fixed=TRUE)#
cis <- gsub(cis, pattern="–", replacement = "-", fixed=TRUE)#
cis <- strsplit(cis, split="-")#
cis <- lapply(cis, as.numeric)#
cis <- do.call("rbind", cis)#
#
stich_data$STICH_Lower <- cis[,1]#
stich_data$STICH_Upper <- cis[,2]#
stich_data$STICH_Lower[1] <- "Lower"#
stich_data$STICH_Upper[1] <- "Upper"
stich_data
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
#"Randomization ICH", "20-40", "40-60", "> 60", #
#"Surgery Time", "< 36 hours", ">= 36 hours"#
rpdf <- file.path(paperdir, "Stroke-2012-Gregson-1496-504.pdf")#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_times <- readpdf[282:322]#
stich1 <- c(stich_times[grepl(stich_times, pattern="Mendelow")])#
stich1 <- gsub(stich1, pattern="        ", replacement="")#
stich1 <- gsub(stich1, pattern="Mendelow", replacement="")#
data <- strsplit(stich1, split=" ")#
data <- lapply(data, function(x) x[x != ""])#
data <- lapply(data, function(x) gsub(gsub(x, pattern="[", replacement="", fixed=TRUE), pattern="]", replacement="", fixed=TRUE))#
data <- lapply(data, function(x) gsub(x, pattern=",", replacement="", fixed=TRUE))#
data[[1]] <- data[[1]][data[[1]] !="(fixed)"]#
data <- do.call("rbind", data)#
colnames(data) <- c("Early", "Conservative", "OR", "STICH_Lower", "STICH_Upper")#
data <- data.frame(data, stringsAsFactors=FALSE)#
data$Category <- c("< 8 hrs", "8-24 hrs", "24-72 hrs")#
data <- data[, c("Category", colnames(data)[colnames(data) != "Category"])]#
#colnames(data) <- #
stich_data <- data#
#
cn <- colnames(stich_data)#
for (icol in c("Early", "Conservative")){#
  nums <- strsplit(stich_data[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich_data <- cbind(stich_data, nums)#
  suf <- substr(icol, 1, 1)#
  colnames(stich_data) <- c(cn, paste(c("n", "N"), suf, sep="_"))#
  cn <- colnames(stich_data)#
}#
#
stich_data$OR.95..CI <- paste(stich_data$OR, paste("(", stich_data$STICH_Lower, "-", stich_data$STICH_Upper, ")", sep=""), sep=" ")#
#
stich_data$OR <- as.numeric(stich_data$OR)#
#
stich_data <- rbind(c("Time to Randomization", rep(NA, ncol(stich_data)-1)), stich_data)#
rpdf <- file.path(paperdir, "STICH.pdf")#
#
rpdf <- "/Users/muschellij2/Dropbox/CTR/DHanley/Papers/STICH.pdf"#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_tab <- readpdf[450:512]#
stich_tab <- gsub(pattern="\\u03fd", replacement =">=", x=stich_tab)#
stich_tab <- gsub(pattern="\\u03fe", replacement =">", x=stich_tab)#
spl <- strsplit(stich_tab, split= "         ")#
spl <- lapply(spl, function(x) if(length(x) > 0) x <- x[x!= ""])#
#spl[spl == ""] <- NULL#
nulls <- sapply(spl, function(x) is.null(x))#
spl <- spl[!nulls]#
spl <- lapply(spl, function(x) gsub(x=x, pattern="  ", replacement = ""))#
#spl <- lapply(spl, function(x) strsplit(x, split= "  "))#
spl <- lapply(spl, function(x) {#
  l <- length(x)#
  if (l < 5) {#
    c(x, rep("", 5-l))#
  } else {#
    x#
  }#
  })#
#
spl_top <- gsub(do.call('rbind', spl[1:3]), pattern="^ ", replacement="")#
spl_top <- apply(spl_top, 2, paste, collapse=' ')#
tab <- do.call('rbind', spl[4:length(spl)])#
tab <- rbind(spl_top, tab)#
rownames(tab) <- NULL#
tab <- tab[, 1:4]#
stich <- data.frame(tab, stringsAsFactors=FALSE)#
#
stich[,1] <- gsub(pattern="\u03fd", replacement =">= ", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="\u03fe", replacement ="> ", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="р50", replacement ="<= 50", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="у65", replacement ="< 65", x=stich[,1], fixed=TRUE)#
stich <- sapply(stich, function(x) gsub(pattern="·", replacement=".", fixed=TRUE, x=x))#
stich <- apply(stich, 2, function(x) gsub(x=x, pattern="^ ", replacement=""))#
for (icol in 2:3){#
  nums <- strsplit(stich[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich <- cbind(stich, nums)#
}#
ORs <- strsplit(stich[,4], split=" ")#
ORs <- sapply(ORs, function(x) ifelse(length(x) > 0, x[1], "" ))#
ORs <- as.numeric(ORs)#
stich <- cbind(stich, OR = ORs)#
#
colnames(stich) <- c("Category", "Early", "Conservative", "OR 95% CI", "n_E", "N_E", "n_C", "N_C", "OR") #
stich <- data.frame(stich, stringsAsFactors=FALSE)#
for (icol in c("n_E", "N_E", "n_C", "N_C", "OR")) stich[, icol] <- as.numeric(stich[, icol])#
test <- round((stich$n_E* (stich$N_C - stich$n_C))/ (stich$n_C* (stich$N_E - stich$n_E)), 2)#
Diff <- abs(test - stich$OR) > 0.001 & !is.na(test)#
cbind(test, stich)[Diff,]#
#
# stich <-  cbind(c("Age", "< 65", "65 or older", "", "GCS", "5-8", "9-12", "13-15", "", "Side of Hematoma", "Left", "Right", "", "Site of Hematoma", "Lobar", "Basal Ganglia/Thalamus", "", "Hematoma Volume", "<= 50mL", ">50mL", "", "Depth from Cortical Surface", "<=1cm", "> 1cm"),#
#                 rbind(rep("", 4), c(182, 162, 204, 284), c(164, 206, 174, 212), rep("", 4), rep("", 4), c(80, 88, 83, 99), c(140, 187, 158, 196), c(126, 193, 137, 201), rep("", 4), rep("", 4), c(186, 246, 208, 265), c(160, 222, 170, 231), rep("", 4), rep("", 4), c(107, 181, 130, 194), c(236, 284, 247, 300), rep("", 4), rep("", 4), c(211, 302, 238, 323), c(135, 166, 140, 173), rep("", 4), rep("", 4), c(170, 257, 192, 260), c(174, 208, 184, 234)#
#                       ))#
# #
# stich2 <- cbind(stich, paste(stich[,2], stich[, 3], sep="/"), paste(stich[,4], stich[, 5], sep="/"))#
# stich2[stich2 == "/"] <- ""#
#
# stich2 <- data.frame(stich2)#
# colnames(stich2) <- c("Study or subcategory", "n Good", "N Good"#
#
stich$Category <- gsub(stich$Category, pattern="–", replacement = "-", fixed=TRUE)#
keep_stich <- which(stich$Category == "Depth from cortical surface")#
stich2 <- stich[1:(keep_stich-1), ]#
#
stich2$Category[stich2$Category == "Basal ganglia/thalamus"] <- "Not Lobar"#
stich2$Category[stich2$Category == "5-8"] <- "3-8"#
#
stich_data <- merge(stich2, stich_data, all=TRUE, sort=FALSE)#
#
stich_data$STICH_Upper <- stich_data$STICH_Lower <- NULL#
#
cis <- sapply(strsplit(stich_data$OR.95..CI, split=" "), function(x) ifelse(length(x) > 0, x[2], NA))#
cis <- gsub(cis, pattern="(", replacement = "", fixed=TRUE)#
cis <- gsub(cis, pattern=")", replacement = "", fixed=TRUE)#
cis <- gsub(cis, pattern="–", replacement = "-", fixed=TRUE)#
cis <- strsplit(cis, split="-")#
cis <- lapply(cis, as.numeric)#
cis <- do.call("rbind", cis)#
#
stich_data$STICH_Lower <- cis[,1]#
stich_data$STICH_Upper <- cis[,2]#
stich_data$STICH_Lower[1] <- "Lower"#
stich_data$STICH_Upper[1] <- "Upper"#
#
stich$Early[is.na(stich$Early)] <- ""#
stich$Conservative[is.na(stich$Conservative)] <- ""#
stich$OR.95..CI[is.na(stich$OR.95..CI)] <- ""
stich_data
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
#"Randomization ICH", "20-40", "40-60", "> 60", #
#"Surgery Time", "< 36 hours", ">= 36 hours"#
rpdf <- file.path(paperdir, "Stroke-2012-Gregson-1496-504.pdf")#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_times <- readpdf[282:322]#
stich1 <- c(stich_times[grepl(stich_times, pattern="Mendelow")])#
stich1 <- gsub(stich1, pattern="        ", replacement="")#
stich1 <- gsub(stich1, pattern="Mendelow", replacement="")#
data <- strsplit(stich1, split=" ")#
data <- lapply(data, function(x) x[x != ""])#
data <- lapply(data, function(x) gsub(gsub(x, pattern="[", replacement="", fixed=TRUE), pattern="]", replacement="", fixed=TRUE))#
data <- lapply(data, function(x) gsub(x, pattern=",", replacement="", fixed=TRUE))#
data[[1]] <- data[[1]][data[[1]] !="(fixed)"]#
data <- do.call("rbind", data)#
colnames(data) <- c("Early", "Conservative", "OR", "STICH_Lower", "STICH_Upper")#
data <- data.frame(data, stringsAsFactors=FALSE)#
data$Category <- c("< 8 hrs", "8-24 hrs", "24-72 hrs")#
data <- data[, c("Category", colnames(data)[colnames(data) != "Category"])]#
#colnames(data) <- #
stich_data <- data#
#
cn <- colnames(stich_data)#
for (icol in c("Early", "Conservative")){#
  nums <- strsplit(stich_data[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich_data <- cbind(stich_data, nums)#
  suf <- substr(icol, 1, 1)#
  colnames(stich_data) <- c(cn, paste(c("n", "N"), suf, sep="_"))#
  cn <- colnames(stich_data)#
}#
#
stich_data$OR.95..CI <- paste(stich_data$OR, paste("(", stich_data$STICH_Lower, "-", stich_data$STICH_Upper, ")", sep=""), sep=" ")#
#
stich_data$OR <- as.numeric(stich_data$OR)#
#
stich_data <- rbind(c("Time to Randomization", rep(NA, ncol(stich_data)-1)), stich_data)#
rpdf <- file.path(paperdir, "STICH.pdf")#
#
rpdf <- "/Users/muschellij2/Dropbox/CTR/DHanley/Papers/STICH.pdf"#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_tab <- readpdf[450:512]#
stich_tab <- gsub(pattern="\\u03fd", replacement =">=", x=stich_tab)#
stich_tab <- gsub(pattern="\\u03fe", replacement =">", x=stich_tab)#
spl <- strsplit(stich_tab, split= "         ")#
spl <- lapply(spl, function(x) if(length(x) > 0) x <- x[x!= ""])#
#spl[spl == ""] <- NULL#
nulls <- sapply(spl, function(x) is.null(x))#
spl <- spl[!nulls]#
spl <- lapply(spl, function(x) gsub(x=x, pattern="  ", replacement = ""))#
#spl <- lapply(spl, function(x) strsplit(x, split= "  "))#
spl <- lapply(spl, function(x) {#
  l <- length(x)#
  if (l < 5) {#
    c(x, rep("", 5-l))#
  } else {#
    x#
  }#
  })#
#
spl_top <- gsub(do.call('rbind', spl[1:3]), pattern="^ ", replacement="")#
spl_top <- apply(spl_top, 2, paste, collapse=' ')#
tab <- do.call('rbind', spl[4:length(spl)])#
tab <- rbind(spl_top, tab)#
rownames(tab) <- NULL#
tab <- tab[, 1:4]#
stich <- data.frame(tab, stringsAsFactors=FALSE)#
#
stich[,1] <- gsub(pattern="\u03fd", replacement =">= ", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="\u03fe", replacement ="> ", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="р50", replacement ="<= 50", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="у65", replacement ="< 65", x=stich[,1], fixed=TRUE)#
stich <- sapply(stich, function(x) gsub(pattern="·", replacement=".", fixed=TRUE, x=x))#
stich <- apply(stich, 2, function(x) gsub(x=x, pattern="^ ", replacement=""))#
for (icol in 2:3){#
  nums <- strsplit(stich[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich <- cbind(stich, nums)#
}#
ORs <- strsplit(stich[,4], split=" ")#
ORs <- sapply(ORs, function(x) ifelse(length(x) > 0, x[1], "" ))#
ORs <- as.numeric(ORs)#
stich <- cbind(stich, OR = ORs)#
#
colnames(stich) <- c("Category", "Early", "Conservative", "OR 95% CI", "n_E", "N_E", "n_C", "N_C", "OR") #
stich <- data.frame(stich, stringsAsFactors=FALSE)#
for (icol in c("n_E", "N_E", "n_C", "N_C", "OR")) stich[, icol] <- as.numeric(stich[, icol])#
test <- round((stich$n_E* (stich$N_C - stich$n_C))/ (stich$n_C* (stich$N_E - stich$n_E)), 2)#
Diff <- abs(test - stich$OR) > 0.001 & !is.na(test)#
cbind(test, stich)[Diff,]#
#
# stich <-  cbind(c("Age", "< 65", "65 or older", "", "GCS", "5-8", "9-12", "13-15", "", "Side of Hematoma", "Left", "Right", "", "Site of Hematoma", "Lobar", "Basal Ganglia/Thalamus", "", "Hematoma Volume", "<= 50mL", ">50mL", "", "Depth from Cortical Surface", "<=1cm", "> 1cm"),#
#                 rbind(rep("", 4), c(182, 162, 204, 284), c(164, 206, 174, 212), rep("", 4), rep("", 4), c(80, 88, 83, 99), c(140, 187, 158, 196), c(126, 193, 137, 201), rep("", 4), rep("", 4), c(186, 246, 208, 265), c(160, 222, 170, 231), rep("", 4), rep("", 4), c(107, 181, 130, 194), c(236, 284, 247, 300), rep("", 4), rep("", 4), c(211, 302, 238, 323), c(135, 166, 140, 173), rep("", 4), rep("", 4), c(170, 257, 192, 260), c(174, 208, 184, 234)#
#                       ))#
# #
# stich2 <- cbind(stich, paste(stich[,2], stich[, 3], sep="/"), paste(stich[,4], stich[, 5], sep="/"))#
# stich2[stich2 == "/"] <- ""#
#
# stich2 <- data.frame(stich2)#
# colnames(stich2) <- c("Study or subcategory", "n Good", "N Good"#
#
stich$Category <- gsub(stich$Category, pattern="–", replacement = "-", fixed=TRUE)#
keep_stich <- which(stich$Category == "Depth from cortical surface")#
stich2 <- stich[1:(keep_stich-1), ]#
#
stich2$Category[stich2$Category == "Basal ganglia/thalamus"] <- "Not Lobar"#
stich2$Category[stich2$Category == "5-8"] <- "3-8"#
#
stich_data <- merge(stich2, stich_data, all=TRUE, sort=FALSE)#
#
stich_data$STICH_Upper <- stich_data$STICH_Lower <- NULL#
#
cis <- sapply(strsplit(stich_data$OR.95..CI, split=" "), function(x) ifelse(length(x) > 0, x[2], NA))#
cis <- gsub(cis, pattern="(", replacement = "", fixed=TRUE)#
cis <- gsub(cis, pattern=")", replacement = "", fixed=TRUE)#
cis <- gsub(cis, pattern="–", replacement = "-", fixed=TRUE)#
cis <- strsplit(cis, split="-")#
cis <- lapply(cis, as.numeric)#
cis <- do.call("rbind", cis)#
#
stich_data$STICH_Lower <- cis[,1]#
stich_data$STICH_Upper <- cis[,2]#
stich_data$STICH_Lower[1] <- "Lower"#
stich_data$STICH_Upper[1] <- "Upper"#
#
stich_data$Early[is.na(stich$Early)] <- ""#
stich_data$Conservative[is.na(stich$Conservative)] <- ""#
stich_data$OR.95..CI[is.na(stich$OR.95..CI)] <- ""
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
#"Randomization ICH", "20-40", "40-60", "> 60", #
#"Surgery Time", "< 36 hours", ">= 36 hours"#
rpdf <- file.path(paperdir, "Stroke-2012-Gregson-1496-504.pdf")#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_times <- readpdf[282:322]#
stich1 <- c(stich_times[grepl(stich_times, pattern="Mendelow")])#
stich1 <- gsub(stich1, pattern="        ", replacement="")#
stich1 <- gsub(stich1, pattern="Mendelow", replacement="")#
data <- strsplit(stich1, split=" ")#
data <- lapply(data, function(x) x[x != ""])#
data <- lapply(data, function(x) gsub(gsub(x, pattern="[", replacement="", fixed=TRUE), pattern="]", replacement="", fixed=TRUE))#
data <- lapply(data, function(x) gsub(x, pattern=",", replacement="", fixed=TRUE))#
data[[1]] <- data[[1]][data[[1]] !="(fixed)"]#
data <- do.call("rbind", data)#
colnames(data) <- c("Early", "Conservative", "OR", "STICH_Lower", "STICH_Upper")#
data <- data.frame(data, stringsAsFactors=FALSE)#
data$Category <- c("< 8 hrs", "8-24 hrs", "24-72 hrs")#
data <- data[, c("Category", colnames(data)[colnames(data) != "Category"])]#
#colnames(data) <- #
stich_data <- data#
#
cn <- colnames(stich_data)#
for (icol in c("Early", "Conservative")){#
  nums <- strsplit(stich_data[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich_data <- cbind(stich_data, nums)#
  suf <- substr(icol, 1, 1)#
  colnames(stich_data) <- c(cn, paste(c("n", "N"), suf, sep="_"))#
  cn <- colnames(stich_data)#
}#
#
stich_data$OR.95..CI <- paste(stich_data$OR, paste("(", stich_data$STICH_Lower, "-", stich_data$STICH_Upper, ")", sep=""), sep=" ")#
#
stich_data$OR <- as.numeric(stich_data$OR)#
#
stich_data <- rbind(c("Time to Randomization", rep(NA, ncol(stich_data)-1)), stich_data)#
rpdf <- file.path(paperdir, "STICH.pdf")#
#
rpdf <- "/Users/muschellij2/Dropbox/CTR/DHanley/Papers/STICH.pdf"#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_tab <- readpdf[450:512]#
stich_tab <- gsub(pattern="\\u03fd", replacement =">=", x=stich_tab)#
stich_tab <- gsub(pattern="\\u03fe", replacement =">", x=stich_tab)#
spl <- strsplit(stich_tab, split= "         ")#
spl <- lapply(spl, function(x) if(length(x) > 0) x <- x[x!= ""])#
#spl[spl == ""] <- NULL#
nulls <- sapply(spl, function(x) is.null(x))#
spl <- spl[!nulls]#
spl <- lapply(spl, function(x) gsub(x=x, pattern="  ", replacement = ""))#
#spl <- lapply(spl, function(x) strsplit(x, split= "  "))#
spl <- lapply(spl, function(x) {#
  l <- length(x)#
  if (l < 5) {#
    c(x, rep("", 5-l))#
  } else {#
    x#
  }#
  })#
#
spl_top <- gsub(do.call('rbind', spl[1:3]), pattern="^ ", replacement="")#
spl_top <- apply(spl_top, 2, paste, collapse=' ')#
tab <- do.call('rbind', spl[4:length(spl)])#
tab <- rbind(spl_top, tab)#
rownames(tab) <- NULL#
tab <- tab[, 1:4]#
stich <- data.frame(tab, stringsAsFactors=FALSE)#
#
stich[,1] <- gsub(pattern="\u03fd", replacement =">= ", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="\u03fe", replacement ="> ", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="р50", replacement ="<= 50", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="у65", replacement ="< 65", x=stich[,1], fixed=TRUE)#
stich <- sapply(stich, function(x) gsub(pattern="·", replacement=".", fixed=TRUE, x=x))#
stich <- apply(stich, 2, function(x) gsub(x=x, pattern="^ ", replacement=""))#
for (icol in 2:3){#
  nums <- strsplit(stich[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich <- cbind(stich, nums)#
}#
ORs <- strsplit(stich[,4], split=" ")#
ORs <- sapply(ORs, function(x) ifelse(length(x) > 0, x[1], "" ))#
ORs <- as.numeric(ORs)#
stich <- cbind(stich, OR = ORs)#
#
colnames(stich) <- c("Category", "Early", "Conservative", "OR 95% CI", "n_E", "N_E", "n_C", "N_C", "OR") #
stich <- data.frame(stich, stringsAsFactors=FALSE)#
for (icol in c("n_E", "N_E", "n_C", "N_C", "OR")) stich[, icol] <- as.numeric(stich[, icol])#
test <- round((stich$n_E* (stich$N_C - stich$n_C))/ (stich$n_C* (stich$N_E - stich$n_E)), 2)#
Diff <- abs(test - stich$OR) > 0.001 & !is.na(test)#
cbind(test, stich)[Diff,]#
#
# stich <-  cbind(c("Age", "< 65", "65 or older", "", "GCS", "5-8", "9-12", "13-15", "", "Side of Hematoma", "Left", "Right", "", "Site of Hematoma", "Lobar", "Basal Ganglia/Thalamus", "", "Hematoma Volume", "<= 50mL", ">50mL", "", "Depth from Cortical Surface", "<=1cm", "> 1cm"),#
#                 rbind(rep("", 4), c(182, 162, 204, 284), c(164, 206, 174, 212), rep("", 4), rep("", 4), c(80, 88, 83, 99), c(140, 187, 158, 196), c(126, 193, 137, 201), rep("", 4), rep("", 4), c(186, 246, 208, 265), c(160, 222, 170, 231), rep("", 4), rep("", 4), c(107, 181, 130, 194), c(236, 284, 247, 300), rep("", 4), rep("", 4), c(211, 302, 238, 323), c(135, 166, 140, 173), rep("", 4), rep("", 4), c(170, 257, 192, 260), c(174, 208, 184, 234)#
#                       ))#
# #
# stich2 <- cbind(stich, paste(stich[,2], stich[, 3], sep="/"), paste(stich[,4], stich[, 5], sep="/"))#
# stich2[stich2 == "/"] <- ""#
#
# stich2 <- data.frame(stich2)#
# colnames(stich2) <- c("Study or subcategory", "n Good", "N Good"#
#
stich$Category <- gsub(stich$Category, pattern="–", replacement = "-", fixed=TRUE)#
keep_stich <- which(stich$Category == "Depth from cortical surface")#
stich2 <- stich[1:(keep_stich-1), ]#
#
stich2$Category[stich2$Category == "Basal ganglia/thalamus"] <- "Not Lobar"#
stich2$Category[stich2$Category == "5-8"] <- "3-8"#
#
stich_data <- merge(stich2, stich_data, all=TRUE, sort=FALSE)#
#
stich_data$STICH_Upper <- stich_data$STICH_Lower <- NULL#
#
cis <- sapply(strsplit(stich_data$OR.95..CI, split=" "), function(x) ifelse(length(x) > 0, x[2], NA))#
cis <- gsub(cis, pattern="(", replacement = "", fixed=TRUE)#
cis <- gsub(cis, pattern=")", replacement = "", fixed=TRUE)#
cis <- gsub(cis, pattern="–", replacement = "-", fixed=TRUE)#
cis <- strsplit(cis, split="-")#
cis <- lapply(cis, as.numeric)#
cis <- do.call("rbind", cis)#
#
stich_data$STICH_Lower <- cis[,1]#
stich_data$STICH_Upper <- cis[,2]#
stich_data$STICH_Lower[1] <- "Lower"#
stich_data$STICH_Upper[1] <- "Upper"#
#
stich_data$Early[is.na(stich_data$Early)] <- ""#
stich_data$Conservative[is.na(stich_data$Conservative)] <- ""#
stich_data$OR.95..CI[is.na(stich_data$OR.95..CI)] <- ""
stich_data
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
#"Randomization ICH", "20-40", "40-60", "> 60", #
#"Surgery Time", "< 36 hours", ">= 36 hours"#
rpdf <- file.path(paperdir, "Stroke-2012-Gregson-1496-504.pdf")#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_times <- readpdf[282:322]#
stich1 <- c(stich_times[grepl(stich_times, pattern="Mendelow")])#
stich1 <- gsub(stich1, pattern="        ", replacement="")#
stich1 <- gsub(stich1, pattern="Mendelow", replacement="")#
data <- strsplit(stich1, split=" ")#
data <- lapply(data, function(x) x[x != ""])#
data <- lapply(data, function(x) gsub(gsub(x, pattern="[", replacement="", fixed=TRUE), pattern="]", replacement="", fixed=TRUE))#
data <- lapply(data, function(x) gsub(x, pattern=",", replacement="", fixed=TRUE))#
data[[1]] <- data[[1]][data[[1]] !="(fixed)"]#
data <- do.call("rbind", data)#
colnames(data) <- c("Early", "Conservative", "OR", "STICH_Lower", "STICH_Upper")#
data <- data.frame(data, stringsAsFactors=FALSE)#
data$Category <- c("< 8 hrs", "8-24 hrs", "24-72 hrs")#
data <- data[, c("Category", colnames(data)[colnames(data) != "Category"])]#
#colnames(data) <- #
stich_data <- data#
#
cn <- colnames(stich_data)#
for (icol in c("Early", "Conservative")){#
  nums <- strsplit(stich_data[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich_data <- cbind(stich_data, nums)#
  suf <- substr(icol, 1, 1)#
  colnames(stich_data) <- c(cn, paste(c("n", "N"), suf, sep="_"))#
  cn <- colnames(stich_data)#
}#
#
stich_data$OR.95..CI <- paste(stich_data$OR, paste("(", stich_data$STICH_Lower, "-", stich_data$STICH_Upper, ")", sep=""), sep=" ")#
#
stich_data$OR <- as.numeric(stich_data$OR)#
#
stich_data <- rbind(c("Time to Randomization", rep(NA, ncol(stich_data)-1)), stich_data)#
rpdf <- file.path(paperdir, "STICH.pdf")#
#
rpdf <- "/Users/muschellij2/Dropbox/CTR/DHanley/Papers/STICH.pdf"#
readpdf <-readPDF(PdftotextOptions = "-layout")(elem = list(uri = rpdf),#
                                                language = "en",#
                                                id = "id1") #
stich_tab <- readpdf[450:512]#
stich_tab <- gsub(pattern="\\u03fd", replacement =">=", x=stich_tab)#
stich_tab <- gsub(pattern="\\u03fe", replacement =">", x=stich_tab)#
spl <- strsplit(stich_tab, split= "         ")#
spl <- lapply(spl, function(x) if(length(x) > 0) x <- x[x!= ""])#
#spl[spl == ""] <- NULL#
nulls <- sapply(spl, function(x) is.null(x))#
spl <- spl[!nulls]#
spl <- lapply(spl, function(x) gsub(x=x, pattern="  ", replacement = ""))#
#spl <- lapply(spl, function(x) strsplit(x, split= "  "))#
spl <- lapply(spl, function(x) {#
  l <- length(x)#
  if (l < 5) {#
    c(x, rep("", 5-l))#
  } else {#
    x#
  }#
  })#
#
spl_top <- gsub(do.call('rbind', spl[1:3]), pattern="^ ", replacement="")#
spl_top <- apply(spl_top, 2, paste, collapse=' ')#
tab <- do.call('rbind', spl[4:length(spl)])#
tab <- rbind(spl_top, tab)#
rownames(tab) <- NULL#
tab <- tab[, 1:4]#
stich <- data.frame(tab, stringsAsFactors=FALSE)#
#
stich[,1] <- gsub(pattern="\u03fd", replacement =">= ", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="\u03fe", replacement ="> ", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="р50", replacement ="<= 50", x=stich[,1], fixed=TRUE)#
stich[,1] <- gsub(pattern="у65", replacement ="< 65", x=stich[,1], fixed=TRUE)#
stich <- sapply(stich, function(x) gsub(pattern="·", replacement=".", fixed=TRUE, x=x))#
stich <- apply(stich, 2, function(x) gsub(x=x, pattern="^ ", replacement=""))#
for (icol in 2:3){#
  nums <- strsplit(stich[,icol], split="/")#
  nums <- lapply(nums, function(x) {#
    if (length(x) == 0)#
      rep("", 2)#
    else x#
  })#
  nums <- do.call("rbind", nums)#
  nums <- apply(nums, 2,  as.numeric)#
  stich <- cbind(stich, nums)#
}#
ORs <- strsplit(stich[,4], split=" ")#
ORs <- sapply(ORs, function(x) ifelse(length(x) > 0, x[1], "" ))#
ORs <- as.numeric(ORs)#
stich <- cbind(stich, OR = ORs)#
#
colnames(stich) <- c("Category", "Early", "Conservative", "OR 95% CI", "n_E", "N_E", "n_C", "N_C", "OR") #
stich <- data.frame(stich, stringsAsFactors=FALSE)#
for (icol in c("n_E", "N_E", "n_C", "N_C", "OR")) stich[, icol] <- as.numeric(stich[, icol])#
test <- round((stich$n_E* (stich$N_C - stich$n_C))/ (stich$n_C* (stich$N_E - stich$n_E)), 2)#
Diff <- abs(test - stich$OR) > 0.001 & !is.na(test)#
cbind(test, stich)[Diff,]#
#
# stich <-  cbind(c("Age", "< 65", "65 or older", "", "GCS", "5-8", "9-12", "13-15", "", "Side of Hematoma", "Left", "Right", "", "Site of Hematoma", "Lobar", "Basal Ganglia/Thalamus", "", "Hematoma Volume", "<= 50mL", ">50mL", "", "Depth from Cortical Surface", "<=1cm", "> 1cm"),#
#                 rbind(rep("", 4), c(182, 162, 204, 284), c(164, 206, 174, 212), rep("", 4), rep("", 4), c(80, 88, 83, 99), c(140, 187, 158, 196), c(126, 193, 137, 201), rep("", 4), rep("", 4), c(186, 246, 208, 265), c(160, 222, 170, 231), rep("", 4), rep("", 4), c(107, 181, 130, 194), c(236, 284, 247, 300), rep("", 4), rep("", 4), c(211, 302, 238, 323), c(135, 166, 140, 173), rep("", 4), rep("", 4), c(170, 257, 192, 260), c(174, 208, 184, 234)#
#                       ))#
# #
# stich2 <- cbind(stich, paste(stich[,2], stich[, 3], sep="/"), paste(stich[,4], stich[, 5], sep="/"))#
# stich2[stich2 == "/"] <- ""#
#
# stich2 <- data.frame(stich2)#
# colnames(stich2) <- c("Study or subcategory", "n Good", "N Good"#
#
stich$Category <- gsub(stich$Category, pattern="–", replacement = "-", fixed=TRUE)#
keep_stich <- which(stich$Category == "Depth from cortical surface")#
stich2 <- stich[1:(keep_stich-1), ]#
#
stich2$Category[stich2$Category == "Basal ganglia/thalamus"] <- "Not Lobar"#
stich2$Category[stich2$Category == "5-8"] <- "3-8"#
#
stich_data <- merge(stich2, stich_data, all=TRUE, sort=FALSE)#
#
stich_data$STICH_Upper <- stich_data$STICH_Lower <- NULL#
#
cis <- sapply(strsplit(stich_data$OR.95..CI, split=" "), function(x) ifelse(length(x) > 0, x[2], NA))#
cis <- gsub(cis, pattern="(", replacement = "", fixed=TRUE)#
cis <- gsub(cis, pattern=")", replacement = "", fixed=TRUE)#
cis <- gsub(cis, pattern="–", replacement = "-", fixed=TRUE)#
cis <- strsplit(cis, split="-")#
cis <- lapply(cis, as.numeric)#
cis <- do.call("rbind", cis)#
#
stich_data$STICH_Lower <- cis[,1]#
stich_data$STICH_Upper <- cis[,2]#
stich_data$STICH_Lower[1] <- "Lower"#
stich_data$STICH_Upper[1] <- "Upper"#
#
stich_data$Early[is.na(stich_data$Early)] <- ""#
stich_data$Conservative[is.na(stich_data$Conservative)] <- ""#
stich_data$OR.95..CI[is.na(stich_data$OR.95..CI)] <- ""#
save(list=c("stich_data"), file=file.path(homedir, "statacalc", 'STICH_Data.Rda'))
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
#
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
# levs <- c("< 1 Day","2 Day", "> 2 Days")#
# full.data$Time_To_Procedure <- NA#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure <= 1] <- levs[1]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 1 & full.data$Ictus_to_Op_Procedure <= 2] <- levs[2]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 2] <- levs[3]#
# full.data$Time_To_Procedure <- factor(full.data$Time_To_Procedure, levels= levs)#
# #
# ll <- c("Other", "African American")#
# full.data$African_American <- ll[as.numeric(full.data$Ethnicity == "African American not Hispanic") + 1]#
# full.data$African_American[full.data$Ethnicity == "Other or unknown"] <- NA#
# full.data$African_American <- factor(full.data$African_American, levels=ll)#
# full.data$Lob <- as.character(full.data$Lobar_BG_vs)#
# full.data$Lob[full.data$Lob == "Not Lobar"] <- "Deep"#
# full.data$Lob <- factor(full.data$Lob, levels= c("Lobar", "Deep"))#
# full.data$Lobar_BG_vs <- full.data$Lob#
#
full.data$ICH_Location <- full.data$Lobar_BG_vs#
#
xxfull.data <- full.data#
#Pct_Pre_10#
vname <- "Group_Assigned"#
#
full.data <-  xxfull.data#
# vname <- "Group_Assigned"#
ssub <- ""#
rvname <- vname#
vsub <- "Surgery"#
#
vars <- c("Age", "ICH_Pre_Rand_10", vname, "Enrollment_GCS_Add")#
cc <- complete.cases(full.data[, vars])#
if (any(!cc)){#
  # if ( !(full.data$patientName[!cc] %in% 289525) ) stop("Something is off about data")#
  stop("Something is off about data")#
}#
#
#### using ABC/2 From Site#
cc <- complete.cases(full.data[, vars])#
#### TAKE OUT WHEN UPDATED#
#
full.data[!cc, c("patientName", vars)]#
#
full.data <- full.data[cc, ]#
FD1 <- full.data#
### say 0 if want probs by group#
fup <- 180#
outvar <- paste("Bad_Outcome_Day_", fup, sep="")#
### Uncomment for Good outcome, comment for bad outcome#
#outvar <- gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)#
full.data[ gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)] <- full.data[, outvar] == 0#
full.data$Y <- as.numeric(full.data[, outvar] == 1)#
#full.data[, paste("Good_Outcome_Day_", fup, sep="")] <-#
# full.data[, outvar] <- NULL#
# , "Ictus_to_Proc", "Hemisphere", "Under_15cc", "African_American"#
runvars <- c("Age_Cat", "GCS_Cat", "Haematoma_volume", "Group_Assigned",  "ICH_Location", "Side_of_haematoma")#
runvars <- runvars[ !runvars %in% rvname ]#
#
# else {#
# runvars <- runvars[ !runvars %in% rvname ]#
# }#
lrvar <- length(runvars)#
#
var <- vname#
mod.type <- ""#
#mod.type <- "Adj_"#
#
adder <- "Unadjusted "#
if (mod.type == "Adj_") adder <- "Adjusted "#
# all.table2 <- all.table <- c("Study or subcategory", "Surgical", "Medical", "N", "Odds Ratio (95% CI)", "Odds Ratio (95% CI)", "OR", "Lower", "Upper")#
# all.table3 <- c("Study or subcategory", "Surgical", "Medical", "N", "Risk Difference (95% CI)", "Risk Difference (95% CI)", "RD", "Lower", "Upper")#
#
all.table2 <- all.table <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "OR (95% CI)", "OR (95% CI)", "OR", "Lower", "Upper"), nrow=1)#
all.table3 <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "RD (95% CI)", "RD (95% CI)", "RD", "Lower", "Upper"), nrow=1)#
# data <- data[complete.cases(data[, c("Y", var, runvars)]),]#
#
ivar <- 1#
#
for (ivar in 1:lrvar){#
  rvar <- runvars[ivar]#
  varname <- gsub(rvar, pattern="_Cat.*", replacement="")#
  varname <- gsub(varname, pattern="_", replacement = " ")#
  all.table <- rbind(all.table, c(varname, rep(NA, ncol(all.table)-1 ) ))#
  all.table2 <- rbind(all.table2, c(varname, rep(NA, ncol(all.table2)-1 )))#
  all.table3 <- rbind(all.table3, c(varname, rep(NA, ncol(all.table3) -1)))#
  data <- full.data		#
  if (is.factor(data[, var])) {#
    ylevs <- levels(data[,var])#
  } else ylevs <- c(0, 1)		#
  data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
  vars <- c("Age", "ICH_Pre_Rand_10", "Treatment", "Enrollment_GCS_Add", "Y")#
  if (mod.type != "Adj_") vars <- c("Treatment", "Y")#
  cc <- complete.cases(data[, c(vars, rvar)])#
  data <- data[cc,]#
  levs <- levels(data[, rvar])#
  all.MH <- matrix(NA, nrow=length(levs), ncol=4)#
  print(levs)#
  ilev <- 1#
  for (ilev in 1:length(levs)){#
    inlev <- data[, rvar] == levs[ilev]#
    dat <- data[inlev,]#
    tab <- table(dat$Group_Assigned, dat$Y)#
    print(tab)#
    ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
    nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
    ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
    pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
    all.MH[ilev, 1] <- ntrt#
    all.MH[ilev, 2] <- nctrl#
    all.MH[ilev, 3] <- ptrt#
    all.MH[ilev, 4] <- pctrl#
    dat$Treatment <- dat$T0#
    mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
    smod <- summary(mod)$coeff#
    if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
    print(smod)#
    ci <- smod["Treatment", ,drop = FALSE]#
    est <- exp(ci[, "Estimate"])#
    ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
    dat$Treatment <- 1#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p1hat <- predict(mod, newdat=dat, type="response")#
    dat$Treatment <- 0#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p0hat <- predict(mod, newdat=dat, type="response")#
    Ai <- dat$T0#
    Yi <- dat$Y#
    unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    if (ptrt == 0 | pctrl == 0 | ntrt == ptrt | nctrl == pctrl){#
    	cc <- 0.5    	 #
		  x <- tab#
		  x <- x + cc#
  	    SELOGOR = sqrt(1 /( x[1,1] + cc) + 1 / (x[1,2] + cc) + #
    	                        1 / (x[2,1] +cc) + 1 / (x[2,2] +cc))#
		  OR <- x[2,2]*x[1,1]/(x[1,2]* x[2,1])#
		  log.OR <- log(OR)#
		  ## they were n good / N, so need the table#
		CI <- log.OR + c(-1, 1) * qnorm(0.975) * SELOGOR#
      unadj$OR <- OR#
      OR.CI <- exp(CI)#
      unadj$OR.CI <- OR.CI#
      unadj$SE <- SELOGOR#
		  #stop("IT")#
    }#
    unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    dig <- 2#
    all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
    all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
    all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
  }#
}#
#
rvar <- "Surgery Time"#
all.table <- rbind(all.table, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table)-1 ) ))#
all.table2 <- rbind(all.table2, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table2)-1 )))#
all.table3 <- rbind(all.table3, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table3) -1)))#
#
rvar <- "Ictus_to_Proc1"#
#
data <- full.data		#
if (is.factor(data[, var])) {#
  ylevs <- levels(data[,var])#
} else ylevs <- c(0, 1)		#
data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
#
cc <- complete.cases(full.data[, c("Y", vars, rvar)])#
data <- data[cc,]#
levs <- levels(data[, rvar])#
all.MH <- matrix(NA, nrow=length(levs)-1, ncol=4)#
print(levs)#
ilev <- 2#
#
for (ilev in 2:3){#
  inlev <- data[, rvar] %in% c("Medical", levs[ilev])#
  dat <- data[inlev,]#
  tab <- table(dat$Group_Assigned, dat$Y)#
  print(tab)#
  ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
  nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
  ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
  pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
  all.MH[ilev-1, 1] <- ntrt#
  all.MH[ilev-1, 2] <- nctrl#
  all.MH[ilev-1, 3] <- ptrt#
  all.MH[ilev-1, 4] <- pctrl#
  dat$Treatment <- dat$T0#
  mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
  smod <- summary(mod)$coeff#
  if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
  print(smod)#
  ci <- smod["Treatment", ,drop = FALSE]#
  est <- exp(ci[, "Estimate"])#
  ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
  dat$Treatment <- 1#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p1hat <- predict(mod, newdat=dat, type="response")#
  dat$Treatment <- 0#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p0hat <- predict(mod, newdat=dat, type="response")#
  Ai <- dat$T0#
  Yi <- dat$Y#
  unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  if (ptrt == 0 | pctrl == 0){#
    unadj$OR <- NA#
    unadj$OR.CI <- c(NA, NA)#
  }#
  unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  dig <- 2#
  all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
  all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
  all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
}#
all.table <- cbind(all.table, c("OR_Check", rep("", nrow(all.table)-1))) #
col <- ncol(all.table)#
cols <- all.table[1,] %in% c("Surgical", "Medical")#
#
for (irow in 2:nrow(all.table)){#
  x <- all.table[irow, cols]#
  if (is.na(x[1]) & is.na(x[2])) next#
  x <- as.numeric(unlist(strsplit(x, split="/")))#
  ## they were n good / N, so need the table#
  x <- c(x[1], x[2]-x[1], x[3], x[4] - x[3])#
  tab <- matrix(as.numeric(x), ncol=2, byrow=TRUE)#
  if (any(tab == 0)) tab <- tab + 0.5#
  ## they're in reversed order#
  all.table[irow, col] <- tab[2,2]*tab[1,1]/(tab[1,2]* tab[2,1])#
}#
xtab <- all.table#
xtab <- xtab[2:nrow(xtab), ]#
colnames(xtab) <- all.table[1,]#
xtab <- as.data.frame(xtab, stringsAsFactors=FALSE)#
xtab$OR_Check <- as.numeric(xtab$OR_Check)#
xtab$OR <- as.numeric(xtab$OR)#
keep_MIS <- which(all.table[, 1] == "Surgery Time")#
tab2 <- all.table[1:(keep_MIS-1), ]#
colnames(tab2) <- c("Category", "Surgical", "Medical", "N", "MISTIE_OR.95.CI", "Drop", "MISTIE_OR", "Lower", "Upper", "OR_Check")#
tab2 <- data.frame(tab2, stringsAsFactors=FALSE)#
tab2$Drop <- NULL#
tryout <- merge(stich_data, tab2, by="Category", sort=FALSE)#
#
tryout$STICH_N <- tryout$N_C + tryout$N_E#
tryout$n_C <- tryout$N_C <-tryout$N_E <-tryout$n_E <-NULL#
tryout$OR_Check <- NULL#
#
# cis <- sapply(strsplit(tryout$OR.95..CI, split=" "), function(x) ifelse(length(x) > 0, x[2], NA))#
# cis <- gsub(cis, pattern="(", replacement = "", fixed=TRUE)#
# cis <- gsub(cis, pattern=")", replacement = "", fixed=TRUE)#
# cis <- gsub(cis, pattern="–", replacement = "-", fixed=TRUE)#
# cis <- strsplit(cis, split="-")#
# cis <- lapply(cis, as.numeric)#
# cis <- do.call("rbind", cis)#
# tryout$STICH_Lower <- cis[,1]#
# tryout$STICH_Upper <- cis[,2]#
# tryout$STICH_Lower[1] <- "Lower"#
# tryout$STICH_Upper[1] <- "Upper"
head(tryout)
stich_data
tryout <- merge(stich_data, tab2, by="Category", sort=FALSE)
tryout
tryout <- merge(stich_data, tab2, by="Category", sort=FALSE, all=TRUE)#
#
tryout$STICH_N <- tryout$N_C + tryout$N_E
tryout$N_E
tryout$N_C
tryout$STICH_N <- as.numeric(tryout$N_C) + as.numeric(tryout$N_E)#
tryout$n_C <- tryout$N_C <-tryout$N_E <-tryout$n_E <-NULL#
tryout$OR_Check <- NULL
tryout
tryout$Conservative[1] <- "Conservative" #
tryout$Early[1] <- "Early" #
#Initial conservative treatment n/N#
tryout$OR.95..CI[1] <- "OR 95% CI"#
tryout$Category[1] <- "Subgroups"
head(tryout)
tryout$OR[1] <- "OR"
head(tryout)
tryout$STICH_N[1] <- "N"
head(tryout)
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
#
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
# levs <- c("< 1 Day","2 Day", "> 2 Days")#
# full.data$Time_To_Procedure <- NA#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure <= 1] <- levs[1]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 1 & full.data$Ictus_to_Op_Procedure <= 2] <- levs[2]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 2] <- levs[3]#
# full.data$Time_To_Procedure <- factor(full.data$Time_To_Procedure, levels= levs)#
# #
# ll <- c("Other", "African American")#
# full.data$African_American <- ll[as.numeric(full.data$Ethnicity == "African American not Hispanic") + 1]#
# full.data$African_American[full.data$Ethnicity == "Other or unknown"] <- NA#
# full.data$African_American <- factor(full.data$African_American, levels=ll)#
# full.data$Lob <- as.character(full.data$Lobar_BG_vs)#
# full.data$Lob[full.data$Lob == "Not Lobar"] <- "Deep"#
# full.data$Lob <- factor(full.data$Lob, levels= c("Lobar", "Deep"))#
# full.data$Lobar_BG_vs <- full.data$Lob#
#
full.data$ICH_Location <- full.data$Lobar_BG_vs#
#
xxfull.data <- full.data#
#Pct_Pre_10#
vname <- "Group_Assigned"#
#
full.data <-  xxfull.data#
# vname <- "Group_Assigned"#
ssub <- ""#
rvname <- vname#
vsub <- "Surgery"#
#
vars <- c("Age", "ICH_Pre_Rand_10", vname, "Enrollment_GCS_Add")#
cc <- complete.cases(full.data[, vars])#
if (any(!cc)){#
  # if ( !(full.data$patientName[!cc] %in% 289525) ) stop("Something is off about data")#
  stop("Something is off about data")#
}#
#
#### using ABC/2 From Site#
cc <- complete.cases(full.data[, vars])#
#### TAKE OUT WHEN UPDATED#
#
full.data[!cc, c("patientName", vars)]#
#
full.data <- full.data[cc, ]#
FD1 <- full.data#
### say 0 if want probs by group#
fup <- 180#
outvar <- paste("Bad_Outcome_Day_", fup, sep="")#
### Uncomment for Good outcome, comment for bad outcome#
#outvar <- gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)#
full.data[ gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)] <- full.data[, outvar] == 0#
full.data$Y <- as.numeric(full.data[, outvar] == 1)#
#full.data[, paste("Good_Outcome_Day_", fup, sep="")] <-#
# full.data[, outvar] <- NULL#
# , "Ictus_to_Proc", "Hemisphere", "Under_15cc", "African_American"#
runvars <- c("Age_Cat", "GCS_Cat", "Haematoma_volume", "Group_Assigned",  "ICH_Location", "Side_of_haematoma")#
runvars <- runvars[ !runvars %in% rvname ]#
#
# else {#
# runvars <- runvars[ !runvars %in% rvname ]#
# }#
lrvar <- length(runvars)#
#
var <- vname#
mod.type <- ""#
#mod.type <- "Adj_"#
#
adder <- "Unadjusted "#
if (mod.type == "Adj_") adder <- "Adjusted "#
# all.table2 <- all.table <- c("Study or subcategory", "Surgical", "Medical", "N", "Odds Ratio (95% CI)", "Odds Ratio (95% CI)", "OR", "Lower", "Upper")#
# all.table3 <- c("Study or subcategory", "Surgical", "Medical", "N", "Risk Difference (95% CI)", "Risk Difference (95% CI)", "RD", "Lower", "Upper")#
#
all.table2 <- all.table <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "OR (95% CI)", "OR (95% CI)", "OR", "Lower", "Upper"), nrow=1)#
all.table3 <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "RD (95% CI)", "RD (95% CI)", "RD", "Lower", "Upper"), nrow=1)#
# data <- data[complete.cases(data[, c("Y", var, runvars)]),]#
#
ivar <- 1#
#
for (ivar in 1:lrvar){#
  rvar <- runvars[ivar]#
  varname <- gsub(rvar, pattern="_Cat.*", replacement="")#
  varname <- gsub(varname, pattern="_", replacement = " ")#
  all.table <- rbind(all.table, c(varname, rep(NA, ncol(all.table)-1 ) ))#
  all.table2 <- rbind(all.table2, c(varname, rep(NA, ncol(all.table2)-1 )))#
  all.table3 <- rbind(all.table3, c(varname, rep(NA, ncol(all.table3) -1)))#
  data <- full.data		#
  if (is.factor(data[, var])) {#
    ylevs <- levels(data[,var])#
  } else ylevs <- c(0, 1)		#
  data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
  vars <- c("Age", "ICH_Pre_Rand_10", "Treatment", "Enrollment_GCS_Add", "Y")#
  if (mod.type != "Adj_") vars <- c("Treatment", "Y")#
  cc <- complete.cases(data[, c(vars, rvar)])#
  data <- data[cc,]#
  levs <- levels(data[, rvar])#
  all.MH <- matrix(NA, nrow=length(levs), ncol=4)#
  print(levs)#
  ilev <- 1#
  for (ilev in 1:length(levs)){#
    inlev <- data[, rvar] == levs[ilev]#
    dat <- data[inlev,]#
    tab <- table(dat$Group_Assigned, dat$Y)#
    print(tab)#
    ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
    nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
    ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
    pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
    all.MH[ilev, 1] <- ntrt#
    all.MH[ilev, 2] <- nctrl#
    all.MH[ilev, 3] <- ptrt#
    all.MH[ilev, 4] <- pctrl#
    dat$Treatment <- dat$T0#
    mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
    smod <- summary(mod)$coeff#
    if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
    print(smod)#
    ci <- smod["Treatment", ,drop = FALSE]#
    est <- exp(ci[, "Estimate"])#
    ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
    dat$Treatment <- 1#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p1hat <- predict(mod, newdat=dat, type="response")#
    dat$Treatment <- 0#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p0hat <- predict(mod, newdat=dat, type="response")#
    Ai <- dat$T0#
    Yi <- dat$Y#
    unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    if (ptrt == 0 | pctrl == 0 | ntrt == ptrt | nctrl == pctrl){#
    	cc <- 0.5    	 #
		  x <- tab#
		  x <- x + cc#
  	    SELOGOR = sqrt(1 /( x[1,1] + cc) + 1 / (x[1,2] + cc) + #
    	                        1 / (x[2,1] +cc) + 1 / (x[2,2] +cc))#
		  OR <- x[2,2]*x[1,1]/(x[1,2]* x[2,1])#
		  log.OR <- log(OR)#
		  ## they were n good / N, so need the table#
		CI <- log.OR + c(-1, 1) * qnorm(0.975) * SELOGOR#
      unadj$OR <- OR#
      OR.CI <- exp(CI)#
      unadj$OR.CI <- OR.CI#
      unadj$SE <- SELOGOR#
		  #stop("IT")#
    }#
    unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    dig <- 2#
    all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
    all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
    all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
  }#
}#
#
rvar <- "Surgery Time"#
all.table <- rbind(all.table, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table)-1 ) ))#
all.table2 <- rbind(all.table2, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table2)-1 )))#
all.table3 <- rbind(all.table3, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table3) -1)))#
#
rvar <- "Ictus_to_Proc1"#
#
data <- full.data		#
if (is.factor(data[, var])) {#
  ylevs <- levels(data[,var])#
} else ylevs <- c(0, 1)		#
data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
#
cc <- complete.cases(full.data[, c("Y", vars, rvar)])#
data <- data[cc,]#
levs <- levels(data[, rvar])#
all.MH <- matrix(NA, nrow=length(levs)-1, ncol=4)#
print(levs)#
ilev <- 2#
#
for (ilev in 2:3){#
  inlev <- data[, rvar] %in% c("Medical", levs[ilev])#
  dat <- data[inlev,]#
  tab <- table(dat$Group_Assigned, dat$Y)#
  print(tab)#
  ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
  nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
  ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
  pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
  all.MH[ilev-1, 1] <- ntrt#
  all.MH[ilev-1, 2] <- nctrl#
  all.MH[ilev-1, 3] <- ptrt#
  all.MH[ilev-1, 4] <- pctrl#
  dat$Treatment <- dat$T0#
  mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
  smod <- summary(mod)$coeff#
  if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
  print(smod)#
  ci <- smod["Treatment", ,drop = FALSE]#
  est <- exp(ci[, "Estimate"])#
  ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
  dat$Treatment <- 1#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p1hat <- predict(mod, newdat=dat, type="response")#
  dat$Treatment <- 0#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p0hat <- predict(mod, newdat=dat, type="response")#
  Ai <- dat$T0#
  Yi <- dat$Y#
  unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  if (ptrt == 0 | pctrl == 0){#
    unadj$OR <- NA#
    unadj$OR.CI <- c(NA, NA)#
  }#
  unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  dig <- 2#
  all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
  all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
  all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
}#
all.table <- cbind(all.table, c("OR_Check", rep("", nrow(all.table)-1))) #
col <- ncol(all.table)#
cols <- all.table[1,] %in% c("Surgical", "Medical")#
#
for (irow in 2:nrow(all.table)){#
  x <- all.table[irow, cols]#
  if (is.na(x[1]) & is.na(x[2])) next#
  x <- as.numeric(unlist(strsplit(x, split="/")))#
  ## they were n good / N, so need the table#
  x <- c(x[1], x[2]-x[1], x[3], x[4] - x[3])#
  tab <- matrix(as.numeric(x), ncol=2, byrow=TRUE)#
  if (any(tab == 0)) tab <- tab + 0.5#
  ## they're in reversed order#
  all.table[irow, col] <- tab[2,2]*tab[1,1]/(tab[1,2]* tab[2,1])#
}#
xtab <- all.table#
xtab <- xtab[2:nrow(xtab), ]#
colnames(xtab) <- all.table[1,]#
xtab <- as.data.frame(xtab, stringsAsFactors=FALSE)#
xtab$OR_Check <- as.numeric(xtab$OR_Check)#
xtab$OR <- as.numeric(xtab$OR)#
keep_MIS <- which(all.table[, 1] == "Surgery Time")#
tab2 <- all.table[1:(keep_MIS-1), ]#
colnames(tab2) <- c("Category", "Surgical", "Medical", "N", "MISTIE_OR.95.CI", "Drop", "MISTIE_OR", "Lower", "Upper", "OR_Check")#
tab2 <- data.frame(tab2, stringsAsFactors=FALSE)#
tab2$Drop <- NULL#
tryout <- merge(stich_data, tab2, by="Category", sort=FALSE, all=TRUE)#
tryout$STICH_N <- as.numeric(tryout$N_C) + as.numeric(tryout$N_E)#
tryout$n_C <- tryout$N_C <-tryout$N_E <-tryout$n_E <-NULL#
tryout$OR_Check <- NULL#
#
# cis <- sapply(strsplit(tryout$OR.95..CI, split=" "), function(x) ifelse(length(x) > 0, x[2], NA))#
# cis <- gsub(cis, pattern="(", replacement = "", fixed=TRUE)#
# cis <- gsub(cis, pattern=")", replacement = "", fixed=TRUE)#
# cis <- gsub(cis, pattern="–", replacement = "-", fixed=TRUE)#
# cis <- strsplit(cis, split="-")#
# cis <- lapply(cis, as.numeric)#
# cis <- do.call("rbind", cis)#
# tryout$STICH_Lower <- cis[,1]#
# tryout$STICH_Upper <- cis[,2]#
# tryout$STICH_Lower[1] <- "Lower"#
# tryout$STICH_Upper[1] <- "Upper"#
#
tryout$Conservative[1] <- "Conservative" #
tryout$Early[1] <- "Early" #
#Initial conservative treatment n/N#
tryout$OR.95..CI[1] <- "OR 95% CI"#
tryout$Category[1] <- "Subgroups"#
tryout$OR[1] <- "OR"#
tryout$STICH_N[1] <- "N"
head(full.data)
colnames(full.data)
sort(colnames(full.data))
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)
sort(names(full.data))()
sort(names(full.data))
stich_data
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
#
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
#
{#
#
	levs <- c("< 8 hrs", "8-24 hrs", "24-72 hrs", "> 72 hrs")#
	full.data$Time_to_Randomization <- NA#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 <= 8] <- levs[1]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 8 & full.data$Ictus_to_Enrolled * 24 <= 24] <- levs[2]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 24 & full.data$Ictus_to_Enrolled * 24 <= 72] <- levs[3]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 72] <- levs[3]#
}#
# levs <- c("< 1 Day","2 Day", "> 2 Days")#
# full.data$Time_To_Procedure <- NA#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure <= 1] <- levs[1]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 1 & full.data$Ictus_to_Op_Procedure <= 2] <- levs[2]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 2] <- levs[3]#
# full.data$Time_To_Procedure <- factor(full.data$Time_To_Procedure, levels= levs)#
# #
# ll <- c("Other", "African American")#
# full.data$African_American <- ll[as.numeric(full.data$Ethnicity == "African American not Hispanic") + 1]#
# full.data$African_American[full.data$Ethnicity == "Other or unknown"] <- NA#
# full.data$African_American <- factor(full.data$African_American, levels=ll)#
# full.data$Lob <- as.character(full.data$Lobar_BG_vs)#
# full.data$Lob[full.data$Lob == "Not Lobar"] <- "Deep"#
# full.data$Lob <- factor(full.data$Lob, levels= c("Lobar", "Deep"))#
# full.data$Lobar_BG_vs <- full.data$Lob#
#
full.data$ICH_Location <- full.data$Lobar_BG_vs#
#
xxfull.data <- full.data#
#Pct_Pre_10#
vname <- "Group_Assigned"#
#
full.data <-  xxfull.data#
# vname <- "Group_Assigned"#
ssub <- ""#
rvname <- vname#
vsub <- "Surgery"#
#
vars <- c("Age", "ICH_Pre_Rand_10", vname, "Enrollment_GCS_Add")#
cc <- complete.cases(full.data[, vars])#
if (any(!cc)){#
  # if ( !(full.data$patientName[!cc] %in% 289525) ) stop("Something is off about data")#
  stop("Something is off about data")#
}#
#
#### using ABC/2 From Site#
cc <- complete.cases(full.data[, vars])#
#### TAKE OUT WHEN UPDATED#
#
full.data[!cc, c("patientName", vars)]#
#
full.data <- full.data[cc, ]#
FD1 <- full.data#
### say 0 if want probs by group#
fup <- 180#
outvar <- paste("Bad_Outcome_Day_", fup, sep="")#
### Uncomment for Good outcome, comment for bad outcome#
#outvar <- gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)#
full.data[ gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)] <- full.data[, outvar] == 0#
full.data$Y <- as.numeric(full.data[, outvar] == 1)#
#full.data[, paste("Good_Outcome_Day_", fup, sep="")] <-#
# full.data[, outvar] <- NULL#
# , "Ictus_to_Proc", "Hemisphere", "Under_15cc", "African_American"#
runvars <- c("Age_Cat", "GCS_Cat", "Haematoma_volume", "Group_Assigned",  "ICH_Location", "Side_of_haematoma", "Time_to_Randomization")#
runvars <- runvars[ !runvars %in% rvname ]#
#
# else {#
# runvars <- runvars[ !runvars %in% rvname ]#
# }#
lrvar <- length(runvars)#
#
var <- vname#
mod.type <- ""#
#mod.type <- "Adj_"#
#
adder <- "Unadjusted "#
if (mod.type == "Adj_") adder <- "Adjusted "#
# all.table2 <- all.table <- c("Study or subcategory", "Surgical", "Medical", "N", "Odds Ratio (95% CI)", "Odds Ratio (95% CI)", "OR", "Lower", "Upper")#
# all.table3 <- c("Study or subcategory", "Surgical", "Medical", "N", "Risk Difference (95% CI)", "Risk Difference (95% CI)", "RD", "Lower", "Upper")#
#
all.table2 <- all.table <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "OR (95% CI)", "OR (95% CI)", "OR", "Lower", "Upper"), nrow=1)#
all.table3 <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "RD (95% CI)", "RD (95% CI)", "RD", "Lower", "Upper"), nrow=1)#
# data <- data[complete.cases(data[, c("Y", var, runvars)]),]#
#
ivar <- 1#
#
for (ivar in 1:lrvar){#
  rvar <- runvars[ivar]#
  varname <- gsub(rvar, pattern="_Cat.*", replacement="")#
  varname <- gsub(varname, pattern="_", replacement = " ")#
  all.table <- rbind(all.table, c(varname, rep(NA, ncol(all.table)-1 ) ))#
  all.table2 <- rbind(all.table2, c(varname, rep(NA, ncol(all.table2)-1 )))#
  all.table3 <- rbind(all.table3, c(varname, rep(NA, ncol(all.table3) -1)))#
  data <- full.data		#
  if (is.factor(data[, var])) {#
    ylevs <- levels(data[,var])#
  } else ylevs <- c(0, 1)		#
  data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
  vars <- c("Age", "ICH_Pre_Rand_10", "Treatment", "Enrollment_GCS_Add", "Y")#
  if (mod.type != "Adj_") vars <- c("Treatment", "Y")#
  cc <- complete.cases(data[, c(vars, rvar)])#
  data <- data[cc,]#
  levs <- levels(data[, rvar])#
  all.MH <- matrix(NA, nrow=length(levs), ncol=4)#
  print(levs)#
  ilev <- 1#
  for (ilev in 1:length(levs)){#
    inlev <- data[, rvar] == levs[ilev]#
    dat <- data[inlev,]#
    tab <- table(dat$Group_Assigned, dat$Y)#
    print(tab)#
    ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
    nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
    ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
    pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
    all.MH[ilev, 1] <- ntrt#
    all.MH[ilev, 2] <- nctrl#
    all.MH[ilev, 3] <- ptrt#
    all.MH[ilev, 4] <- pctrl#
    dat$Treatment <- dat$T0#
    mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
    smod <- summary(mod)$coeff#
    if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
    print(smod)#
    ci <- smod["Treatment", ,drop = FALSE]#
    est <- exp(ci[, "Estimate"])#
    ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
    dat$Treatment <- 1#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p1hat <- predict(mod, newdat=dat, type="response")#
    dat$Treatment <- 0#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p0hat <- predict(mod, newdat=dat, type="response")#
    Ai <- dat$T0#
    Yi <- dat$Y#
    unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    if (ptrt == 0 | pctrl == 0 | ntrt == ptrt | nctrl == pctrl){#
    	cc <- 0.5    	 #
		  x <- tab#
		  x <- x + cc#
  	    SELOGOR = sqrt(1 /( x[1,1] + cc) + 1 / (x[1,2] + cc) + #
    	                        1 / (x[2,1] +cc) + 1 / (x[2,2] +cc))#
		  OR <- x[2,2]*x[1,1]/(x[1,2]* x[2,1])#
		  log.OR <- log(OR)#
		  ## they were n good / N, so need the table#
		CI <- log.OR + c(-1, 1) * qnorm(0.975) * SELOGOR#
      unadj$OR <- OR#
      OR.CI <- exp(CI)#
      unadj$OR.CI <- OR.CI#
      unadj$SE <- SELOGOR#
		  #stop("IT")#
    }#
    unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    dig <- 2#
    all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
    all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
    all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
  }#
}#
#
rvar <- "Surgery Time"#
all.table <- rbind(all.table, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table)-1 ) ))#
all.table2 <- rbind(all.table2, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table2)-1 )))#
all.table3 <- rbind(all.table3, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table3) -1)))#
#
rvar <- "Ictus_to_Proc1"#
#
data <- full.data		#
if (is.factor(data[, var])) {#
  ylevs <- levels(data[,var])#
} else ylevs <- c(0, 1)		#
data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
#
cc <- complete.cases(full.data[, c("Y", vars, rvar)])#
data <- data[cc,]#
levs <- levels(data[, rvar])#
all.MH <- matrix(NA, nrow=length(levs)-1, ncol=4)#
print(levs)#
ilev <- 2#
#
for (ilev in 2:3){#
  inlev <- data[, rvar] %in% c("Medical", levs[ilev])#
  dat <- data[inlev,]#
  tab <- table(dat$Group_Assigned, dat$Y)#
  print(tab)#
  ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
  nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
  ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
  pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
  all.MH[ilev-1, 1] <- ntrt#
  all.MH[ilev-1, 2] <- nctrl#
  all.MH[ilev-1, 3] <- ptrt#
  all.MH[ilev-1, 4] <- pctrl#
  dat$Treatment <- dat$T0#
  mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
  smod <- summary(mod)$coeff#
  if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
  print(smod)#
  ci <- smod["Treatment", ,drop = FALSE]#
  est <- exp(ci[, "Estimate"])#
  ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
  dat$Treatment <- 1#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p1hat <- predict(mod, newdat=dat, type="response")#
  dat$Treatment <- 0#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p0hat <- predict(mod, newdat=dat, type="response")#
  Ai <- dat$T0#
  Yi <- dat$Y#
  unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  if (ptrt == 0 | pctrl == 0){#
    unadj$OR <- NA#
    unadj$OR.CI <- c(NA, NA)#
  }#
  unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  dig <- 2#
  all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
  all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
  all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
}#
all.table <- cbind(all.table, c("OR_Check", rep("", nrow(all.table)-1))) #
col <- ncol(all.table)#
cols <- all.table[1,] %in% c("Surgical", "Medical")#
#
for (irow in 2:nrow(all.table)){#
  x <- all.table[irow, cols]#
  if (is.na(x[1]) & is.na(x[2])) next#
  x <- as.numeric(unlist(strsplit(x, split="/")))#
  ## they were n good / N, so need the table#
  x <- c(x[1], x[2]-x[1], x[3], x[4] - x[3])#
  tab <- matrix(as.numeric(x), ncol=2, byrow=TRUE)#
  if (any(tab == 0)) tab <- tab + 0.5#
  ## they're in reversed order#
  all.table[irow, col] <- tab[2,2]*tab[1,1]/(tab[1,2]* tab[2,1])#
}#
xtab <- all.table#
xtab <- xtab[2:nrow(xtab), ]#
colnames(xtab) <- all.table[1,]#
xtab <- as.data.frame(xtab, stringsAsFactors=FALSE)#
xtab$OR_Check <- as.numeric(xtab$OR_Check)#
xtab$OR <- as.numeric(xtab$OR)#
keep_MIS <- which(all.table[, 1] == "Surgery Time")#
tab2 <- all.table[1:(keep_MIS-1), ]#
colnames(tab2) <- c("Category", "Surgical", "Medical", "N", "MISTIE_OR.95.CI", "Drop", "MISTIE_OR", "Lower", "Upper", "OR_Check")#
tab2 <- data.frame(tab2, stringsAsFactors=FALSE)#
tab2$Drop <- NULL#
tryout <- merge(stich_data, tab2, by="Category", sort=FALSE, all=TRUE)#
tryout$STICH_N <- as.numeric(tryout$N_C) + as.numeric(tryout$N_E)#
tryout$n_C <- tryout$N_C <-tryout$N_E <-tryout$n_E <-NULL#
tryout$OR_Check <- NULL
tryout
tab2
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
#
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
#
{#
#
	levs <- c("< 8 hrs", "8-24 hrs", "24-72 hrs", "> 72 hrs")#
	full.data$Time_to_Randomization <- NA#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 <= 8] <- levs[1]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 8 & full.data$Ictus_to_Enrolled * 24 <= 24] <- levs[2]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 24 & full.data$Ictus_to_Enrolled * 24 <= 72] <- levs[3]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 72] <- levs[3]#
}
full.data$Time_to_Randomization
full.data$Ictus_to_Enrolled
full.data$Date_Time_Enrolled
full.data$Date_Time_Symptom_Onset
full.data$Date_Time_Symptom_Onset - full.data$Date_Time_Enrolled
(full.data$Date_Time_Symptom_Onset - full.data$Date_Time_Enrolled)
-(full.data$Date_Time_Symptom_Onset - full.data$Date_Time_Enrolled)
hist(-(full.data$Date_Time_Symptom_Onset - full.data$Date_Time_Enrolled)_
hist(-(full.data$Date_Time_Symptom_Onset - full.data$Date_Time_Enrolled))
dev.off()
hist(-(full.data$Date_Time_Symptom_Onset - full.data$Date_Time_Enrolled)_
hist(-(full.data$Date_Time_Symptom_Onset - full.data$Date_Time_Enrolled))
hist(-(full.data$Date_Time_Symptom_Onset - full.data$Date_Time_Enrolled)*24)
hist(-(full.data$Date_Time_Symptom_Onset - full.data$Date_Time_Enrolled)*24, width=10)
hist(-(full.data$Date_Time_Symptom_Onset - full.data$Date_Time_Enrolled)*24, breaks=c(0, 8, 16, 24, 48, 72, 80))
hist(-(full.data$Date_Time_Symptom_Onset - full.data$Date_Time_Enrolled)*24, breaks=c(0, 8, 16, 24, 48, 72, 90))
?plot
?axis
hist(-(full.data$Date_Time_Symptom_Onset - full.data$Date_Time_Enrolled)*24, breaks=c(0, 8, 16, 24, 48, 72, 90), at=c(0, 8, 16, 24, 48, 72, 90))
tab(full.data$Time_to_Randomization)
table(full.data$Time_to_Randomization)
hist(-(full.data$Date_Time_Symptom_Onset - full.data$Date_Time_Enrolled)*24, breaks=c(0, 8, 16, 24, 48, 72, 90), at=c(0, 8, 16, 24, 48, 72, 90))
hist(full.data$Ictus_to_Enrolled*24, breaks=c(0, 8, 16, 24, 48, 72, 90), at=c(0, 8, 16, 24, 48, 72, 90))
hist(-(full.data$Date_Time_Symptom_Onset - full.data$Date_Time_Enrolled)*24, breaks=c(0, 8, 16, 24, 48, 72, 90), at=c(0, 8, 16, 24, 48, 72, 90))
hist(full.data$Ictus_to_Enrolled*24, breaks=c(0, 8, 16, 24, 48, 72, 90), at=c(0, 8, 16, 24, 48, 72, 90))
hist(full.data$Ictus_to_Enrolled*24, breaks=c(0, 8, 16, 24, 48, 72, 90))
hist(full.data$Ictus_to_Enrolled*24, breaks=c(0, 8, 16, 24, 48, 72, 90), at=c(0, 8, 16, 24, 48, 72, 90))
hist(full.data$Ictus_to_Enrolled*24, breaks=c(0, 8, 16, 24, 48, 72, 90), xat=c(0, 8, 16, 24, 48, 72, 90))
?axis
hist(full.data$Ictus_to_Enrolled*24, breaks=c(0, 8, 16, 24, 48, 72, 90), xaxt='n')
axis(1, at=c(0, 8, 16, 24, 48, 72, 90))
hist(full.data$Ictus_to_Enrolled*24, breaks=c(0, 8, 16, 24, 48, 72, 90), xaxt='n', main="Distribution of Time from Ictus to Randomization", freq=TRUE)#
	axis(1, at=c(0, 8, 16, 24, 48, 72, 90))
at <- c(0, 8, 16, 24, 48, 72, 96)#
	hist(full.data$Ictus_to_Enrolled*24, breaks=at, xaxt='n', main="Distribution of Time from Ictus to Randomization", freq=TRUE)#
	axis(1, at=at)
at <- c(0, 8, 16, 24, 48, 72, 96)#
	hist(full.data$Ictus_to_Enrolled*24, breaks=at, xaxt='n', main="Distribution of Time from Ictus to Randomization", freq=TRUE, xlab='Hours from Onset')#
	axis(1, at=at)
at <- c(0, 8, 16, 24, 48, 72, 96)#
	hist(full.data$Ictus_to_Enrolled*24, breaks=at, xaxt='n', main="MISTIE Distribution of Time from Ictus to Randomization", freq=TRUE, xlab='Hours from Onset')#
	axis(1, at=at)
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
pdf(file=file.path(resdir, "Time_To_Randomization.pdf"))#
	at <- c(0, 8, 16, 24, 48, 72, 96)#
	hist(full.data$Ictus_to_Enrolled*24, breaks=at, xaxt='n', main="MISTIE Distribution of Time from Ictus to Randomization", freq=TRUE, xlab='Hours from Onset')#
	axis(1, at=at)#
dev.off()#
#
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
#
{#
#
	levs <- c("< 8 hrs", "8-24 hrs", "24-72 hrs", "> 72 hrs")#
	full.data$Time_to_Randomization <- NA#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 <= 8] <- levs[1]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 8 & full.data$Ictus_to_Enrolled * 24 <= 24] <- levs[2]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 24 & full.data$Ictus_to_Enrolled * 24 <= 72] <- levs[3]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 72] <- levs[3]#
}#
# levs <- c("< 1 Day","2 Day", "> 2 Days")#
# full.data$Time_To_Procedure <- NA#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure <= 1] <- levs[1]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 1 & full.data$Ictus_to_Op_Procedure <= 2] <- levs[2]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 2] <- levs[3]#
# full.data$Time_To_Procedure <- factor(full.data$Time_To_Procedure, levels= levs)#
# #
# ll <- c("Other", "African American")#
# full.data$African_American <- ll[as.numeric(full.data$Ethnicity == "African American not Hispanic") + 1]#
# full.data$African_American[full.data$Ethnicity == "Other or unknown"] <- NA#
# full.data$African_American <- factor(full.data$African_American, levels=ll)#
# full.data$Lob <- as.character(full.data$Lobar_BG_vs)#
# full.data$Lob[full.data$Lob == "Not Lobar"] <- "Deep"#
# full.data$Lob <- factor(full.data$Lob, levels= c("Lobar", "Deep"))#
# full.data$Lobar_BG_vs <- full.data$Lob#
#
full.data$ICH_Location <- full.data$Lobar_BG_vs#
#
xxfull.data <- full.data#
#Pct_Pre_10#
vname <- "Group_Assigned"#
#
full.data <-  xxfull.data#
# vname <- "Group_Assigned"#
ssub <- ""#
rvname <- vname#
vsub <- "Surgery"#
#
vars <- c("Age", "ICH_Pre_Rand_10", vname, "Enrollment_GCS_Add")#
cc <- complete.cases(full.data[, vars])#
if (any(!cc)){#
  # if ( !(full.data$patientName[!cc] %in% 289525) ) stop("Something is off about data")#
  stop("Something is off about data")#
}#
#
#### using ABC/2 From Site#
cc <- complete.cases(full.data[, vars])#
#### TAKE OUT WHEN UPDATED#
#
full.data[!cc, c("patientName", vars)]#
#
full.data <- full.data[cc, ]#
FD1 <- full.data#
### say 0 if want probs by group#
fup <- 180#
outvar <- paste("Bad_Outcome_Day_", fup, sep="")#
### Uncomment for Good outcome, comment for bad outcome#
#outvar <- gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)#
full.data[ gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)] <- full.data[, outvar] == 0#
full.data$Y <- as.numeric(full.data[, outvar] == 1)#
#full.data[, paste("Good_Outcome_Day_", fup, sep="")] <-#
# full.data[, outvar] <- NULL#
# , "Ictus_to_Proc", "Hemisphere", "Under_15cc", "African_American"#
runvars <- c("Age_Cat", "GCS_Cat", "Haematoma_volume", "Group_Assigned",  "ICH_Location", "Side_of_haematoma", "Time_to_Randomization")#
runvars <- runvars[ !runvars %in% rvname ]#
#
# else {#
# runvars <- runvars[ !runvars %in% rvname ]#
# }#
lrvar <- length(runvars)#
#
var <- vname#
mod.type <- ""#
#mod.type <- "Adj_"#
#
adder <- "Unadjusted "#
if (mod.type == "Adj_") adder <- "Adjusted "#
# all.table2 <- all.table <- c("Study or subcategory", "Surgical", "Medical", "N", "Odds Ratio (95% CI)", "Odds Ratio (95% CI)", "OR", "Lower", "Upper")#
# all.table3 <- c("Study or subcategory", "Surgical", "Medical", "N", "Risk Difference (95% CI)", "Risk Difference (95% CI)", "RD", "Lower", "Upper")#
#
all.table2 <- all.table <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "OR (95% CI)", "OR (95% CI)", "OR", "Lower", "Upper"), nrow=1)#
all.table3 <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "RD (95% CI)", "RD (95% CI)", "RD", "Lower", "Upper"), nrow=1)#
# data <- data[complete.cases(data[, c("Y", var, runvars)]),]#
#
ivar <- 1#
#
for (ivar in 1:lrvar){#
  rvar <- runvars[ivar]#
  varname <- gsub(rvar, pattern="_Cat.*", replacement="")#
  varname <- gsub(varname, pattern="_", replacement = " ")#
  all.table <- rbind(all.table, c(varname, rep(NA, ncol(all.table)-1 ) ))#
  all.table2 <- rbind(all.table2, c(varname, rep(NA, ncol(all.table2)-1 )))#
  all.table3 <- rbind(all.table3, c(varname, rep(NA, ncol(all.table3) -1)))#
  data <- full.data		#
  if (is.factor(data[, var])) {#
    ylevs <- levels(data[,var])#
  } else ylevs <- c(0, 1)		#
  data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
  vars <- c("Age", "ICH_Pre_Rand_10", "Treatment", "Enrollment_GCS_Add", "Y")#
  if (mod.type != "Adj_") vars <- c("Treatment", "Y")#
  cc <- complete.cases(data[, c(vars, rvar)])#
  data <- data[cc,]#
  levs <- levels(data[, rvar])#
  all.MH <- matrix(NA, nrow=length(levs), ncol=4)#
  print(levs)#
  ilev <- 1#
  for (ilev in 1:length(levs)){#
    inlev <- data[, rvar] == levs[ilev]#
    dat <- data[inlev,]#
    tab <- table(dat$Group_Assigned, dat$Y)#
    print(tab)#
    ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
    nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
    ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
    pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
    all.MH[ilev, 1] <- ntrt#
    all.MH[ilev, 2] <- nctrl#
    all.MH[ilev, 3] <- ptrt#
    all.MH[ilev, 4] <- pctrl#
    dat$Treatment <- dat$T0#
    mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
    smod <- summary(mod)$coeff#
    if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
    print(smod)#
    ci <- smod["Treatment", ,drop = FALSE]#
    est <- exp(ci[, "Estimate"])#
    ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
    dat$Treatment <- 1#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p1hat <- predict(mod, newdat=dat, type="response")#
    dat$Treatment <- 0#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p0hat <- predict(mod, newdat=dat, type="response")#
    Ai <- dat$T0#
    Yi <- dat$Y#
    unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    if (ptrt == 0 | pctrl == 0 | ntrt == ptrt | nctrl == pctrl){#
    	cc <- 0.5    	 #
		  x <- tab#
		  x <- x + cc#
  	    SELOGOR = sqrt(1 /( x[1,1] + cc) + 1 / (x[1,2] + cc) + #
    	                        1 / (x[2,1] +cc) + 1 / (x[2,2] +cc))#
		  OR <- x[2,2]*x[1,1]/(x[1,2]* x[2,1])#
		  log.OR <- log(OR)#
		  ## they were n good / N, so need the table#
		CI <- log.OR + c(-1, 1) * qnorm(0.975) * SELOGOR#
      unadj$OR <- OR#
      OR.CI <- exp(CI)#
      unadj$OR.CI <- OR.CI#
      unadj$SE <- SELOGOR#
		  #stop("IT")#
    }#
    unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    dig <- 2#
    all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
    all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
    all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
  }#
}#
#
rvar <- "Surgery Time"#
all.table <- rbind(all.table, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table)-1 ) ))#
all.table2 <- rbind(all.table2, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table2)-1 )))#
all.table3 <- rbind(all.table3, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table3) -1)))#
#
rvar <- "Ictus_to_Proc1"#
#
data <- full.data		#
if (is.factor(data[, var])) {#
  ylevs <- levels(data[,var])#
} else ylevs <- c(0, 1)		#
data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
#
cc <- complete.cases(full.data[, c("Y", vars, rvar)])#
data <- data[cc,]#
levs <- levels(data[, rvar])#
all.MH <- matrix(NA, nrow=length(levs)-1, ncol=4)#
print(levs)#
ilev <- 2#
#
for (ilev in 2:3){#
  inlev <- data[, rvar] %in% c("Medical", levs[ilev])#
  dat <- data[inlev,]#
  tab <- table(dat$Group_Assigned, dat$Y)#
  print(tab)#
  ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
  nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
  ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
  pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
  all.MH[ilev-1, 1] <- ntrt#
  all.MH[ilev-1, 2] <- nctrl#
  all.MH[ilev-1, 3] <- ptrt#
  all.MH[ilev-1, 4] <- pctrl#
  dat$Treatment <- dat$T0#
  mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
  smod <- summary(mod)$coeff#
  if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
  print(smod)#
  ci <- smod["Treatment", ,drop = FALSE]#
  est <- exp(ci[, "Estimate"])#
  ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
  dat$Treatment <- 1#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p1hat <- predict(mod, newdat=dat, type="response")#
  dat$Treatment <- 0#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p0hat <- predict(mod, newdat=dat, type="response")#
  Ai <- dat$T0#
  Yi <- dat$Y#
  unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  if (ptrt == 0 | pctrl == 0){#
    unadj$OR <- NA#
    unadj$OR.CI <- c(NA, NA)#
  }#
  unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  dig <- 2#
  all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
  all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
  all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
}#
all.table <- cbind(all.table, c("OR_Check", rep("", nrow(all.table)-1))) #
col <- ncol(all.table)#
cols <- all.table[1,] %in% c("Surgical", "Medical")#
#
for (irow in 2:nrow(all.table)){#
  x <- all.table[irow, cols]#
  if (is.na(x[1]) & is.na(x[2])) next#
  x <- as.numeric(unlist(strsplit(x, split="/")))#
  ## they were n good / N, so need the table#
  x <- c(x[1], x[2]-x[1], x[3], x[4] - x[3])#
  tab <- matrix(as.numeric(x), ncol=2, byrow=TRUE)#
  if (any(tab == 0)) tab <- tab + 0.5#
  ## they're in reversed order#
  all.table[irow, col] <- tab[2,2]*tab[1,1]/(tab[1,2]* tab[2,1])#
}#
xtab <- all.table#
xtab <- xtab[2:nrow(xtab), ]#
colnames(xtab) <- all.table[1,]#
xtab <- as.data.frame(xtab, stringsAsFactors=FALSE)#
xtab$OR_Check <- as.numeric(xtab$OR_Check)#
xtab$OR <- as.numeric(xtab$OR)#
keep_MIS <- which(all.table[, 1] == "Surgery Time")#
tab2 <- all.table[1:(keep_MIS-1), ]#
colnames(tab2) <- c("Category", "Surgical", "Medical", "N", "MISTIE_OR.95.CI", "Drop", "MISTIE_OR", "Lower", "Upper", "OR_Check")#
tab2 <- data.frame(tab2, stringsAsFactors=FALSE)#
tab2$Drop <- NULL#
tryout <- merge(stich_data, tab2, by="Category", sort=FALSE, all=TRUE)#
tryout$STICH_N <- as.numeric(tryout$N_C) + as.numeric(tryout$N_E)#
tryout$n_C <- tryout$N_C <-tryout$N_E <-tryout$n_E <-NULL#
tryout$OR_Check <- NULL#
#
# cis <- sapply(strsplit(tryout$OR.95..CI, split=" "), function(x) ifelse(length(x) > 0, x[2], NA))#
# cis <- gsub(cis, pattern="(", replacement = "", fixed=TRUE)#
# cis <- gsub(cis, pattern=")", replacement = "", fixed=TRUE)#
# cis <- gsub(cis, pattern="–", replacement = "-", fixed=TRUE)#
# cis <- strsplit(cis, split="-")#
# cis <- lapply(cis, as.numeric)#
# cis <- do.call("rbind", cis)#
# tryout$STICH_Lower <- cis[,1]#
# tryout$STICH_Upper <- cis[,2]#
# tryout$STICH_Lower[1] <- "Lower"#
# tryout$STICH_Upper[1] <- "Upper"#
#
tryout$Conservative[1] <- "Conservative" #
tryout$Early[1] <- "Early" #
#Initial conservative treatment n/N#
tryout$OR.95..CI[1] <- "OR 95% CI"#
tryout$Category[1] <- "Subgroups"#
tryout$OR[1] <- "OR"#
tryout$STICH_N[1] <- "N"
stich_data
?prop.test
smokers  <- c( 83, 90, 129, 70 )#
patients <- c( 86, 93, 136, 82 )#
prop.test(smokers, patients)
stich_data$n_E
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
pdf(file=file.path(resdir, "Time_To_Randomization.pdf"))#
	at <- c(0, 8, 16, 24, 48, 72, 96)#
	hist(full.data$Ictus_to_Enrolled*24, breaks=at, xaxt='n', main="MISTIE Distribution of Time from Ictus to Randomization", freq=TRUE, xlab='Hours from Onset')#
	axis(1, at=at)#
dev.off()#
#
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
#
{#
#
	levs <- c("< 8 hrs", "8-24 hrs", "24-72 hrs", "> 72 hrs")#
	full.data$Time_to_Randomization <- NA#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 <= 8] <- levs[1]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 8 & full.data$Ictus_to_Enrolled * 24 <= 24] <- levs[2]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 24 & full.data$Ictus_to_Enrolled * 24 <= 72] <- levs[3]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 72] <- levs[3]#
}#
# levs <- c("< 1 Day","2 Day", "> 2 Days")#
# full.data$Time_To_Procedure <- NA#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure <= 1] <- levs[1]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 1 & full.data$Ictus_to_Op_Procedure <= 2] <- levs[2]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 2] <- levs[3]#
# full.data$Time_To_Procedure <- factor(full.data$Time_To_Procedure, levels= levs)#
# #
# ll <- c("Other", "African American")#
# full.data$African_American <- ll[as.numeric(full.data$Ethnicity == "African American not Hispanic") + 1]#
# full.data$African_American[full.data$Ethnicity == "Other or unknown"] <- NA#
# full.data$African_American <- factor(full.data$African_American, levels=ll)#
# full.data$Lob <- as.character(full.data$Lobar_BG_vs)#
# full.data$Lob[full.data$Lob == "Not Lobar"] <- "Deep"#
# full.data$Lob <- factor(full.data$Lob, levels= c("Lobar", "Deep"))#
# full.data$Lobar_BG_vs <- full.data$Lob#
#
full.data$ICH_Location <- full.data$Lobar_BG_vs#
#
xxfull.data <- full.data#
#Pct_Pre_10#
vname <- "Group_Assigned"#
#
full.data <-  xxfull.data#
# vname <- "Group_Assigned"#
ssub <- ""#
rvname <- vname#
vsub <- "Surgery"#
#
vars <- c("Age", "ICH_Pre_Rand_10", vname, "Enrollment_GCS_Add")#
cc <- complete.cases(full.data[, vars])#
if (any(!cc)){#
  # if ( !(full.data$patientName[!cc] %in% 289525) ) stop("Something is off about data")#
  stop("Something is off about data")#
}#
#
#### using ABC/2 From Site#
cc <- complete.cases(full.data[, vars])#
#### TAKE OUT WHEN UPDATED#
#
full.data[!cc, c("patientName", vars)]#
#
full.data <- full.data[cc, ]#
FD1 <- full.data#
### say 0 if want probs by group#
fup <- 180#
outvar <- paste("Bad_Outcome_Day_", fup, sep="")#
### Uncomment for Good outcome, comment for bad outcome#
#outvar <- gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)#
full.data[ gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)] <- full.data[, outvar] == 0#
full.data$Y <- as.numeric(full.data[, outvar] == 1)#
#full.data[, paste("Good_Outcome_Day_", fup, sep="")] <-#
# full.data[, outvar] <- NULL#
# , "Ictus_to_Proc", "Hemisphere", "Under_15cc", "African_American"#
runvars <- c("Age_Cat", "GCS_Cat", "Haematoma_volume", "Group_Assigned",  "ICH_Location", "Side_of_haematoma", "Time_to_Randomization")#
runvars <- runvars[ !runvars %in% rvname ]#
#
# else {#
# runvars <- runvars[ !runvars %in% rvname ]#
# }#
lrvar <- length(runvars)#
#
var <- vname#
mod.type <- ""#
#mod.type <- "Adj_"#
#
adder <- "Unadjusted "#
if (mod.type == "Adj_") adder <- "Adjusted "#
# all.table2 <- all.table <- c("Study or subcategory", "Surgical", "Medical", "N", "Odds Ratio (95% CI)", "Odds Ratio (95% CI)", "OR", "Lower", "Upper")#
# all.table3 <- c("Study or subcategory", "Surgical", "Medical", "N", "Risk Difference (95% CI)", "Risk Difference (95% CI)", "RD", "Lower", "Upper")#
#
all.table2 <- all.table <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "OR (95% CI)", "OR (95% CI)", "OR", "Lower", "Upper"), nrow=1)#
all.table3 <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "RD (95% CI)", "RD (95% CI)", "RD", "Lower", "Upper"), nrow=1)#
# data <- data[complete.cases(data[, c("Y", var, runvars)]),]#
#
ivar <- 1#
#
for (ivar in 1:lrvar){#
  rvar <- runvars[ivar]#
  varname <- gsub(rvar, pattern="_Cat.*", replacement="")#
  varname <- gsub(varname, pattern="_", replacement = " ")#
  all.table <- rbind(all.table, c(varname, rep(NA, ncol(all.table)-1 ) ))#
  all.table2 <- rbind(all.table2, c(varname, rep(NA, ncol(all.table2)-1 )))#
  all.table3 <- rbind(all.table3, c(varname, rep(NA, ncol(all.table3) -1)))#
  data <- full.data		#
  if (is.factor(data[, var])) {#
    ylevs <- levels(data[,var])#
  } else ylevs <- c(0, 1)		#
  data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
  vars <- c("Age", "ICH_Pre_Rand_10", "Treatment", "Enrollment_GCS_Add", "Y")#
  if (mod.type != "Adj_") vars <- c("Treatment", "Y")#
  cc <- complete.cases(data[, c(vars, rvar)])#
  data <- data[cc,]#
  levs <- levels(data[, rvar])#
  all.MH <- matrix(NA, nrow=length(levs), ncol=4)#
  print(levs)#
  ilev <- 1#
  for (ilev in 1:length(levs)){#
    inlev <- data[, rvar] == levs[ilev]#
    dat <- data[inlev,]#
    tab <- table(dat$Group_Assigned, dat$Y)#
    print(tab)#
    ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
    nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
    ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
    pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
    all.MH[ilev, 1] <- ntrt#
    all.MH[ilev, 2] <- nctrl#
    all.MH[ilev, 3] <- ptrt#
    all.MH[ilev, 4] <- pctrl#
    dat$Treatment <- dat$T0#
    mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
    smod <- summary(mod)$coeff#
    if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
    print(smod)#
    ci <- smod["Treatment", ,drop = FALSE]#
    est <- exp(ci[, "Estimate"])#
    ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
    dat$Treatment <- 1#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p1hat <- predict(mod, newdat=dat, type="response")#
    dat$Treatment <- 0#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p0hat <- predict(mod, newdat=dat, type="response")#
    Ai <- dat$T0#
    Yi <- dat$Y#
    unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    if (ptrt == 0 | pctrl == 0 | ntrt == ptrt | nctrl == pctrl){#
    	cc <- 0.5    	 #
		  x <- tab#
		  x <- x + cc#
  	    SELOGOR = sqrt(1 /( x[1,1] + cc) + 1 / (x[1,2] + cc) + #
    	                        1 / (x[2,1] +cc) + 1 / (x[2,2] +cc))#
		  OR <- x[2,2]*x[1,1]/(x[1,2]* x[2,1])#
		  log.OR <- log(OR)#
		  ## they were n good / N, so need the table#
		CI <- log.OR + c(-1, 1) * qnorm(0.975) * SELOGOR#
      unadj$OR <- OR#
      OR.CI <- exp(CI)#
      unadj$OR.CI <- OR.CI#
      unadj$SE <- SELOGOR#
		  #stop("IT")#
    }#
    unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    dig <- 2#
    all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
    all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
    all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
  }#
}#
#
rvar <- "Surgery Time"#
all.table <- rbind(all.table, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table)-1 ) ))#
all.table2 <- rbind(all.table2, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table2)-1 )))#
all.table3 <- rbind(all.table3, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table3) -1)))#
#
rvar <- "Ictus_to_Proc1"#
#
data <- full.data		#
if (is.factor(data[, var])) {#
  ylevs <- levels(data[,var])#
} else ylevs <- c(0, 1)		#
data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
#
cc <- complete.cases(full.data[, c("Y", vars, rvar)])#
data <- data[cc,]#
levs <- levels(data[, rvar])#
all.MH <- matrix(NA, nrow=length(levs)-1, ncol=4)#
print(levs)#
ilev <- 2#
#
for (ilev in 2:3){#
  inlev <- data[, rvar] %in% c("Medical", levs[ilev])#
  dat <- data[inlev,]#
  tab <- table(dat$Group_Assigned, dat$Y)#
  print(tab)#
  ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
  nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
  ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
  pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
  all.MH[ilev-1, 1] <- ntrt#
  all.MH[ilev-1, 2] <- nctrl#
  all.MH[ilev-1, 3] <- ptrt#
  all.MH[ilev-1, 4] <- pctrl#
  dat$Treatment <- dat$T0#
  mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
  smod <- summary(mod)$coeff#
  if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
  print(smod)#
  ci <- smod["Treatment", ,drop = FALSE]#
  est <- exp(ci[, "Estimate"])#
  ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
  dat$Treatment <- 1#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p1hat <- predict(mod, newdat=dat, type="response")#
  dat$Treatment <- 0#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p0hat <- predict(mod, newdat=dat, type="response")#
  Ai <- dat$T0#
  Yi <- dat$Y#
  unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  if (ptrt == 0 | pctrl == 0){#
    unadj$OR <- NA#
    unadj$OR.CI <- c(NA, NA)#
  }#
  unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  dig <- 2#
  all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
  all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
  all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
}#
all.table <- cbind(all.table, c("OR_Check", rep("", nrow(all.table)-1))) #
col <- ncol(all.table)#
cols <- all.table[1,] %in% c("Surgical", "Medical")#
#
for (irow in 2:nrow(all.table)){#
  x <- all.table[irow, cols]#
  if (is.na(x[1]) & is.na(x[2])) next#
  x <- as.numeric(unlist(strsplit(x, split="/")))#
  ## they were n good / N, so need the table#
  x <- c(x[1], x[2]-x[1], x[3], x[4] - x[3])#
  tab <- matrix(as.numeric(x), ncol=2, byrow=TRUE)#
  if (any(tab == 0)) tab <- tab + 0.5#
  ## they're in reversed order#
  all.table[irow, col] <- tab[2,2]*tab[1,1]/(tab[1,2]* tab[2,1])#
}#
xtab <- all.table#
xtab <- xtab[2:nrow(xtab), ]#
colnames(xtab) <- all.table[1,]#
xtab <- as.data.frame(xtab, stringsAsFactors=FALSE)#
xtab$OR_Check <- as.numeric(xtab$OR_Check)#
xtab$OR <- as.numeric(xtab$OR)#
keep_MIS <- which(all.table[, 1] == "Surgery Time")#
tab2 <- all.table[1:(keep_MIS-1), ]#
colnames(tab2) <- c("Category", "Surgical", "Medical", "N", "MISTIE_OR.95.CI", "Drop", "MISTIE_OR", "Lower", "Upper", "OR_Check")#
tab2 <- data.frame(tab2, stringsAsFactors=FALSE)#
tab2$Drop <- NULL#
tryout <- merge(stich_data, tab2, by="Category", sort=FALSE, all=TRUE)#
tryout$STICH_N <- as.numeric(tryout$N_C) + as.numeric(tryout$N_E)#
tryout$n_C <- tryout$N_C <-tryout$N_E <-tryout$n_E <-NULL#
tryout$OR_Check <- NULL#
#
# cis <- sapply(strsplit(tryout$OR.95..CI, split=" "), function(x) ifelse(length(x) > 0, x[2], NA))#
# cis <- gsub(cis, pattern="(", replacement = "", fixed=TRUE)#
# cis <- gsub(cis, pattern=")", replacement = "", fixed=TRUE)#
# cis <- gsub(cis, pattern="–", replacement = "-", fixed=TRUE)#
# cis <- strsplit(cis, split="-")#
# cis <- lapply(cis, as.numeric)#
# cis <- do.call("rbind", cis)#
# tryout$STICH_Lower <- cis[,1]#
# tryout$STICH_Upper <- cis[,2]#
# tryout$STICH_Lower[1] <- "Lower"#
# tryout$STICH_Upper[1] <- "Upper"#
#
tryout$Conservative[1] <- "Conservative" #
tryout$Early[1] <- "Early" #
#Initial conservative treatment n/N#
tryout$OR.95..CI[1] <- "OR 95% CI"#
tryout$Category[1] <- "Subgroups"#
tryout$OR[1] <- "OR"#
tryout$STICH_N[1] <- "N"
tryout
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
pdf(file=file.path(resdir, "Time_To_Randomization.pdf"))#
	at <- c(0, 8, 16, 24, 48, 72, 96)#
	hist(full.data$Ictus_to_Enrolled*24, breaks=at, xaxt='n', main="MISTIE Distribution of Time from Ictus to Randomization", freq=TRUE, xlab='Hours from Onset')#
	axis(1, at=at)#
dev.off()#
#
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
#
{#
#
	levs <- c("< 8 hrs", "8-24 hrs", "24-72 hrs", "> 72 hrs")#
	full.data$Time_to_Randomization <- NA#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 <= 8] <- levs[1]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 8 & full.data$Ictus_to_Enrolled * 24 <= 24] <- levs[2]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 24 & full.data$Ictus_to_Enrolled * 24 <= 72] <- levs[3]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 72] <- levs[3]#
}#
# levs <- c("< 1 Day","2 Day", "> 2 Days")#
# full.data$Time_To_Procedure <- NA#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure <= 1] <- levs[1]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 1 & full.data$Ictus_to_Op_Procedure <= 2] <- levs[2]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 2] <- levs[3]#
# full.data$Time_To_Procedure <- factor(full.data$Time_To_Procedure, levels= levs)#
# #
# ll <- c("Other", "African American")#
# full.data$African_American <- ll[as.numeric(full.data$Ethnicity == "African American not Hispanic") + 1]#
# full.data$African_American[full.data$Ethnicity == "Other or unknown"] <- NA#
# full.data$African_American <- factor(full.data$African_American, levels=ll)#
# full.data$Lob <- as.character(full.data$Lobar_BG_vs)#
# full.data$Lob[full.data$Lob == "Not Lobar"] <- "Deep"#
# full.data$Lob <- factor(full.data$Lob, levels= c("Lobar", "Deep"))#
# full.data$Lobar_BG_vs <- full.data$Lob#
#
full.data$ICH_Location <- full.data$Lobar_BG_vs#
#
xxfull.data <- full.data#
#Pct_Pre_10#
vname <- "Group_Assigned"#
#
full.data <-  xxfull.data#
# vname <- "Group_Assigned"#
ssub <- ""#
rvname <- vname#
vsub <- "Surgery"#
#
vars <- c("Age", "ICH_Pre_Rand_10", vname, "Enrollment_GCS_Add")#
cc <- complete.cases(full.data[, vars])#
if (any(!cc)){#
  # if ( !(full.data$patientName[!cc] %in% 289525) ) stop("Something is off about data")#
  stop("Something is off about data")#
}#
#
#### using ABC/2 From Site#
cc <- complete.cases(full.data[, vars])#
#### TAKE OUT WHEN UPDATED#
#
full.data[!cc, c("patientName", vars)]#
#
full.data <- full.data[cc, ]#
FD1 <- full.data#
### say 0 if want probs by group#
fup <- 180#
outvar <- paste("Bad_Outcome_Day_", fup, sep="")#
### Uncomment for Good outcome, comment for bad outcome#
#outvar <- gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)#
full.data[ gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)] <- full.data[, outvar] == 0#
full.data$Y <- as.numeric(full.data[, outvar] == 1)#
#full.data[, paste("Good_Outcome_Day_", fup, sep="")] <-#
# full.data[, outvar] <- NULL#
# , "Ictus_to_Proc", "Hemisphere", "Under_15cc", "African_American"#
runvars <- c("Age_Cat", "GCS_Cat", "Haematoma_volume", "Group_Assigned",  "ICH_Location", "Side_of_haematoma", "Time_to_Randomization")#
runvars <- runvars[ !runvars %in% rvname ]#
#
# else {#
# runvars <- runvars[ !runvars %in% rvname ]#
# }#
lrvar <- length(runvars)#
#
var <- vname#
mod.type <- ""#
#mod.type <- "Adj_"#
#
adder <- "Unadjusted "#
if (mod.type == "Adj_") adder <- "Adjusted "#
# all.table2 <- all.table <- c("Study or subcategory", "Surgical", "Medical", "N", "Odds Ratio (95% CI)", "Odds Ratio (95% CI)", "OR", "Lower", "Upper")#
# all.table3 <- c("Study or subcategory", "Surgical", "Medical", "N", "Risk Difference (95% CI)", "Risk Difference (95% CI)", "RD", "Lower", "Upper")#
#
all.table2 <- all.table <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "OR (95% CI)", "OR (95% CI)", "OR", "Lower", "Upper"), nrow=1)#
all.table3 <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "RD (95% CI)", "RD (95% CI)", "RD", "Lower", "Upper"), nrow=1)#
# data <- data[complete.cases(data[, c("Y", var, runvars)]),]#
#
ivar <- 1#
#
for (ivar in 1:lrvar){#
  rvar <- runvars[ivar]#
  varname <- gsub(rvar, pattern="_Cat.*", replacement="")#
  varname <- gsub(varname, pattern="_", replacement = " ")#
  all.table <- rbind(all.table, c(varname, rep(NA, ncol(all.table)-1 ) ))#
  all.table2 <- rbind(all.table2, c(varname, rep(NA, ncol(all.table2)-1 )))#
  all.table3 <- rbind(all.table3, c(varname, rep(NA, ncol(all.table3) -1)))#
  data <- full.data		#
  if (is.factor(data[, var])) {#
    ylevs <- levels(data[,var])#
  } else ylevs <- c(0, 1)		#
  data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
  vars <- c("Age", "ICH_Pre_Rand_10", "Treatment", "Enrollment_GCS_Add", "Y")#
  if (mod.type != "Adj_") vars <- c("Treatment", "Y")#
  cc <- complete.cases(data[, c(vars, rvar)])#
  data <- data[cc,]#
  levs <- levels(data[, rvar])#
  all.MH <- matrix(NA, nrow=length(levs), ncol=4)#
  print(levs)#
  ilev <- 1#
  for (ilev in 1:length(levs)){#
    inlev <- data[, rvar] == levs[ilev]#
    dat <- data[inlev,]#
    tab <- table(dat$Group_Assigned, dat$Y)#
    print(tab)#
    ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
    nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
    ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
    pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
    all.MH[ilev, 1] <- ntrt#
    all.MH[ilev, 2] <- nctrl#
    all.MH[ilev, 3] <- ptrt#
    all.MH[ilev, 4] <- pctrl#
    dat$Treatment <- dat$T0#
    mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
    smod <- summary(mod)$coeff#
    if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
    print(smod)#
    ci <- smod["Treatment", ,drop = FALSE]#
    est <- exp(ci[, "Estimate"])#
    ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
    dat$Treatment <- 1#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p1hat <- predict(mod, newdat=dat, type="response")#
    dat$Treatment <- 0#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p0hat <- predict(mod, newdat=dat, type="response")#
    Ai <- dat$T0#
    Yi <- dat$Y#
    unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    if (ptrt == 0 | pctrl == 0 | ntrt == ptrt | nctrl == pctrl){#
    	cc <- 0.5    	 #
		  x <- tab#
		  x <- x + cc#
  	    SELOGOR = sqrt(1 /( x[1,1] + cc) + 1 / (x[1,2] + cc) + #
    	                        1 / (x[2,1] +cc) + 1 / (x[2,2] +cc))#
		  OR <- x[2,2]*x[1,1]/(x[1,2]* x[2,1])#
		  log.OR <- log(OR)#
		  ## they were n good / N, so need the table#
		CI <- log.OR + c(-1, 1) * qnorm(0.975) * SELOGOR#
      unadj$OR <- OR#
      OR.CI <- exp(CI)#
      unadj$OR.CI <- OR.CI#
      unadj$SE <- SELOGOR#
		  #stop("IT")#
    }#
    unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    dig <- 2#
    all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
    all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
    all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
  }#
}#
#
rvar <- "Surgery Time"#
all.table <- rbind(all.table, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table)-1 ) ))#
all.table2 <- rbind(all.table2, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table2)-1 )))#
all.table3 <- rbind(all.table3, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table3) -1)))#
#
rvar <- "Ictus_to_Proc1"#
#
data <- full.data		#
if (is.factor(data[, var])) {#
  ylevs <- levels(data[,var])#
} else ylevs <- c(0, 1)		#
data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
#
cc <- complete.cases(full.data[, c("Y", vars, rvar)])#
data <- data[cc,]#
levs <- levels(data[, rvar])#
all.MH <- matrix(NA, nrow=length(levs)-1, ncol=4)#
print(levs)#
ilev <- 2#
#
for (ilev in 2:3){#
  inlev <- data[, rvar] %in% c("Medical", levs[ilev])#
  dat <- data[inlev,]#
  tab <- table(dat$Group_Assigned, dat$Y)#
  print(tab)#
  ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
  nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
  ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
  pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
  all.MH[ilev-1, 1] <- ntrt#
  all.MH[ilev-1, 2] <- nctrl#
  all.MH[ilev-1, 3] <- ptrt#
  all.MH[ilev-1, 4] <- pctrl#
  dat$Treatment <- dat$T0#
  mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
  smod <- summary(mod)$coeff#
  if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
  print(smod)#
  ci <- smod["Treatment", ,drop = FALSE]#
  est <- exp(ci[, "Estimate"])#
  ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
  dat$Treatment <- 1#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p1hat <- predict(mod, newdat=dat, type="response")#
  dat$Treatment <- 0#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p0hat <- predict(mod, newdat=dat, type="response")#
  Ai <- dat$T0#
  Yi <- dat$Y#
  unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  if (ptrt == 0 | pctrl == 0){#
    unadj$OR <- NA#
    unadj$OR.CI <- c(NA, NA)#
  }#
  unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  dig <- 2#
  all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
  all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
  all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
}#
all.table <- cbind(all.table, c("OR_Check", rep("", nrow(all.table)-1))) #
col <- ncol(all.table)#
cols <- all.table[1,] %in% c("Surgical", "Medical")#
#
for (irow in 2:nrow(all.table)){#
  x <- all.table[irow, cols]#
  if (is.na(x[1]) & is.na(x[2])) next#
  x <- as.numeric(unlist(strsplit(x, split="/")))#
  ## they were n good / N, so need the table#
  x <- c(x[1], x[2]-x[1], x[3], x[4] - x[3])#
  tab <- matrix(as.numeric(x), ncol=2, byrow=TRUE)#
  if (any(tab == 0)) tab <- tab + 0.5#
  ## they're in reversed order#
  all.table[irow, col] <- tab[2,2]*tab[1,1]/(tab[1,2]* tab[2,1])#
}#
xtab <- all.table#
xtab <- xtab[2:nrow(xtab), ]#
colnames(xtab) <- all.table[1,]#
xtab <- as.data.frame(xtab, stringsAsFactors=FALSE)#
xtab$OR_Check <- as.numeric(xtab$OR_Check)#
xtab$OR <- as.numeric(xtab$OR)#
keep_MIS <- which(all.table[, 1] == "Surgery Time")#
tab2 <- all.table[1:(keep_MIS-1), ]#
colnames(tab2) <- c("Category", "Surgical", "Medical", "N", "MISTIE_OR.95.CI", "Drop", "MISTIE_OR", "Lower", "Upper", "OR_Check")#
tab2 <- data.frame(tab2, stringsAsFactors=FALSE)#
tab2$Drop <- NULL#
tryout <- merge(stich_data, tab2, by="Category", sort=FALSE, all=TRUE)#
#
for (icol in c("N_C", "n_C", "N_E", "n_E")) tryout[, icol] <- as.numeric(tryout[, icol])#
#
tryout$STICH_N <- tryout$N_C + tryout$N_E#
#tryout$n_C <- tryout$N_C <-tryout$N_E <-tryout$n_E <-NULL#
tryout$OR_Check <- NULL
head(tryout)
tryout[3,]
tryout[3, "n_C"]
ro <- tryout[3,]
cons <- ro[, c("n_C", "N_C")]
cons
cons[2] <- cons[2] - cons[1]
early <- ro[, c('n_E', "N_E")]
early[2] <- early[2] - early[1]
prop.test(cons, early)
cons
early
?prop.test
cons[,1]
cons[1,]
cons
early
ro
prop.test(early, cons)
early <- as.numeric(early)
early
cons <- as.numeric(cons)
prop.test(early, cons)
head(tryout)
tryout[, c("n_E", "N_E", "n_C",  "N_C")]
dat <- tryout[, c("n_E", "N_E", "n_C",  "N_C")]
t(dat)
dat[, c("n_E", "n_C")]
c(dat[, c("n_E", "n_C")])
matrix(dat[, c("n_E", "n_C")], ncol=1)
matrix(as.numeric(dat[, c("n_E", "n_C")]), ncol=1)
dat[, c("n_E", "n_C")]
as.matrix(dat[, c("n_E", "n_C")])
c(as.matrix(dat[, c("n_E", "n_C")]))
N <- c(as.matrix(dat[, c("N_E", "N_C")]))
n <- c(as.matrix(dat[, c("n_E", "n_C")]))
prop.test(n, N)
prop.test(n, N)irow
irow
irow <- 2
dat <- tryout[irow, c("n_E", "N_E", "n_C",  "N_C")]
dat
dat <- tryout[irow, c("n_E", "N_E", "n_C",  "N_C")]#
	if (any(is.na(dat))) next;
tryout[3,]
irow <- 3
dat <- tryout[irow, c("n_E", "N_E", "n_C",  "N_C")]
dat[]
dat <- tryout[irow, c("n_E", "N_E", "n_C",  "N_C")]#
	if (any(is.na(dat))) next;#
	n <- dat[, c("n_E", "n_C")]#
	N <- dat[, c("N_E", "N_C")]#
	prop.test(n, N)
n
dat <- tryout[irow, c("n_E", "N_E", "n_C",  "N_C")]#
	if (any(is.na(dat))) next;#
	n <- as.numeric(dat[, c("n_E", "n_C")])#
	N <- as.numeric(dat[, c("N_E", "N_C")])#
	prop.test(n, N)
n
N
rd <- prop.test(n, N)
dat <- tryout[irow, c("n_E", "N_E", "n_C",  "N_C")]#
	if (any(is.na(dat))) next;#
	n <- as.numeric(dat[, c("n_E", "n_C")])#
	N <- as.numeric(dat[, c("N_E", "N_C")])#
	rd <- prop.test(n, N)
rd
rd$conf.int
rd
rd$statistic
rd$estimate
dat <- tryout[irow, c("n_E", "N_E", "n_C",  "N_C")]#
	if (any(is.na(dat))) next;#
	n <- as.numeric(dat[, c("n_E", "n_C")])#
	N <- as.numeric(dat[, c("N_E", "N_C")])#
	rd <- prop.test(n, N)#
	RD.CI <- rd$conf.int#
	RD <- diff(rd$estimate)
RD
for (irow in 2:nrow(tryout)){#
	dat <- tryout[irow, c("n_E", "N_E", "n_C",  "N_C")]#
	if (any(is.na(dat))) next;#
	n <- as.numeric(dat[, c("n_E", "n_C")])#
	N <- as.numeric(dat[, c("N_E", "N_C")])#
	rd <- prop.test(n, N)#
	RD.CI <- rd$conf.int#
	RD <- diff(rd$estimate)#
}
tryout$STICH_RD.CI <- tryout$STICH_RD <- NA#
#
for (irow in 2:nrow(tryout)){#
	dat <- tryout[irow, c("n_E", "N_E", "n_C",  "N_C")]#
	if (any(is.na(dat))) next;#
	n <- as.numeric(dat[, c("n_E", "n_C")])#
	N <- as.numeric(dat[, c("N_E", "N_C")])#
	rd <- prop.test(n, N)#
	tryout$STICH_RD.CI[irow] <- rd$conf.int#
	tryout$STICH_RD[irow] <- diff(rd$estimate)#
}
warnings()
tryout$STICH_RD.Lower <- tryout$STICH_RD.Upper <- tryout$STICH_RD.CI <- tryout$STICH_RD <- NA#
#
for (irow in 2:nrow(tryout)){#
	dat <- tryout[irow, c("n_E", "N_E", "n_C",  "N_C")]#
	if (any(is.na(dat))) next;#
	n <- as.numeric(dat[, c("n_E", "n_C")])#
	N <- as.numeric(dat[, c("N_E", "N_C")])#
	rd <- prop.test(n, N)#
	RD <- diff(rd$estimate)#
	tryout$STICH_RD.CI[irow] <- paste(RD, " (", rd$conf.int[1], ", ", rd$conf.int[2], ")" sep="")#
	tryout$STICH_RD.Lower[irow] <- rd$conf.int[1]#
	tryout$STICH_RD.Upper[irow] <- rd$conf.int[2]#
	tryout$STICH_RD[irow] <- RD#
}
tryout$STICH_RD.Lower <- tryout$STICH_RD.Upper <- tryout$STICH_RD.CI <- tryout$STICH_RD <- NA#
#
for (irow in 2:nrow(tryout)){#
	dat <- tryout[irow, c("n_E", "N_E", "n_C",  "N_C")]#
	if (any(is.na(dat))) next;#
	n <- as.numeric(dat[, c("n_E", "n_C")])#
	N <- as.numeric(dat[, c("N_E", "N_C")])#
	rd <- prop.test(n, N)#
	RD <- diff(rd$estimate)#
	tryout$STICH_RD.CI[irow] <- paste(RD, " (", rd$conf.int[1], ", ", rd$conf.int[2], ")", sep="")#
	tryout$STICH_RD.Lower[irow] <- rd$conf.int[1]#
	tryout$STICH_RD.Upper[irow] <- rd$conf.int[2]#
	tryout$STICH_RD[irow] <- RD#
}
tryout
tryout$STICH_RD.Lower <- tryout$STICH_RD.Upper <- tryout$STICH_RD.CI <- tryout$STICH_RD <- NA#
#
for (irow in 2:nrow(tryout)){#
	dat <- tryout[irow, c("n_E", "N_E", "n_C",  "N_C")]#
	if (any(is.na(dat))) next;#
	n <- as.numeric(dat[, c("n_E", "n_C")])#
	N <- as.numeric(dat[, c("N_E", "N_C")])#
	rd <- prop.test(n, N)#
	dig <- 2#
	RD <- round(diff(rd$estimate), dig)#
	CI <- round(rd$conf.int, dig)#
	tryout$STICH_RD.CI[irow] <- paste(RD, " (", CI[1], ", ", CI[2], ")", sep="")#
	tryout$STICH_RD.Lower[irow] <- CI[1]#
	tryout$STICH_RD.Upper[irow] <- CI[2]#
	tryout$STICH_RD[irow] <- RD#
}
tryout
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
pdf(file=file.path(resdir, "Time_To_Randomization.pdf"))#
	at <- c(0, 8, 16, 24, 48, 72, 96)#
	hist(full.data$Ictus_to_Enrolled*24, breaks=at, xaxt='n', main="MISTIE Distribution of Time from Ictus to Randomization", freq=TRUE, xlab='Hours from Onset')#
	axis(1, at=at)#
dev.off()#
#
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
#
{#
#
	levs <- c("< 8 hrs", "8-24 hrs", "24-72 hrs", "> 72 hrs")#
	full.data$Time_to_Randomization <- NA#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 <= 8] <- levs[1]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 8 & full.data$Ictus_to_Enrolled * 24 <= 24] <- levs[2]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 24 & full.data$Ictus_to_Enrolled * 24 <= 72] <- levs[3]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 72] <- levs[3]#
}#
# levs <- c("< 1 Day","2 Day", "> 2 Days")#
# full.data$Time_To_Procedure <- NA#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure <= 1] <- levs[1]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 1 & full.data$Ictus_to_Op_Procedure <= 2] <- levs[2]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 2] <- levs[3]#
# full.data$Time_To_Procedure <- factor(full.data$Time_To_Procedure, levels= levs)#
# #
# ll <- c("Other", "African American")#
# full.data$African_American <- ll[as.numeric(full.data$Ethnicity == "African American not Hispanic") + 1]#
# full.data$African_American[full.data$Ethnicity == "Other or unknown"] <- NA#
# full.data$African_American <- factor(full.data$African_American, levels=ll)#
# full.data$Lob <- as.character(full.data$Lobar_BG_vs)#
# full.data$Lob[full.data$Lob == "Not Lobar"] <- "Deep"#
# full.data$Lob <- factor(full.data$Lob, levels= c("Lobar", "Deep"))#
# full.data$Lobar_BG_vs <- full.data$Lob#
#
full.data$ICH_Location <- full.data$Lobar_BG_vs#
#
xxfull.data <- full.data#
#Pct_Pre_10#
vname <- "Group_Assigned"#
#
full.data <-  xxfull.data#
# vname <- "Group_Assigned"#
ssub <- ""#
rvname <- vname#
vsub <- "Surgery"#
#
vars <- c("Age", "ICH_Pre_Rand_10", vname, "Enrollment_GCS_Add")#
cc <- complete.cases(full.data[, vars])#
if (any(!cc)){#
  # if ( !(full.data$patientName[!cc] %in% 289525) ) stop("Something is off about data")#
  stop("Something is off about data")#
}#
#
#### using ABC/2 From Site#
cc <- complete.cases(full.data[, vars])#
#### TAKE OUT WHEN UPDATED#
#
full.data[!cc, c("patientName", vars)]#
#
full.data <- full.data[cc, ]#
FD1 <- full.data#
### say 0 if want probs by group#
fup <- 180#
outvar <- paste("Bad_Outcome_Day_", fup, sep="")#
### Uncomment for Good outcome, comment for bad outcome#
#outvar <- gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)#
full.data[ gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)] <- full.data[, outvar] == 0#
full.data$Y <- as.numeric(full.data[, outvar] == 1)#
#full.data[, paste("Good_Outcome_Day_", fup, sep="")] <-#
# full.data[, outvar] <- NULL#
# , "Ictus_to_Proc", "Hemisphere", "Under_15cc", "African_American"#
runvars <- c("Age_Cat", "GCS_Cat", "Haematoma_volume", "Group_Assigned",  "ICH_Location", "Side_of_haematoma", "Time_to_Randomization")#
runvars <- runvars[ !runvars %in% rvname ]#
#
# else {#
# runvars <- runvars[ !runvars %in% rvname ]#
# }#
lrvar <- length(runvars)#
#
var <- vname#
mod.type <- ""#
#mod.type <- "Adj_"#
#
adder <- "Unadjusted "#
if (mod.type == "Adj_") adder <- "Adjusted "#
# all.table2 <- all.table <- c("Study or subcategory", "Surgical", "Medical", "N", "Odds Ratio (95% CI)", "Odds Ratio (95% CI)", "OR", "Lower", "Upper")#
# all.table3 <- c("Study or subcategory", "Surgical", "Medical", "N", "Risk Difference (95% CI)", "Risk Difference (95% CI)", "RD", "Lower", "Upper")#
#
all.table2 <- all.table <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "OR (95% CI)", "OR (95% CI)", "OR", "Lower", "Upper"), nrow=1)#
all.table3 <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "RD (95% CI)", "RD (95% CI)", "RD", "Lower", "Upper"), nrow=1)#
# data <- data[complete.cases(data[, c("Y", var, runvars)]),]#
#
ivar <- 1#
#
for (ivar in 1:lrvar){#
  rvar <- runvars[ivar]#
  varname <- gsub(rvar, pattern="_Cat.*", replacement="")#
  varname <- gsub(varname, pattern="_", replacement = " ")#
  all.table <- rbind(all.table, c(varname, rep(NA, ncol(all.table)-1 ) ))#
  all.table2 <- rbind(all.table2, c(varname, rep(NA, ncol(all.table2)-1 )))#
  all.table3 <- rbind(all.table3, c(varname, rep(NA, ncol(all.table3) -1)))#
  data <- full.data		#
  if (is.factor(data[, var])) {#
    ylevs <- levels(data[,var])#
  } else ylevs <- c(0, 1)		#
  data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
  vars <- c("Age", "ICH_Pre_Rand_10", "Treatment", "Enrollment_GCS_Add", "Y")#
  if (mod.type != "Adj_") vars <- c("Treatment", "Y")#
  cc <- complete.cases(data[, c(vars, rvar)])#
  data <- data[cc,]#
  levs <- levels(data[, rvar])#
  all.MH <- matrix(NA, nrow=length(levs), ncol=4)#
  print(levs)#
  ilev <- 1#
  for (ilev in 1:length(levs)){#
    inlev <- data[, rvar] == levs[ilev]#
    dat <- data[inlev,]#
    tab <- table(dat$Group_Assigned, dat$Y)#
    print(tab)#
    ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
    nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
    ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
    pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
    all.MH[ilev, 1] <- ntrt#
    all.MH[ilev, 2] <- nctrl#
    all.MH[ilev, 3] <- ptrt#
    all.MH[ilev, 4] <- pctrl#
    dat$Treatment <- dat$T0#
    mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
    smod <- summary(mod)$coeff#
    if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
    print(smod)#
    ci <- smod["Treatment", ,drop = FALSE]#
    est <- exp(ci[, "Estimate"])#
    ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
    dat$Treatment <- 1#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p1hat <- predict(mod, newdat=dat, type="response")#
    dat$Treatment <- 0#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p0hat <- predict(mod, newdat=dat, type="response")#
    Ai <- dat$T0#
    Yi <- dat$Y#
    unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    if (ptrt == 0 | pctrl == 0 | ntrt == ptrt | nctrl == pctrl){#
    	cc <- 0.5    	 #
		  x <- tab#
		  x <- x + cc#
  	    SELOGOR = sqrt(1 /( x[1,1] + cc) + 1 / (x[1,2] + cc) + #
    	                        1 / (x[2,1] +cc) + 1 / (x[2,2] +cc))#
		  OR <- x[2,2]*x[1,1]/(x[1,2]* x[2,1])#
		  log.OR <- log(OR)#
		  ## they were n good / N, so need the table#
		CI <- log.OR + c(-1, 1) * qnorm(0.975) * SELOGOR#
      unadj$OR <- OR#
      OR.CI <- exp(CI)#
      unadj$OR.CI <- OR.CI#
      unadj$SE <- SELOGOR#
		  #stop("IT")#
    }#
    unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    dig <- 2#
    all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
    all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
    all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
  }#
}#
#
rvar <- "Surgery Time"#
all.table <- rbind(all.table, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table)-1 ) ))#
all.table2 <- rbind(all.table2, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table2)-1 )))#
all.table3 <- rbind(all.table3, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table3) -1)))#
#
rvar <- "Ictus_to_Proc1"#
#
data <- full.data		#
if (is.factor(data[, var])) {#
  ylevs <- levels(data[,var])#
} else ylevs <- c(0, 1)		#
data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
#
cc <- complete.cases(full.data[, c("Y", vars, rvar)])#
data <- data[cc,]#
levs <- levels(data[, rvar])#
all.MH <- matrix(NA, nrow=length(levs)-1, ncol=4)#
print(levs)#
ilev <- 2#
#
for (ilev in 2:3){#
  inlev <- data[, rvar] %in% c("Medical", levs[ilev])#
  dat <- data[inlev,]#
  tab <- table(dat$Group_Assigned, dat$Y)#
  print(tab)#
  ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
  nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
  ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
  pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
  all.MH[ilev-1, 1] <- ntrt#
  all.MH[ilev-1, 2] <- nctrl#
  all.MH[ilev-1, 3] <- ptrt#
  all.MH[ilev-1, 4] <- pctrl#
  dat$Treatment <- dat$T0#
  mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
  smod <- summary(mod)$coeff#
  if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
  print(smod)#
  ci <- smod["Treatment", ,drop = FALSE]#
  est <- exp(ci[, "Estimate"])#
  ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
  dat$Treatment <- 1#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p1hat <- predict(mod, newdat=dat, type="response")#
  dat$Treatment <- 0#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p0hat <- predict(mod, newdat=dat, type="response")#
  Ai <- dat$T0#
  Yi <- dat$Y#
  unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  if (ptrt == 0 | pctrl == 0){#
    unadj$OR <- NA#
    unadj$OR.CI <- c(NA, NA)#
  }#
  unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  dig <- 2#
  all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
  all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
  all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
}#
all.table <- cbind(all.table, c("OR_Check", rep("", nrow(all.table)-1))) #
col <- ncol(all.table)#
cols <- all.table[1,] %in% c("Surgical", "Medical")#
#
for (irow in 2:nrow(all.table)){#
  x <- all.table[irow, cols]#
  if (is.na(x[1]) & is.na(x[2])) next#
  x <- as.numeric(unlist(strsplit(x, split="/")))#
  ## they were n good / N, so need the table#
  x <- c(x[1], x[2]-x[1], x[3], x[4] - x[3])#
  tab <- matrix(as.numeric(x), ncol=2, byrow=TRUE)#
  if (any(tab == 0)) tab <- tab + 0.5#
  ## they're in reversed order#
  all.table[irow, col] <- tab[2,2]*tab[1,1]/(tab[1,2]* tab[2,1])#
}#
xtab <- all.table#
xtab <- xtab[2:nrow(xtab), ]#
colnames(xtab) <- all.table[1,]#
xtab <- as.data.frame(xtab, stringsAsFactors=FALSE)#
xtab$OR_Check <- as.numeric(xtab$OR_Check)#
xtab$OR <- as.numeric(xtab$OR)#
keep_MIS <- which(all.table[, 1] == "Surgery Time")#
tab2 <- all.table[1:(keep_MIS-1), ]#
colnames(tab2) <- c("Category", "Surgical", "Medical", "N", "MISTIE_OR.95.CI", "Drop", "MISTIE_OR", "Lower", "Upper", "OR_Check")#
tab2 <- data.frame(tab2, stringsAsFactors=FALSE)#
tab2$Drop <- NULL
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
pdf(file=file.path(resdir, "Time_To_Randomization.pdf"))#
	at <- c(0, 8, 16, 24, 48, 72, 96)#
	hist(full.data$Ictus_to_Enrolled*24, breaks=at, xaxt='n', main="MISTIE Distribution of Time from Ictus to Randomization", freq=TRUE, xlab='Hours from Onset')#
	axis(1, at=at)#
dev.off()#
#
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
#
{#
#
	levs <- c("< 8 hrs", "8-24 hrs", "24-72 hrs", "> 72 hrs")#
	full.data$Time_to_Randomization <- NA#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 <= 8] <- levs[1]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 8 & full.data$Ictus_to_Enrolled * 24 <= 24] <- levs[2]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 24 & full.data$Ictus_to_Enrolled * 24 <= 72] <- levs[3]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 72] <- levs[3]#
}#
# levs <- c("< 1 Day","2 Day", "> 2 Days")#
# full.data$Time_To_Procedure <- NA#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure <= 1] <- levs[1]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 1 & full.data$Ictus_to_Op_Procedure <= 2] <- levs[2]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 2] <- levs[3]#
# full.data$Time_To_Procedure <- factor(full.data$Time_To_Procedure, levels= levs)#
# #
# ll <- c("Other", "African American")#
# full.data$African_American <- ll[as.numeric(full.data$Ethnicity == "African American not Hispanic") + 1]#
# full.data$African_American[full.data$Ethnicity == "Other or unknown"] <- NA#
# full.data$African_American <- factor(full.data$African_American, levels=ll)#
# full.data$Lob <- as.character(full.data$Lobar_BG_vs)#
# full.data$Lob[full.data$Lob == "Not Lobar"] <- "Deep"#
# full.data$Lob <- factor(full.data$Lob, levels= c("Lobar", "Deep"))#
# full.data$Lobar_BG_vs <- full.data$Lob#
#
full.data$ICH_Location <- full.data$Lobar_BG_vs#
#
xxfull.data <- full.data#
#Pct_Pre_10#
vname <- "Group_Assigned"#
#
full.data <-  xxfull.data#
# vname <- "Group_Assigned"#
ssub <- ""#
rvname <- vname#
vsub <- "Surgery"#
#
vars <- c("Age", "ICH_Pre_Rand_10", vname, "Enrollment_GCS_Add")#
cc <- complete.cases(full.data[, vars])#
if (any(!cc)){#
  # if ( !(full.data$patientName[!cc] %in% 289525) ) stop("Something is off about data")#
  stop("Something is off about data")#
}#
#
#### using ABC/2 From Site#
cc <- complete.cases(full.data[, vars])#
#### TAKE OUT WHEN UPDATED#
#
full.data[!cc, c("patientName", vars)]#
#
full.data <- full.data[cc, ]#
FD1 <- full.data#
### say 0 if want probs by group#
fup <- 180#
outvar <- paste("Bad_Outcome_Day_", fup, sep="")#
### Uncomment for Good outcome, comment for bad outcome#
#outvar <- gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)#
full.data[ gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)] <- full.data[, outvar] == 0#
full.data$Y <- as.numeric(full.data[, outvar] == 1)#
#full.data[, paste("Good_Outcome_Day_", fup, sep="")] <-#
# full.data[, outvar] <- NULL#
# , "Ictus_to_Proc", "Hemisphere", "Under_15cc", "African_American"#
runvars <- c("Age_Cat", "GCS_Cat", "Haematoma_volume", "Group_Assigned",  "ICH_Location", "Side_of_haematoma", "Time_to_Randomization")#
runvars <- runvars[ !runvars %in% rvname ]#
#
# else {#
# runvars <- runvars[ !runvars %in% rvname ]#
# }#
lrvar <- length(runvars)#
#
var <- vname#
mod.type <- ""#
#mod.type <- "Adj_"#
#
adder <- "Unadjusted "#
if (mod.type == "Adj_") adder <- "Adjusted "#
# all.table2 <- all.table <- c("Study or subcategory", "Surgical", "Medical", "N", "Odds Ratio (95% CI)", "Odds Ratio (95% CI)", "OR", "Lower", "Upper")#
# all.table3 <- c("Study or subcategory", "Surgical", "Medical", "N", "Risk Difference (95% CI)", "Risk Difference (95% CI)", "RD", "Lower", "Upper")#
#
all.table2 <- all.table <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "OR (95% CI)", "OR (95% CI)", "OR", "Lower", "Upper"), nrow=1)#
all.table3 <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "RD (95% CI)", "RD (95% CI)", "RD", "Lower", "Upper"), nrow=1)#
# data <- data[complete.cases(data[, c("Y", var, runvars)]),]#
#
ivar <- 1#
#
for (ivar in 1:lrvar){#
  rvar <- runvars[ivar]#
  varname <- gsub(rvar, pattern="_Cat.*", replacement="")#
  varname <- gsub(varname, pattern="_", replacement = " ")#
  all.table <- rbind(all.table, c(varname, rep(NA, ncol(all.table)-1 ) ))#
  all.table2 <- rbind(all.table2, c(varname, rep(NA, ncol(all.table2)-1 )))#
  all.table3 <- rbind(all.table3, c(varname, rep(NA, ncol(all.table3) -1)))#
  data <- full.data		#
  if (is.factor(data[, var])) {#
    ylevs <- levels(data[,var])#
  } else ylevs <- c(0, 1)		#
  data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
  vars <- c("Age", "ICH_Pre_Rand_10", "Treatment", "Enrollment_GCS_Add", "Y")#
  if (mod.type != "Adj_") vars <- c("Treatment", "Y")#
  cc <- complete.cases(data[, c(vars, rvar)])#
  data <- data[cc,]#
  levs <- levels(data[, rvar])#
  # all.MH <- matrix(NA, nrow=length(levs), ncol=4)#
  print(levs)#
  ilev <- 1#
  for (ilev in 1:length(levs)){#
    inlev <- data[, rvar] == levs[ilev]#
    dat <- data[inlev,]#
    tab <- table(dat$Group_Assigned, dat$Y)#
    print(tab)#
    ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
    nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
    ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
    pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
    # all.MH[ilev, 1] <- ntrt#
    # all.MH[ilev, 2] <- nctrl#
    # all.MH[ilev, 3] <- ptrt#
    # all.MH[ilev, 4] <- pctrl#
    dat$Treatment <- dat$T0#
    mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
    smod <- summary(mod)$coeff#
    if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
    print(smod)#
    ci <- smod["Treatment", ,drop = FALSE]#
    est <- exp(ci[, "Estimate"])#
    ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
    dat$Treatment <- 1#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p1hat <- predict(mod, newdat=dat, type="response")#
    dat$Treatment <- 0#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p0hat <- predict(mod, newdat=dat, type="response")#
    Ai <- dat$T0#
    Yi <- dat$Y#
    unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    if (ptrt == 0 | pctrl == 0 | ntrt == ptrt | nctrl == pctrl){#
    	cc <- 0.5    	 #
		  x <- tab#
		  x <- x + cc#
  	    SELOGOR = sqrt(1 /( x[1,1] + cc) + 1 / (x[1,2] + cc) + #
    	                        1 / (x[2,1] +cc) + 1 / (x[2,2] +cc))#
		  OR <- x[2,2]*x[1,1]/(x[1,2]* x[2,1])#
		  log.OR <- log(OR)#
		  ## they were n good / N, so need the table#
		CI <- log.OR + c(-1, 1) * qnorm(0.975) * SELOGOR#
      unadj$OR <- OR#
      OR.CI <- exp(CI)#
      unadj$OR.CI <- OR.CI#
      unadj$SE <- SELOGOR#
		  #stop("IT")#
    }#
    unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    dig <- 2#
    all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
    all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
    all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
  }#
}#
#
rvar <- "Surgery Time"#
all.table <- rbind(all.table, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table)-1 ) ))#
all.table2 <- rbind(all.table2, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table2)-1 )))#
all.table3 <- rbind(all.table3, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table3) -1)))#
#
rvar <- "Ictus_to_Proc1"#
#
data <- full.data		#
if (is.factor(data[, var])) {#
  ylevs <- levels(data[,var])#
} else ylevs <- c(0, 1)		#
data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
#
cc <- complete.cases(full.data[, c("Y", vars, rvar)])#
data <- data[cc,]#
levs <- levels(data[, rvar])#
# all.MH <- matrix(NA, nrow=length(levs)-1, ncol=4)#
print(levs)#
ilev <- 2#
#
for (ilev in 2:3){#
  inlev <- data[, rvar] %in% c("Medical", levs[ilev])#
  dat <- data[inlev,]#
  tab <- table(dat$Group_Assigned, dat$Y)#
  print(tab)#
  ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
  nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
  ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
  pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
  # all.MH[ilev-1, 1] <- ntrt#
  # all.MH[ilev-1, 2] <- nctrl#
  # all.MH[ilev-1, 3] <- ptrt#
  # all.MH[ilev-1, 4] <- pctrl#
  dat$Treatment <- dat$T0#
  mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
  smod <- summary(mod)$coeff#
  if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
  print(smod)#
  ci <- smod["Treatment", ,drop = FALSE]#
  est <- exp(ci[, "Estimate"])#
  ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
  dat$Treatment <- 1#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p1hat <- predict(mod, newdat=dat, type="response")#
  dat$Treatment <- 0#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p0hat <- predict(mod, newdat=dat, type="response")#
  Ai <- dat$T0#
  Yi <- dat$Y#
  unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  if (ptrt == 0 | pctrl == 0){#
    unadj$OR <- NA#
    unadj$OR.CI <- c(NA, NA)#
  }#
  unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  dig <- 2#
  all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
  all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
  all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
}#
all.table <- cbind(all.table, c("OR_Check", rep("", nrow(all.table)-1))) #
col <- ncol(all.table)#
cols <- all.table[1,] %in% c("Surgical", "Medical")#
#
for (irow in 2:nrow(all.table)){#
  x <- all.table[irow, cols]#
  if (is.na(x[1]) & is.na(x[2])) next#
  x <- as.numeric(unlist(strsplit(x, split="/")))#
  ## they were n good / N, so need the table#
  x <- c(x[1], x[2]-x[1], x[3], x[4] - x[3])#
  tab <- matrix(as.numeric(x), ncol=2, byrow=TRUE)#
  if (any(tab == 0)) tab <- tab + 0.5#
  ## they're in reversed order#
  all.table[irow, col] <- tab[2,2]*tab[1,1]/(tab[1,2]* tab[2,1])#
}#
xtab <- all.table#
xtab <- xtab[2:nrow(xtab), ]#
colnames(xtab) <- all.table[1,]#
xtab <- as.data.frame(xtab, stringsAsFactors=FALSE)#
xtab$OR_Check <- as.numeric(xtab$OR_Check)#
xtab$OR <- as.numeric(xtab$OR)#
keep_MIS <- which(all.table[, 1] == "Surgery Time")#
tab2 <- all.table[1:(keep_MIS-1), ]#
colnames(tab2) <- c("Category", "Surgical", "Medical", "N", "MISTIE_OR.95.CI", "Drop", "MISTIE_OR", "Lower", "Upper", "OR_Check")#
tab2 <- data.frame(tab2, stringsAsFactors=FALSE)#
tab2$Drop <- NULL
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
pdf(file=file.path(resdir, "Time_To_Randomization.pdf"))#
	at <- c(0, 8, 16, 24, 48, 72, 96)#
	hist(full.data$Ictus_to_Enrolled*24, breaks=at, xaxt='n', main="MISTIE Distribution of Time from Ictus to Randomization", prob=TRUE, xlab='Hours from Onset')#
	axis(1, at=at)#
dev.off()
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
#
{#
#
	levs <- c("< 8 hrs", "8-24 hrs", "24-72 hrs", "> 72 hrs")#
	full.data$Time_to_Randomization <- NA#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 <= 8] <- levs[1]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 8 & full.data$Ictus_to_Enrolled * 24 <= 24] <- levs[2]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 24 & full.data$Ictus_to_Enrolled * 24 <= 72] <- levs[3]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 72] <- levs[3]#
}#
# levs <- c("< 1 Day","2 Day", "> 2 Days")#
# full.data$Time_To_Procedure <- NA#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure <= 1] <- levs[1]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 1 & full.data$Ictus_to_Op_Procedure <= 2] <- levs[2]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 2] <- levs[3]#
# full.data$Time_To_Procedure <- factor(full.data$Time_To_Procedure, levels= levs)#
# #
# ll <- c("Other", "African American")#
# full.data$African_American <- ll[as.numeric(full.data$Ethnicity == "African American not Hispanic") + 1]#
# full.data$African_American[full.data$Ethnicity == "Other or unknown"] <- NA#
# full.data$African_American <- factor(full.data$African_American, levels=ll)#
# full.data$Lob <- as.character(full.data$Lobar_BG_vs)#
# full.data$Lob[full.data$Lob == "Not Lobar"] <- "Deep"#
# full.data$Lob <- factor(full.data$Lob, levels= c("Lobar", "Deep"))#
# full.data$Lobar_BG_vs <- full.data$Lob#
#
full.data$ICH_Location <- full.data$Lobar_BG_vs#
#
xxfull.data <- full.data#
#Pct_Pre_10#
vname <- "Group_Assigned"#
#
full.data <-  xxfull.data#
# vname <- "Group_Assigned"#
ssub <- ""#
rvname <- vname#
vsub <- "Surgery"#
#
vars <- c("Age", "ICH_Pre_Rand_10", vname, "Enrollment_GCS_Add")#
cc <- complete.cases(full.data[, vars])#
if (any(!cc)){#
  # if ( !(full.data$patientName[!cc] %in% 289525) ) stop("Something is off about data")#
  stop("Something is off about data")#
}#
#
#### using ABC/2 From Site#
cc <- complete.cases(full.data[, vars])#
#### TAKE OUT WHEN UPDATED#
#
full.data[!cc, c("patientName", vars)]#
#
full.data <- full.data[cc, ]#
FD1 <- full.data#
### say 0 if want probs by group#
fup <- 180#
outvar <- paste("Bad_Outcome_Day_", fup, sep="")#
### Uncomment for Good outcome, comment for bad outcome#
#outvar <- gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)#
full.data[ gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)] <- full.data[, outvar] == 0#
full.data$Y <- as.numeric(full.data[, outvar] == 1)#
#full.data[, paste("Good_Outcome_Day_", fup, sep="")] <-#
# full.data[, outvar] <- NULL#
# , "Ictus_to_Proc", "Hemisphere", "Under_15cc", "African_American"#
runvars <- c("Age_Cat", "GCS_Cat", "Haematoma_volume", "Group_Assigned",  "ICH_Location", "Side_of_haematoma", "Time_to_Randomization")#
runvars <- runvars[ !runvars %in% rvname ]#
#
# else {#
# runvars <- runvars[ !runvars %in% rvname ]#
# }#
lrvar <- length(runvars)#
#
var <- vname#
mod.type <- ""#
#mod.type <- "Adj_"#
#
adder <- "Unadjusted "#
if (mod.type == "Adj_") adder <- "Adjusted "#
# all.table2 <- all.table <- c("Study or subcategory", "Surgical", "Medical", "N", "Odds Ratio (95% CI)", "Odds Ratio (95% CI)", "OR", "Lower", "Upper")#
# all.table3 <- c("Study or subcategory", "Surgical", "Medical", "N", "Risk Difference (95% CI)", "Risk Difference (95% CI)", "RD", "Lower", "Upper")#
#
all.table2 <- all.table <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "OR (95% CI)", "OR (95% CI)", "OR", "Lower", "Upper"), nrow=1)#
all.table3 <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "RD (95% CI)", "RD (95% CI)", "RD", "Lower", "Upper"), nrow=1)#
# data <- data[complete.cases(data[, c("Y", var, runvars)]),]#
#
ivar <- 1#
#
for (ivar in 1:lrvar){#
  rvar <- runvars[ivar]#
  varname <- gsub(rvar, pattern="_Cat.*", replacement="")#
  varname <- gsub(varname, pattern="_", replacement = " ")#
  all.table <- rbind(all.table, c(varname, rep(NA, ncol(all.table)-1 ) ))#
  all.table2 <- rbind(all.table2, c(varname, rep(NA, ncol(all.table2)-1 )))#
  all.table3 <- rbind(all.table3, c(varname, rep(NA, ncol(all.table3) -1)))#
  data <- full.data		#
  if (is.factor(data[, var])) {#
    ylevs <- levels(data[,var])#
  } else ylevs <- c(0, 1)		#
  data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
  vars <- c("Age", "ICH_Pre_Rand_10", "Treatment", "Enrollment_GCS_Add", "Y")#
  if (mod.type != "Adj_") vars <- c("Treatment", "Y")#
  cc <- complete.cases(data[, c(vars, rvar)])#
  data <- data[cc,]#
  levs <- levels(data[, rvar])#
  # all.MH <- matrix(NA, nrow=length(levs), ncol=4)#
  print(levs)#
  ilev <- 1#
  for (ilev in 1:length(levs)){#
    inlev <- data[, rvar] == levs[ilev]#
    dat <- data[inlev,]#
    tab <- table(dat$Group_Assigned, dat$Y)#
    print(tab)#
    ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
    nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
    ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
    pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
    # all.MH[ilev, 1] <- ntrt#
    # all.MH[ilev, 2] <- nctrl#
    # all.MH[ilev, 3] <- ptrt#
    # all.MH[ilev, 4] <- pctrl#
    dat$Treatment <- dat$T0#
    mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
    smod <- summary(mod)$coeff#
    if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
    print(smod)#
    ci <- smod["Treatment", ,drop = FALSE]#
    est <- exp(ci[, "Estimate"])#
    ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
    dat$Treatment <- 1#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p1hat <- predict(mod, newdat=dat, type="response")#
    dat$Treatment <- 0#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p0hat <- predict(mod, newdat=dat, type="response")#
    Ai <- dat$T0#
    Yi <- dat$Y#
    unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    if (ptrt == 0 | pctrl == 0 | ntrt == ptrt | nctrl == pctrl){#
    	cc <- 0.5    	 #
		  x <- tab#
		  x <- x + cc#
  	    SELOGOR = sqrt(1 /( x[1,1] + cc) + 1 / (x[1,2] + cc) + #
    	                        1 / (x[2,1] +cc) + 1 / (x[2,2] +cc))#
		  OR <- x[2,2]*x[1,1]/(x[1,2]* x[2,1])#
		  log.OR <- log(OR)#
		  ## they were n good / N, so need the table#
		CI <- log.OR + c(-1, 1) * qnorm(0.975) * SELOGOR#
      unadj$OR <- OR#
      OR.CI <- exp(CI)#
      unadj$OR.CI <- OR.CI#
      unadj$SE <- SELOGOR#
		  #stop("IT")#
    }#
    unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    dig <- 2#
    all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
    all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
    all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
  }#
}#
#
rvar <- "Surgery Time"#
all.table <- rbind(all.table, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table)-1 ) ))#
all.table2 <- rbind(all.table2, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table2)-1 )))#
all.table3 <- rbind(all.table3, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table3) -1)))#
#
rvar <- "Ictus_to_Proc1"#
#
data <- full.data		#
if (is.factor(data[, var])) {#
  ylevs <- levels(data[,var])#
} else ylevs <- c(0, 1)		#
data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
#
cc <- complete.cases(full.data[, c("Y", vars, rvar)])#
data <- data[cc,]#
levs <- levels(data[, rvar])#
# all.MH <- matrix(NA, nrow=length(levs)-1, ncol=4)#
print(levs)#
ilev <- 2#
#
for (ilev in 2:3){#
  inlev <- data[, rvar] %in% c("Medical", levs[ilev])#
  dat <- data[inlev,]#
  tab <- table(dat$Group_Assigned, dat$Y)#
  print(tab)#
  ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
  nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
  ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
  pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
  # all.MH[ilev-1, 1] <- ntrt#
  # all.MH[ilev-1, 2] <- nctrl#
  # all.MH[ilev-1, 3] <- ptrt#
  # all.MH[ilev-1, 4] <- pctrl#
  dat$Treatment <- dat$T0#
  mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
  smod <- summary(mod)$coeff#
  if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
  print(smod)#
  ci <- smod["Treatment", ,drop = FALSE]#
  est <- exp(ci[, "Estimate"])#
  ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
  dat$Treatment <- 1#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p1hat <- predict(mod, newdat=dat, type="response")#
  dat$Treatment <- 0#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p0hat <- predict(mod, newdat=dat, type="response")#
  Ai <- dat$T0#
  Yi <- dat$Y#
  unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  if (ptrt == 0 | pctrl == 0){#
    unadj$OR <- NA#
    unadj$OR.CI <- c(NA, NA)#
  }#
  unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  dig <- 2#
  all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
  all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
  all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
}
all.table <- cbind(all.table, c("OR_Check", rep("", nrow(all.table)-1))) #
col <- ncol(all.table)#
cols <- all.table[1,] %in% c("Surgical", "Medical")#
#
for (irow in 2:nrow(all.table)){#
  x <- all.table[irow, cols]#
  if (is.na(x[1]) & is.na(x[2])) next#
  x <- as.numeric(unlist(strsplit(x, split="/")))#
  ## they were n good / N, so need the table#
  x <- c(x[1], x[2]-x[1], x[3], x[4] - x[3])#
  tab <- matrix(as.numeric(x), ncol=2, byrow=TRUE)#
  if (any(tab == 0)) tab <- tab + 0.5#
  ## they're in reversed order#
  all.table[irow, col] <- tab[2,2]*tab[1,1]/(tab[1,2]* tab[2,1])#
}#
xtab <- all.table#
xtab <- xtab[2:nrow(xtab), ]#
colnames(xtab) <- all.table[1,]#
xtab <- as.data.frame(xtab, stringsAsFactors=FALSE)#
xtab$OR_Check <- as.numeric(xtab$OR_Check)#
xtab$OR <- as.numeric(xtab$OR)#
keep_MIS <- which(all.table[, 1] == "Surgery Time")#
tab2 <- all.table[1:(keep_MIS-1), ]#
colnames(tab2) <- c("Category", "Surgical", "Medical", "N", "MISTIE_OR.95.CI", "Drop", "MISTIE_OR", "Lower", "Upper", "OR_Check")#
tab2 <- data.frame(tab2, stringsAsFactors=FALSE)#
tab2$Drop <- NULL#
tryout <- merge(stich_data, tab2, by="Category", sort=FALSE, all=TRUE)#
#
for (icol in c("N_C", "n_C", "N_E", "n_E")) tryout[, icol] <- as.numeric(tryout[, icol])#
#
tryout$STICH_N <- tryout$N_C + tryout$N_E#
#tryout$n_C <- tryout$N_C <-tryout$N_E <-tryout$n_E <-NULL#
tryout$OR_Check <- NULL#
#
tryout$STICH_RD.Lower <- tryout$STICH_RD.Upper <- tryout$STICH_RD.CI <- tryout$STICH_RD <- NA#
#
for (irow in 2:nrow(tryout)){#
	dat <- tryout[irow, c("n_E", "N_E", "n_C",  "N_C")]#
	if (any(is.na(dat))) next;#
	n <- as.numeric(dat[, c("n_E", "n_C")])#
	N <- as.numeric(dat[, c("N_E", "N_C")])#
	rd <- prop.test(n, N)#
	dig <- 2#
	RD <- round(diff(rd$estimate), dig)#
	CI <- round(rd$conf.int, dig)#
	tryout$STICH_RD.CI[irow] <- paste(RD, " (", CI[1], ", ", CI[2], ")", sep="")#
	tryout$STICH_RD.Lower[irow] <- CI[1]#
	tryout$STICH_RD.Upper[irow] <- CI[2]#
	tryout$STICH_RD[irow] <- RD#
}
tryout
tryout$Category
levels(full.data$Age)
levels(full.data$Age_Cat)
stich_data
"Time to Randomization"
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
pdf(file=file.path(resdir, "Time_To_Randomization.pdf"))#
	at <- c(0, 8, 16, 24, 48, 72, 96)#
	hist(full.data$Ictus_to_Enrolled*24, breaks=at, xaxt='n', main="MISTIE Distribution of Time from Ictus to Randomization", prob=TRUE, xlab='Hours from Onset')#
	axis(1, at=at)#
dev.off()#
#
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
#
{#
#
	levs <- c("< 8 hrs", "8-24 hrs", "24-72 hrs", "> 72 hrs")#
	full.data$Time_to_Randomization <- NA#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 <= 8] <- levs[1]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 8 & full.data$Ictus_to_Enrolled * 24 <= 24] <- levs[2]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 24 & full.data$Ictus_to_Enrolled * 24 <= 72] <- levs[3]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 72] <- levs[3]#
}#
# levs <- c("< 1 Day","2 Day", "> 2 Days")#
# full.data$Time_To_Procedure <- NA#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure <= 1] <- levs[1]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 1 & full.data$Ictus_to_Op_Procedure <= 2] <- levs[2]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 2] <- levs[3]#
# full.data$Time_To_Procedure <- factor(full.data$Time_To_Procedure, levels= levs)#
# #
# ll <- c("Other", "African American")#
# full.data$African_American <- ll[as.numeric(full.data$Ethnicity == "African American not Hispanic") + 1]#
# full.data$African_American[full.data$Ethnicity == "Other or unknown"] <- NA#
# full.data$African_American <- factor(full.data$African_American, levels=ll)#
# full.data$Lob <- as.character(full.data$Lobar_BG_vs)#
# full.data$Lob[full.data$Lob == "Not Lobar"] <- "Deep"#
# full.data$Lob <- factor(full.data$Lob, levels= c("Lobar", "Deep"))#
# full.data$Lobar_BG_vs <- full.data$Lob#
#
full.data$ICH_Location <- full.data$Lobar_BG_vs#
#
xxfull.data <- full.data#
#Pct_Pre_10#
vname <- "Group_Assigned"#
#
full.data <-  xxfull.data#
# vname <- "Group_Assigned"#
ssub <- ""#
rvname <- vname#
vsub <- "Surgery"#
#
vars <- c("Age", "ICH_Pre_Rand_10", vname, "Enrollment_GCS_Add")#
cc <- complete.cases(full.data[, vars])#
if (any(!cc)){#
  # if ( !(full.data$patientName[!cc] %in% 289525) ) stop("Something is off about data")#
  stop("Something is off about data")#
}#
#
#### using ABC/2 From Site#
cc <- complete.cases(full.data[, vars])#
#### TAKE OUT WHEN UPDATED#
#
full.data[!cc, c("patientName", vars)]#
#
full.data <- full.data[cc, ]#
FD1 <- full.data#
### say 0 if want probs by group#
fup <- 180#
outvar <- paste("Bad_Outcome_Day_", fup, sep="")#
### Uncomment for Good outcome, comment for bad outcome#
#outvar <- gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)#
full.data[ gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)] <- full.data[, outvar] == 0#
full.data$Y <- as.numeric(full.data[, outvar] == 1)#
#full.data[, paste("Good_Outcome_Day_", fup, sep="")] <-#
# full.data[, outvar] <- NULL#
# , "Ictus_to_Proc", "Hemisphere", "Under_15cc", "African_American"#
runvars <- c("Age_Cat", "GCS_Cat", "Haematoma_volume", "Group_Assigned",  "ICH_Location", "Side_of_haematoma", "Time_to_Randomization")#
runvars <- runvars[ !runvars %in% rvname ]#
#
# else {#
# runvars <- runvars[ !runvars %in% rvname ]#
# }#
lrvar <- length(runvars)#
#
var <- vname#
mod.type <- ""#
#mod.type <- "Adj_"#
#
adder <- "Unadjusted "#
if (mod.type == "Adj_") adder <- "Adjusted "#
# all.table2 <- all.table <- c("Study or subcategory", "Surgical", "Medical", "N", "Odds Ratio (95% CI)", "Odds Ratio (95% CI)", "OR", "Lower", "Upper")#
# all.table3 <- c("Study or subcategory", "Surgical", "Medical", "N", "Risk Difference (95% CI)", "Risk Difference (95% CI)", "RD", "Lower", "Upper")#
#
all.table2 <- all.table <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "OR (95% CI)", "OR (95% CI)", "OR", "Lower", "Upper"), nrow=1)#
all.table3 <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "RD (95% CI)", "RD (95% CI)", "RD", "Lower", "Upper"), nrow=1)#
# data <- data[complete.cases(data[, c("Y", var, runvars)]),]#
#
ivar <- 1#
#
for (ivar in 1:lrvar){#
  rvar <- runvars[ivar]#
  varname <- gsub(rvar, pattern="_Cat.*", replacement="")#
  varname <- gsub(varname, pattern="_", replacement = " ")#
  all.table <- rbind(all.table, c(varname, rep(NA, ncol(all.table)-1 ) ))#
  all.table2 <- rbind(all.table2, c(varname, rep(NA, ncol(all.table2)-1 )))#
  all.table3 <- rbind(all.table3, c(varname, rep(NA, ncol(all.table3) -1)))#
  data <- full.data		#
  if (is.factor(data[, var])) {#
    ylevs <- levels(data[,var])#
  } else ylevs <- c(0, 1)		#
  data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
  vars <- c("Age", "ICH_Pre_Rand_10", "Treatment", "Enrollment_GCS_Add", "Y")#
  if (mod.type != "Adj_") vars <- c("Treatment", "Y")#
  cc <- complete.cases(data[, c(vars, rvar)])#
  data <- data[cc,]#
  levs <- levels(data[, rvar])#
  # all.MH <- matrix(NA, nrow=length(levs), ncol=4)#
  print(levs)#
  ilev <- 1#
  for (ilev in 1:length(levs)){#
    inlev <- data[, rvar] == levs[ilev]#
    dat <- data[inlev,]#
    tab <- table(dat$Group_Assigned, dat$Y)#
    print(tab)#
    ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
    nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
    ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
    pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
    # all.MH[ilev, 1] <- ntrt#
    # all.MH[ilev, 2] <- nctrl#
    # all.MH[ilev, 3] <- ptrt#
    # all.MH[ilev, 4] <- pctrl#
    dat$Treatment <- dat$T0#
    mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
    smod <- summary(mod)$coeff#
    if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
    print(smod)#
    ci <- smod["Treatment", ,drop = FALSE]#
    est <- exp(ci[, "Estimate"])#
    ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
    dat$Treatment <- 1#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p1hat <- predict(mod, newdat=dat, type="response")#
    dat$Treatment <- 0#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p0hat <- predict(mod, newdat=dat, type="response")#
    Ai <- dat$T0#
    Yi <- dat$Y#
    unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    if (ptrt == 0 | pctrl == 0 | ntrt == ptrt | nctrl == pctrl){#
    	cc <- 0.5    	 #
		  x <- tab#
		  x <- x + cc#
  	    SELOGOR = sqrt(1 /( x[1,1] + cc) + 1 / (x[1,2] + cc) + #
    	                        1 / (x[2,1] +cc) + 1 / (x[2,2] +cc))#
		  OR <- x[2,2]*x[1,1]/(x[1,2]* x[2,1])#
		  log.OR <- log(OR)#
		  ## they were n good / N, so need the table#
		CI <- log.OR + c(-1, 1) * qnorm(0.975) * SELOGOR#
      unadj$OR <- OR#
      OR.CI <- exp(CI)#
      unadj$OR.CI <- OR.CI#
      unadj$SE <- SELOGOR#
		  #stop("IT")#
    }#
    unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    dig <- 2#
    all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
    all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
    all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
  }#
}#
#
rvar <- "Surgery Time"#
all.table <- rbind(all.table, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table)-1 ) ))#
all.table2 <- rbind(all.table2, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table2)-1 )))#
all.table3 <- rbind(all.table3, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table3) -1)))#
#
rvar <- "Ictus_to_Proc1"#
#
data <- full.data		#
if (is.factor(data[, var])) {#
  ylevs <- levels(data[,var])#
} else ylevs <- c(0, 1)		#
data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
#
cc <- complete.cases(full.data[, c("Y", vars, rvar)])#
data <- data[cc,]#
levs <- levels(data[, rvar])#
# all.MH <- matrix(NA, nrow=length(levs)-1, ncol=4)#
print(levs)#
ilev <- 2#
#
for (ilev in 2:3){#
  inlev <- data[, rvar] %in% c("Medical", levs[ilev])#
  dat <- data[inlev,]#
  tab <- table(dat$Group_Assigned, dat$Y)#
  print(tab)#
  ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
  nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
  ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
  pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
  # all.MH[ilev-1, 1] <- ntrt#
  # all.MH[ilev-1, 2] <- nctrl#
  # all.MH[ilev-1, 3] <- ptrt#
  # all.MH[ilev-1, 4] <- pctrl#
  dat$Treatment <- dat$T0#
  mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
  smod <- summary(mod)$coeff#
  if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
  print(smod)#
  ci <- smod["Treatment", ,drop = FALSE]#
  est <- exp(ci[, "Estimate"])#
  ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
  dat$Treatment <- 1#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p1hat <- predict(mod, newdat=dat, type="response")#
  dat$Treatment <- 0#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p0hat <- predict(mod, newdat=dat, type="response")#
  Ai <- dat$T0#
  Yi <- dat$Y#
  unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  if (ptrt == 0 | pctrl == 0){#
    unadj$OR <- NA#
    unadj$OR.CI <- c(NA, NA)#
  }#
  unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  dig <- 2#
  all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
  all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
  all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
}#
all.table <- cbind(all.table, c("OR_Check", rep("", nrow(all.table)-1))) #
col <- ncol(all.table)#
cols <- all.table[1,] %in% c("Surgical", "Medical")#
#
for (irow in 2:nrow(all.table)){#
  x <- all.table[irow, cols]#
  if (is.na(x[1]) & is.na(x[2])) next#
  x <- as.numeric(unlist(strsplit(x, split="/")))#
  ## they were n good / N, so need the table#
  x <- c(x[1], x[2]-x[1], x[3], x[4] - x[3])#
  tab <- matrix(as.numeric(x), ncol=2, byrow=TRUE)#
  if (any(tab == 0)) tab <- tab + 0.5#
  ## they're in reversed order#
  all.table[irow, col] <- tab[2,2]*tab[1,1]/(tab[1,2]* tab[2,1])#
}#
xtab <- all.table#
xtab <- xtab[2:nrow(xtab), ]#
colnames(xtab) <- all.table[1,]#
xtab <- as.data.frame(xtab, stringsAsFactors=FALSE)#
xtab$OR_Check <- as.numeric(xtab$OR_Check)#
xtab$OR <- as.numeric(xtab$OR)#
keep_MIS <- which(all.table[, 1] == "Surgery Time")#
tab2 <- all.table[1:(keep_MIS-1), ]#
colnames(tab2) <- c("Category", "Surgical", "Medical", "N", "MISTIE_OR.95.CI", "Drop", "MISTIE_OR", "Lower", "Upper", "OR_Check")#
tab2 <- data.frame(tab2, stringsAsFactors=FALSE)#
tab2$Drop <- NULL#
tryout <- merge(stich_data, tab2, by="Category", sort=FALSE, all=TRUE)#
#
for (icol in c("N_C", "n_C", "N_E", "n_E")) tryout[, icol] <- as.numeric(tryout[, icol])#
#
tryout$STICH_N <- tryout$N_C + tryout$N_E#
#tryout$n_C <- tryout$N_C <-tryout$N_E <-tryout$n_E <-NULL#
tryout$OR_Check <- NULL#
#
tryout$STICH_RD.Lower <- tryout$STICH_RD.Upper <- tryout$STICH_RD.CI <- tryout$STICH_RD <- NA#
#
for (irow in 2:nrow(tryout)){#
	dat <- tryout[irow, c("n_E", "N_E", "n_C",  "N_C")]#
	if (any(is.na(dat))) next;#
	n <- as.numeric(dat[, c("n_E", "n_C")])#
	N <- as.numeric(dat[, c("N_E", "N_C")])#
	rd <- prop.test(n, N)#
	dig <- 2#
	RD <- round(diff(rd$estimate), dig)#
	CI <- round(rd$conf.int, dig)#
	tryout$STICH_RD.CI[irow] <- paste(RD, " (", CI[1], ", ", CI[2], ")", sep="")#
	tryout$STICH_RD.Lower[irow] <- CI[1]#
	tryout$STICH_RD.Upper[irow] <- CI[2]#
	tryout$STICH_RD[irow] <- RD#
}#
cats <- c("Study or subcategory", "Age", levels(full.data$Age_Cat), "GCS", levels(full.data$GCS_Cat), "Side of haematoma", levels(full.data$Side_of_haematoma), c("Site of haematoma"), levels(full.data$ICH_Location), "Haematoma volume", levels(full.data$Haematoma_volume), "Time to Randomization", "< 8 hrs", "24-72 hrs", "> 72 hrs")
tryout
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
pdf(file=file.path(resdir, "Time_To_Randomization.pdf"))#
	at <- c(0, 8, 16, 24, 48, 72, 96)#
	hist(full.data$Ictus_to_Enrolled*24, breaks=at, xaxt='n', main="MISTIE Distribution of Time from Ictus to Randomization", prob=TRUE, xlab='Hours from Onset')#
	axis(1, at=at)#
dev.off()#
#
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
#
{#
#
	levs <- c("< 8 hrs", "8-24 hrs", "24-72 hrs", "> 72 hrs")#
	full.data$Time_to_Randomization <- NA#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 <= 8] <- levs[1]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 8 & full.data$Ictus_to_Enrolled * 24 <= 24] <- levs[2]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 24 & full.data$Ictus_to_Enrolled * 24 <= 72] <- levs[3]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 72] <- levs[3]#
}#
    table(full.data$Time_to_Randomization)
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
pdf(file=file.path(resdir, "Time_To_Randomization.pdf"))#
	at <- c(0, 8, 16, 24, 48, 72, 96)#
	hist(full.data$Ictus_to_Enrolled*24, breaks=at, xaxt='n', main="MISTIE Distribution of Time from Ictus to Randomization", prob=TRUE, xlab='Hours from Onset')#
	axis(1, at=at)#
dev.off()#
#
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
#
{#
#
	levs <- c("< 8 hrs", "8-24 hrs", "24-72 hrs", "> 72 hrs")#
	full.data$Time_to_Randomization <- NA#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 <= 8] <- levs[1]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 8 & full.data$Ictus_to_Enrolled * 24 <= 24] <- levs[2]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 24 & full.data$Ictus_to_Enrolled * 24 <= 72] <- levs[3]#
	if (any(full.data$Ictus_to_Enrolled * 24 > 72)) stop("Here")#
	#full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 72] <- levs[3]#
}#
    table(full.data$Time_to_Randomization)#
# levs <- c("< 1 Day","2 Day", "> 2 Days")#
# full.data$Time_To_Procedure <- NA#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure <= 1] <- levs[1]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 1 & full.data$Ictus_to_Op_Procedure <= 2] <- levs[2]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 2] <- levs[3]#
# full.data$Time_To_Procedure <- factor(full.data$Time_To_Procedure, levels= levs)#
# #
# ll <- c("Other", "African American")#
# full.data$African_American <- ll[as.numeric(full.data$Ethnicity == "African American not Hispanic") + 1]#
# full.data$African_American[full.data$Ethnicity == "Other or unknown"] <- NA#
# full.data$African_American <- factor(full.data$African_American, levels=ll)#
# full.data$Lob <- as.character(full.data$Lobar_BG_vs)#
# full.data$Lob[full.data$Lob == "Not Lobar"] <- "Deep"#
# full.data$Lob <- factor(full.data$Lob, levels= c("Lobar", "Deep"))#
# full.data$Lobar_BG_vs <- full.data$Lob#
#
full.data$ICH_Location <- full.data$Lobar_BG_vs#
#
xxfull.data <- full.data#
#Pct_Pre_10#
vname <- "Group_Assigned"#
#
full.data <-  xxfull.data#
# vname <- "Group_Assigned"#
ssub <- ""#
rvname <- vname#
vsub <- "Surgery"#
#
vars <- c("Age", "ICH_Pre_Rand_10", vname, "Enrollment_GCS_Add")#
cc <- complete.cases(full.data[, vars])#
if (any(!cc)){#
  # if ( !(full.data$patientName[!cc] %in% 289525) ) stop("Something is off about data")#
  stop("Something is off about data")#
}#
#
#### using ABC/2 From Site#
cc <- complete.cases(full.data[, vars])#
#### TAKE OUT WHEN UPDATED#
#
full.data[!cc, c("patientName", vars)]#
#
full.data <- full.data[cc, ]#
FD1 <- full.data#
### say 0 if want probs by group#
fup <- 180#
outvar <- paste("Bad_Outcome_Day_", fup, sep="")#
### Uncomment for Good outcome, comment for bad outcome#
#outvar <- gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)#
full.data[ gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)] <- full.data[, outvar] == 0#
full.data$Y <- as.numeric(full.data[, outvar] == 1)#
#full.data[, paste("Good_Outcome_Day_", fup, sep="")] <-#
# full.data[, outvar] <- NULL#
# , "Ictus_to_Proc", "Hemisphere", "Under_15cc", "African_American"#
runvars <- c("Age_Cat", "GCS_Cat", "Haematoma_volume", "Group_Assigned",  "ICH_Location", "Side_of_haematoma", "Time_to_Randomization")#
runvars <- runvars[ !runvars %in% rvname ]#
#
# else {#
# runvars <- runvars[ !runvars %in% rvname ]#
# }#
lrvar <- length(runvars)#
#
var <- vname#
mod.type <- ""#
#mod.type <- "Adj_"#
#
adder <- "Unadjusted "#
if (mod.type == "Adj_") adder <- "Adjusted "#
# all.table2 <- all.table <- c("Study or subcategory", "Surgical", "Medical", "N", "Odds Ratio (95% CI)", "Odds Ratio (95% CI)", "OR", "Lower", "Upper")#
# all.table3 <- c("Study or subcategory", "Surgical", "Medical", "N", "Risk Difference (95% CI)", "Risk Difference (95% CI)", "RD", "Lower", "Upper")#
#
all.table2 <- all.table <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "OR (95% CI)", "OR (95% CI)", "OR", "Lower", "Upper"), nrow=1)#
all.table3 <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "RD (95% CI)", "RD (95% CI)", "RD", "Lower", "Upper"), nrow=1)#
# data <- data[complete.cases(data[, c("Y", var, runvars)]),]#
#
ivar <- 1#
#
for (ivar in 1:lrvar){#
  rvar <- runvars[ivar]#
  varname <- gsub(rvar, pattern="_Cat.*", replacement="")#
  varname <- gsub(varname, pattern="_", replacement = " ")#
  all.table <- rbind(all.table, c(varname, rep(NA, ncol(all.table)-1 ) ))#
  all.table2 <- rbind(all.table2, c(varname, rep(NA, ncol(all.table2)-1 )))#
  all.table3 <- rbind(all.table3, c(varname, rep(NA, ncol(all.table3) -1)))#
  data <- full.data		#
  if (is.factor(data[, var])) {#
    ylevs <- levels(data[,var])#
  } else ylevs <- c(0, 1)		#
  data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
  vars <- c("Age", "ICH_Pre_Rand_10", "Treatment", "Enrollment_GCS_Add", "Y")#
  if (mod.type != "Adj_") vars <- c("Treatment", "Y")#
  cc <- complete.cases(data[, c(vars, rvar)])#
  data <- data[cc,]#
  levs <- levels(data[, rvar])#
  # all.MH <- matrix(NA, nrow=length(levs), ncol=4)#
  print(levs)#
  ilev <- 1#
  for (ilev in 1:length(levs)){#
    inlev <- data[, rvar] == levs[ilev]#
    dat <- data[inlev,]#
    tab <- table(dat$Group_Assigned, dat$Y)#
    print(tab)#
    ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
    nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
    ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
    pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
    # all.MH[ilev, 1] <- ntrt#
    # all.MH[ilev, 2] <- nctrl#
    # all.MH[ilev, 3] <- ptrt#
    # all.MH[ilev, 4] <- pctrl#
    dat$Treatment <- dat$T0#
    mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
    smod <- summary(mod)$coeff#
    if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
    print(smod)#
    ci <- smod["Treatment", ,drop = FALSE]#
    est <- exp(ci[, "Estimate"])#
    ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
    dat$Treatment <- 1#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p1hat <- predict(mod, newdat=dat, type="response")#
    dat$Treatment <- 0#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p0hat <- predict(mod, newdat=dat, type="response")#
    Ai <- dat$T0#
    Yi <- dat$Y#
    unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    if (ptrt == 0 | pctrl == 0 | ntrt == ptrt | nctrl == pctrl){#
    	cc <- 0.5    	 #
		  x <- tab#
		  x <- x + cc#
  	    SELOGOR = sqrt(1 /( x[1,1] + cc) + 1 / (x[1,2] + cc) + #
    	                        1 / (x[2,1] +cc) + 1 / (x[2,2] +cc))#
		  OR <- x[2,2]*x[1,1]/(x[1,2]* x[2,1])#
		  log.OR <- log(OR)#
		  ## they were n good / N, so need the table#
		CI <- log.OR + c(-1, 1) * qnorm(0.975) * SELOGOR#
      unadj$OR <- OR#
      OR.CI <- exp(CI)#
      unadj$OR.CI <- OR.CI#
      unadj$SE <- SELOGOR#
		  #stop("IT")#
    }#
    unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    dig <- 2#
    all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
    all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
    all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
  }#
}#
#
rvar <- "Surgery Time"#
all.table <- rbind(all.table, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table)-1 ) ))#
all.table2 <- rbind(all.table2, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table2)-1 )))#
all.table3 <- rbind(all.table3, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table3) -1)))#
#
rvar <- "Ictus_to_Proc1"#
#
data <- full.data		#
if (is.factor(data[, var])) {#
  ylevs <- levels(data[,var])#
} else ylevs <- c(0, 1)		#
data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
#
cc <- complete.cases(full.data[, c("Y", vars, rvar)])#
data <- data[cc,]#
levs <- levels(data[, rvar])#
# all.MH <- matrix(NA, nrow=length(levs)-1, ncol=4)#
print(levs)#
ilev <- 2#
#
for (ilev in 2:3){#
  inlev <- data[, rvar] %in% c("Medical", levs[ilev])#
  dat <- data[inlev,]#
  tab <- table(dat$Group_Assigned, dat$Y)#
  print(tab)#
  ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
  nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
  ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
  pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
  # all.MH[ilev-1, 1] <- ntrt#
  # all.MH[ilev-1, 2] <- nctrl#
  # all.MH[ilev-1, 3] <- ptrt#
  # all.MH[ilev-1, 4] <- pctrl#
  dat$Treatment <- dat$T0#
  mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
  smod <- summary(mod)$coeff#
  if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
  print(smod)#
  ci <- smod["Treatment", ,drop = FALSE]#
  est <- exp(ci[, "Estimate"])#
  ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
  dat$Treatment <- 1#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p1hat <- predict(mod, newdat=dat, type="response")#
  dat$Treatment <- 0#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p0hat <- predict(mod, newdat=dat, type="response")#
  Ai <- dat$T0#
  Yi <- dat$Y#
  unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  if (ptrt == 0 | pctrl == 0){#
    unadj$OR <- NA#
    unadj$OR.CI <- c(NA, NA)#
  }#
  unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  dig <- 2#
  all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
  all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
  all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
}#
all.table <- cbind(all.table, c("OR_Check", rep("", nrow(all.table)-1))) #
col <- ncol(all.table)#
cols <- all.table[1,] %in% c("Surgical", "Medical")#
#
for (irow in 2:nrow(all.table)){#
  x <- all.table[irow, cols]#
  if (is.na(x[1]) & is.na(x[2])) next#
  x <- as.numeric(unlist(strsplit(x, split="/")))#
  ## they were n good / N, so need the table#
  x <- c(x[1], x[2]-x[1], x[3], x[4] - x[3])#
  tab <- matrix(as.numeric(x), ncol=2, byrow=TRUE)#
  if (any(tab == 0)) tab <- tab + 0.5#
  ## they're in reversed order#
  all.table[irow, col] <- tab[2,2]*tab[1,1]/(tab[1,2]* tab[2,1])#
}#
xtab <- all.table#
xtab <- xtab[2:nrow(xtab), ]#
colnames(xtab) <- all.table[1,]#
xtab <- as.data.frame(xtab, stringsAsFactors=FALSE)#
xtab$OR_Check <- as.numeric(xtab$OR_Check)#
xtab$OR <- as.numeric(xtab$OR)#
keep_MIS <- which(all.table[, 1] == "Surgery Time")#
tab2 <- all.table[1:(keep_MIS-1), ]#
colnames(tab2) <- c("Category", "Surgical", "Medical", "N", "MISTIE_OR.95.CI", "Drop", "MISTIE_OR", "Lower", "Upper", "OR_Check")#
tab2 <- data.frame(tab2, stringsAsFactors=FALSE)#
tab2$Drop <- NULL#
tryout <- merge(stich_data, tab2, by="Category", sort=FALSE, all=TRUE)#
#
for (icol in c("N_C", "n_C", "N_E", "n_E")) tryout[, icol] <- as.numeric(tryout[, icol])#
#
tryout$STICH_N <- tryout$N_C + tryout$N_E#
#tryout$n_C <- tryout$N_C <-tryout$N_E <-tryout$n_E <-NULL#
tryout$OR_Check <- NULL#
#
tryout$STICH_RD.Lower <- tryout$STICH_RD.Upper <- tryout$STICH_RD.CI <- tryout$STICH_RD <- NA#
#
for (irow in 2:nrow(tryout)){#
	dat <- tryout[irow, c("n_E", "N_E", "n_C",  "N_C")]#
	if (any(is.na(dat))) next;#
	n <- as.numeric(dat[, c("n_E", "n_C")])#
	N <- as.numeric(dat[, c("N_E", "N_C")])#
	rd <- prop.test(n, N)#
	dig <- 2#
	RD <- round(diff(rd$estimate), dig)#
	CI <- round(rd$conf.int, dig)#
	tryout$STICH_RD.CI[irow] <- paste(RD, " (", CI[1], ", ", CI[2], ")", sep="")#
	tryout$STICH_RD.Lower[irow] <- CI[1]#
	tryout$STICH_RD.Upper[irow] <- CI[2]#
	tryout$STICH_RD[irow] <- RD#
}#
rownames(tryout) <- tryout$Category#
cats <- c("Study or subcategory", "Age", levels(full.data$Age_Cat), "GCS", levels(full.data$GCS_Cat), "Side of haematoma", levels(full.data$Side_of_haematoma), c("Site of haematoma"), levels(full.data$ICH_Location), "Haematoma volume", levels(full.data$Haematoma_volume), "Time to Randomization", "< 8 hrs", "8-24 hrs", "24-72 hrs")#
#
tryout <- tryout[cats, ]#
rownames(tryout) <- NULL
tryout
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
pdf(file=file.path(resdir, "Time_To_Randomization.pdf"))#
	at <- c(0, 8, 16, 24, 48, 72, 96)#
	hist(full.data$Ictus_to_Enrolled*24, breaks=at, xaxt='n', main="MISTIE Distribution of Time from Ictus to Randomization", prob=TRUE, xlab='Hours from Onset')#
	axis(1, at=at)#
dev.off()#
#
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
#
{#
#
	levs <- c("< 8 hrs", "8-24 hrs", "24-72 hrs", "> 72 hrs")#
	full.data$Time_to_Randomization <- NA#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 <= 8] <- levs[1]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 8 & full.data$Ictus_to_Enrolled * 24 <= 24] <- levs[2]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 24 & full.data$Ictus_to_Enrolled * 24 <= 72] <- levs[3]#
	if (any(full.data$Ictus_to_Enrolled * 24 > 72)) stop("Here")#
	#full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 72] <- levs[3]#
}#
    table(full.data$Time_to_Randomization)#
# levs <- c("< 1 Day","2 Day", "> 2 Days")#
# full.data$Time_To_Procedure <- NA#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure <= 1] <- levs[1]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 1 & full.data$Ictus_to_Op_Procedure <= 2] <- levs[2]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 2] <- levs[3]#
# full.data$Time_To_Procedure <- factor(full.data$Time_To_Procedure, levels= levs)#
# #
# ll <- c("Other", "African American")#
# full.data$African_American <- ll[as.numeric(full.data$Ethnicity == "African American not Hispanic") + 1]#
# full.data$African_American[full.data$Ethnicity == "Other or unknown"] <- NA#
# full.data$African_American <- factor(full.data$African_American, levels=ll)#
# full.data$Lob <- as.character(full.data$Lobar_BG_vs)#
# full.data$Lob[full.data$Lob == "Not Lobar"] <- "Deep"#
# full.data$Lob <- factor(full.data$Lob, levels= c("Lobar", "Deep"))#
# full.data$Lobar_BG_vs <- full.data$Lob#
#
full.data$ICH_Location <- full.data$Lobar_BG_vs#
#
xxfull.data <- full.data#
#Pct_Pre_10#
vname <- "Group_Assigned"#
#
full.data <-  xxfull.data#
# vname <- "Group_Assigned"#
ssub <- ""#
rvname <- vname#
vsub <- "Surgery"#
#
vars <- c("Age", "ICH_Pre_Rand_10", vname, "Enrollment_GCS_Add")#
cc <- complete.cases(full.data[, vars])#
if (any(!cc)){#
  # if ( !(full.data$patientName[!cc] %in% 289525) ) stop("Something is off about data")#
  stop("Something is off about data")#
}#
#
#### using ABC/2 From Site#
cc <- complete.cases(full.data[, vars])#
#### TAKE OUT WHEN UPDATED#
#
full.data[!cc, c("patientName", vars)]#
#
full.data <- full.data[cc, ]#
FD1 <- full.data#
### say 0 if want probs by group#
fup <- 180#
outvar <- paste("Bad_Outcome_Day_", fup, sep="")#
### Uncomment for Good outcome, comment for bad outcome#
#outvar <- gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)#
full.data[ gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)] <- full.data[, outvar] == 0#
full.data$Y <- as.numeric(full.data[, outvar] == 1)#
#full.data[, paste("Good_Outcome_Day_", fup, sep="")] <-#
# full.data[, outvar] <- NULL#
# , "Ictus_to_Proc", "Hemisphere", "Under_15cc", "African_American"#
runvars <- c("Age_Cat", "GCS_Cat", "Haematoma_volume", "Group_Assigned",  "ICH_Location", "Side_of_haematoma", "Time_to_Randomization")#
runvars <- runvars[ !runvars %in% rvname ]#
#
# else {#
# runvars <- runvars[ !runvars %in% rvname ]#
# }#
lrvar <- length(runvars)#
#
var <- vname#
mod.type <- ""#
#mod.type <- "Adj_"#
#
adder <- "Unadjusted "#
if (mod.type == "Adj_") adder <- "Adjusted "#
# all.table2 <- all.table <- c("Study or subcategory", "Surgical", "Medical", "N", "Odds Ratio (95% CI)", "Odds Ratio (95% CI)", "OR", "Lower", "Upper")#
# all.table3 <- c("Study or subcategory", "Surgical", "Medical", "N", "Risk Difference (95% CI)", "Risk Difference (95% CI)", "RD", "Lower", "Upper")#
#
all.table2 <- all.table <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "OR (95% CI)", "OR (95% CI)", "OR", "Lower", "Upper"), nrow=1)#
all.table3 <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "RD (95% CI)", "RD (95% CI)", "RD", "Lower", "Upper"), nrow=1)#
# data <- data[complete.cases(data[, c("Y", var, runvars)]),]#
#
ivar <- 1#
#
for (ivar in 1:lrvar){#
  rvar <- runvars[ivar]#
  varname <- gsub(rvar, pattern="_Cat.*", replacement="")#
  varname <- gsub(varname, pattern="_", replacement = " ")#
  all.table <- rbind(all.table, c(varname, rep(NA, ncol(all.table)-1 ) ))#
  all.table2 <- rbind(all.table2, c(varname, rep(NA, ncol(all.table2)-1 )))#
  all.table3 <- rbind(all.table3, c(varname, rep(NA, ncol(all.table3) -1)))#
  data <- full.data		#
  if (is.factor(data[, var])) {#
    ylevs <- levels(data[,var])#
  } else ylevs <- c(0, 1)		#
  data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
  vars <- c("Age", "ICH_Pre_Rand_10", "Treatment", "Enrollment_GCS_Add", "Y")#
  if (mod.type != "Adj_") vars <- c("Treatment", "Y")#
  cc <- complete.cases(data[, c(vars, rvar)])#
  data <- data[cc,]#
  levs <- levels(data[, rvar])#
  # all.MH <- matrix(NA, nrow=length(levs), ncol=4)#
  print(levs)#
  ilev <- 1#
  for (ilev in 1:length(levs)){#
    inlev <- data[, rvar] == levs[ilev]#
    dat <- data[inlev,]#
    tab <- table(dat$Group_Assigned, dat$Y)#
    print(tab)#
    ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
    nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
    ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
    pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
    # all.MH[ilev, 1] <- ntrt#
    # all.MH[ilev, 2] <- nctrl#
    # all.MH[ilev, 3] <- ptrt#
    # all.MH[ilev, 4] <- pctrl#
    dat$Treatment <- dat$T0#
    mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
    smod <- summary(mod)$coeff#
    if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
    print(smod)#
    ci <- smod["Treatment", ,drop = FALSE]#
    est <- exp(ci[, "Estimate"])#
    ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
    dat$Treatment <- 1#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p1hat <- predict(mod, newdat=dat, type="response")#
    dat$Treatment <- 0#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p0hat <- predict(mod, newdat=dat, type="response")#
    Ai <- dat$T0#
    Yi <- dat$Y#
    unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    if (ptrt == 0 | pctrl == 0 | ntrt == ptrt | nctrl == pctrl){#
    	cc <- 0.5    	 #
		  x <- tab#
		  x <- x + cc#
  	    SELOGOR = sqrt(1 /( x[1,1] + cc) + 1 / (x[1,2] + cc) + #
    	                        1 / (x[2,1] +cc) + 1 / (x[2,2] +cc))#
		  OR <- x[2,2]*x[1,1]/(x[1,2]* x[2,1])#
		  log.OR <- log(OR)#
		  ## they were n good / N, so need the table#
		CI <- log.OR + c(-1, 1) * qnorm(0.975) * SELOGOR#
      unadj$OR <- OR#
      OR.CI <- exp(CI)#
      unadj$OR.CI <- OR.CI#
      unadj$SE <- SELOGOR#
		  #stop("IT")#
    }#
    unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    dig <- 2#
    all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
    all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
    all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
  }#
}#
#
rvar <- "Surgery Time"#
all.table <- rbind(all.table, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table)-1 ) ))#
all.table2 <- rbind(all.table2, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table2)-1 )))#
all.table3 <- rbind(all.table3, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table3) -1)))#
#
rvar <- "Ictus_to_Proc1"#
#
data <- full.data		#
if (is.factor(data[, var])) {#
  ylevs <- levels(data[,var])#
} else ylevs <- c(0, 1)		#
data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
#
cc <- complete.cases(full.data[, c("Y", vars, rvar)])#
data <- data[cc,]#
levs <- levels(data[, rvar])#
# all.MH <- matrix(NA, nrow=length(levs)-1, ncol=4)#
print(levs)#
ilev <- 2#
#
for (ilev in 2:3){#
  inlev <- data[, rvar] %in% c("Medical", levs[ilev])#
  dat <- data[inlev,]#
  tab <- table(dat$Group_Assigned, dat$Y)#
  print(tab)#
  ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
  nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
  ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
  pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
  # all.MH[ilev-1, 1] <- ntrt#
  # all.MH[ilev-1, 2] <- nctrl#
  # all.MH[ilev-1, 3] <- ptrt#
  # all.MH[ilev-1, 4] <- pctrl#
  dat$Treatment <- dat$T0#
  mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
  smod <- summary(mod)$coeff#
  if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
  print(smod)#
  ci <- smod["Treatment", ,drop = FALSE]#
  est <- exp(ci[, "Estimate"])#
  ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
  dat$Treatment <- 1#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p1hat <- predict(mod, newdat=dat, type="response")#
  dat$Treatment <- 0#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p0hat <- predict(mod, newdat=dat, type="response")#
  Ai <- dat$T0#
  Yi <- dat$Y#
  unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  if (ptrt == 0 | pctrl == 0){#
    unadj$OR <- NA#
    unadj$OR.CI <- c(NA, NA)#
  }#
  unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  dig <- 2#
  all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
  all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
  all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
}#
all.table <- cbind(all.table, c("OR_Check", rep("", nrow(all.table)-1))) #
col <- ncol(all.table)#
cols <- all.table[1,] %in% c("Surgical", "Medical")#
#
for (irow in 2:nrow(all.table)){#
  x <- all.table[irow, cols]#
  if (is.na(x[1]) & is.na(x[2])) next#
  x <- as.numeric(unlist(strsplit(x, split="/")))#
  ## they were n good / N, so need the table#
  x <- c(x[1], x[2]-x[1], x[3], x[4] - x[3])#
  tab <- matrix(as.numeric(x), ncol=2, byrow=TRUE)#
  if (any(tab == 0)) tab <- tab + 0.5#
  ## they're in reversed order#
  all.table[irow, col] <- tab[2,2]*tab[1,1]/(tab[1,2]* tab[2,1])#
}#
xtab <- all.table#
xtab <- xtab[2:nrow(xtab), ]#
colnames(xtab) <- all.table[1,]#
xtab <- as.data.frame(xtab, stringsAsFactors=FALSE)#
xtab$OR_Check <- as.numeric(xtab$OR_Check)#
xtab$OR <- as.numeric(xtab$OR)#
keep_MIS <- which(all.table[, 1] == "Surgery Time")#
tab2 <- all.table[1:(keep_MIS-1), ]#
colnames(tab2) <- c("Category", "Surgical", "Medical", "N", "MISTIE_OR.95.CI", "Drop", "MISTIE_OR", "Lower", "Upper", "OR_Check")#
tab2 <- data.frame(tab2, stringsAsFactors=FALSE)#
tab2$Drop <- NULL#
tryout <- merge(stich_data, tab2, by="Category", sort=FALSE, all=TRUE)#
#
for (icol in c("N_C", "n_C", "N_E", "n_E")) tryout[, icol] <- as.numeric(tryout[, icol])#
#
tryout$STICH_N <- tryout$N_C + tryout$N_E#
#tryout$n_C <- tryout$N_C <-tryout$N_E <-tryout$n_E <-NULL#
tryout$OR_Check <- NULL#
#
tryout$STICH_RD.Lower <- tryout$STICH_RD.Upper <- tryout$STICH_RD.CI <- tryout$STICH_RD <- NA#
#
for (irow in 2:nrow(tryout)){#
	dat <- tryout[irow, c("n_E", "N_E", "n_C",  "N_C")]#
	if (any(is.na(dat))) next;#
	n <- as.numeric(dat[, c("n_E", "n_C")])#
	N <- as.numeric(dat[, c("N_E", "N_C")])#
	rd <- prop.test(n, N)#
	dig <- 1#
	RD <- round(diff(rd$estimate)*100, dig)#
	CI <- round(rd$conf.int*100, dig)#
	tryout$STICH_RD.CI[irow] <- paste(RD, " (", CI[1], ", ", CI[2], ")", sep="")#
	tryout$STICH_RD.Lower[irow] <- CI[1]#
	tryout$STICH_RD.Upper[irow] <- CI[2]#
	tryout$STICH_RD[irow] <- RD#
}#
rownames(tryout) <- tryout$Category#
cats <- c("Study or subcategory", "Age", levels(full.data$Age_Cat), "GCS", levels(full.data$GCS_Cat), "Side of haematoma", levels(full.data$Side_of_haematoma), c("Site of haematoma"), levels(full.data$ICH_Location), "Haematoma volume", levels(full.data$Haematoma_volume), "Time to Randomization", "< 8 hrs", "8-24 hrs", "24-72 hrs")#
#
tryout <- tryout[cats, ]#
rownames(tryout) <- NULL#
#
# cis <- sapply(strsplit(tryout$OR.95..CI, split=" "), function(x) ifelse(length(x) > 0, x[2], NA))#
# cis <- gsub(cis, pattern="(", replacement = "", fixed=TRUE)#
# cis <- gsub(cis, pattern=")", replacement = "", fixed=TRUE)#
# cis <- gsub(cis, pattern="–", replacement = "-", fixed=TRUE)#
# cis <- strsplit(cis, split="-")#
# cis <- lapply(cis, as.numeric)#
# cis <- do.call("rbind", cis)#
# tryout$STICH_Lower <- cis[,1]#
# tryout$STICH_Upper <- cis[,2]#
# tryout$STICH_Lower[1] <- "Lower"#
# tryout$STICH_Upper[1] <- "Upper"#
#
tryout$Conservative[1] <- "Conservative" #
tryout$Early[1] <- "Early" #
#Initial conservative treatment n/N#
tryout$OR.95..CI[1] <- "OR 95% CI"#
tryout$Category[1] <- "Subgroups"#
tryout$OR[1] <- "OR"#
tryout$STICH_N[1] <- "N"
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
pdf(file=file.path(resdir, "Time_To_Randomization.pdf"))#
	at <- c(0, 8, 16, 24, 48, 72, 96)#
	hist(full.data$Ictus_to_Enrolled*24, breaks=at, xaxt='n', main="MISTIE Distribution of Time from Ictus to Randomization", prob=TRUE, xlab='Hours from Onset')#
	axis(1, at=at)#
dev.off()#
#
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
#
{#
#
	levs <- c("< 8 hrs", "8-24 hrs", "24-72 hrs", "> 72 hrs")#
	full.data$Time_to_Randomization <- NA#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 <= 8] <- levs[1]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 8 & full.data$Ictus_to_Enrolled * 24 <= 24] <- levs[2]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 24 & full.data$Ictus_to_Enrolled * 24 <= 72] <- levs[3]#
	#if (any(full.data$Ictus_to_Enrolled * 24 > 72)) stop("Here")#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 72] <- levs[4]#
}#
    table(full.data$Time_to_Randomization)
full.data$Time_to_Randomization
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
pdf(file=file.path(resdir, "Time_To_Randomization.pdf"))#
	at <- c(0, 8, 16, 24, 48, 72, 96)#
	hist(full.data$Ictus_to_Enrolled*24, breaks=at, xaxt='n', main="MISTIE Distribution of Time from Ictus to Randomization", prob=TRUE, xlab='Hours from Onset')#
	axis(1, at=at)#
dev.off()#
#
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
#
{#
#
	levs <- c("< 8 hrs", "8-24 hrs", "24-72 hrs", "> 72 hrs")#
	full.data$Time_to_Randomization <- NA#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 <= 8] <- levs[1]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 8 & full.data$Ictus_to_Enrolled * 24 <= 24] <- levs[2]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 24 & full.data$Ictus_to_Enrolled * 24 <= 72] <- levs[3]#
	#if (any(full.data$Ictus_to_Enrolled * 24 > 72)) stop("Here")#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 72] <- levs[4]#
	full.data$Time_to_Randomization <- factor(full.data$Time_to_Randomization, levels= levs)#
}#
    table(full.data$Time_to_Randomization)
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
pdf(file=file.path(resdir, "Time_To_Randomization.pdf"))#
	at <- c(0, 8, 16, 24, 48, 72, 96)#
	hist(full.data$Ictus_to_Enrolled*24, breaks=at, xaxt='n', main="MISTIE Distribution of Time from Ictus to Randomization", prob=TRUE, xlab='Hours from Onset')#
	axis(1, at=at)#
dev.off()#
#
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
#
{#
#
	levs <- c("< 8 hrs", "8-24 hrs", "24-72 hrs", "> 72 hrs")#
	full.data$Time_to_Randomization <- NA#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 <= 8] <- levs[1]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 8 & full.data$Ictus_to_Enrolled * 24 <= 24] <- levs[2]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 24 & full.data$Ictus_to_Enrolled * 24 <= 72] <- levs[3]#
	#if (any(full.data$Ictus_to_Enrolled * 24 > 72)) stop("Here")#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 72] <- levs[4]#
	full.data$Time_to_Randomization <- factor(full.data$Time_to_Randomization, levels= levs)#
}#
    table(full.data$Time_to_Randomization)#
# levs <- c("< 1 Day","2 Day", "> 2 Days")#
# full.data$Time_To_Procedure <- NA#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure <= 1] <- levs[1]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 1 & full.data$Ictus_to_Op_Procedure <= 2] <- levs[2]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 2] <- levs[3]#
# full.data$Time_To_Procedure <- factor(full.data$Time_To_Procedure, levels= levs)#
# #
# ll <- c("Other", "African American")#
# full.data$African_American <- ll[as.numeric(full.data$Ethnicity == "African American not Hispanic") + 1]#
# full.data$African_American[full.data$Ethnicity == "Other or unknown"] <- NA#
# full.data$African_American <- factor(full.data$African_American, levels=ll)#
# full.data$Lob <- as.character(full.data$Lobar_BG_vs)#
# full.data$Lob[full.data$Lob == "Not Lobar"] <- "Deep"#
# full.data$Lob <- factor(full.data$Lob, levels= c("Lobar", "Deep"))#
# full.data$Lobar_BG_vs <- full.data$Lob#
#
full.data$ICH_Location <- full.data$Lobar_BG_vs#
#
xxfull.data <- full.data#
#Pct_Pre_10#
vname <- "Group_Assigned"#
#
full.data <-  xxfull.data#
# vname <- "Group_Assigned"#
ssub <- ""#
rvname <- vname#
vsub <- "Surgery"#
#
vars <- c("Age", "ICH_Pre_Rand_10", vname, "Enrollment_GCS_Add")#
cc <- complete.cases(full.data[, vars])#
if (any(!cc)){#
  # if ( !(full.data$patientName[!cc] %in% 289525) ) stop("Something is off about data")#
  stop("Something is off about data")#
}#
#
#### using ABC/2 From Site#
cc <- complete.cases(full.data[, vars])#
#### TAKE OUT WHEN UPDATED#
#
full.data[!cc, c("patientName", vars)]#
#
full.data <- full.data[cc, ]#
FD1 <- full.data#
### say 0 if want probs by group#
fup <- 180#
outvar <- paste("Bad_Outcome_Day_", fup, sep="")#
### Uncomment for Good outcome, comment for bad outcome#
#outvar <- gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)#
full.data[ gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)] <- full.data[, outvar] == 0#
full.data$Y <- as.numeric(full.data[, outvar] == 1)#
#full.data[, paste("Good_Outcome_Day_", fup, sep="")] <-#
# full.data[, outvar] <- NULL#
# , "Ictus_to_Proc", "Hemisphere", "Under_15cc", "African_American"#
runvars <- c("Age_Cat", "GCS_Cat", "Haematoma_volume", "Group_Assigned",  "ICH_Location", "Side_of_haematoma", "Time_to_Randomization")#
runvars <- runvars[ !runvars %in% rvname ]#
#
# else {#
# runvars <- runvars[ !runvars %in% rvname ]#
# }#
lrvar <- length(runvars)#
#
var <- vname#
mod.type <- ""#
#mod.type <- "Adj_"#
#
adder <- "Unadjusted "#
if (mod.type == "Adj_") adder <- "Adjusted "#
# all.table2 <- all.table <- c("Study or subcategory", "Surgical", "Medical", "N", "Odds Ratio (95% CI)", "Odds Ratio (95% CI)", "OR", "Lower", "Upper")#
# all.table3 <- c("Study or subcategory", "Surgical", "Medical", "N", "Risk Difference (95% CI)", "Risk Difference (95% CI)", "RD", "Lower", "Upper")#
#
all.table2 <- all.table <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "OR (95% CI)", "OR (95% CI)", "OR", "Lower", "Upper"), nrow=1)#
all.table3 <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "RD (95% CI)", "RD (95% CI)", "RD", "Lower", "Upper"), nrow=1)#
# data <- data[complete.cases(data[, c("Y", var, runvars)]),]#
#
ivar <- 1#
#
for (ivar in 1:lrvar){#
  rvar <- runvars[ivar]#
  varname <- gsub(rvar, pattern="_Cat.*", replacement="")#
  varname <- gsub(varname, pattern="_", replacement = " ")#
  all.table <- rbind(all.table, c(varname, rep(NA, ncol(all.table)-1 ) ))#
  all.table2 <- rbind(all.table2, c(varname, rep(NA, ncol(all.table2)-1 )))#
  all.table3 <- rbind(all.table3, c(varname, rep(NA, ncol(all.table3) -1)))#
  data <- full.data		#
  if (is.factor(data[, var])) {#
    ylevs <- levels(data[,var])#
  } else ylevs <- c(0, 1)		#
  data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
  vars <- c("Age", "ICH_Pre_Rand_10", "Treatment", "Enrollment_GCS_Add", "Y")#
  if (mod.type != "Adj_") vars <- c("Treatment", "Y")#
  cc <- complete.cases(data[, c(vars, rvar)])#
  data <- data[cc,]#
  levs <- levels(data[, rvar])#
  # all.MH <- matrix(NA, nrow=length(levs), ncol=4)#
  print(levs)#
  ilev <- 1#
  for (ilev in 1:length(levs)){#
    inlev <- data[, rvar] == levs[ilev]#
    dat <- data[inlev,]#
    tab <- table(dat$Group_Assigned, dat$Y)#
    print(tab)#
    ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
    nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
    ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
    pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
    # all.MH[ilev, 1] <- ntrt#
    # all.MH[ilev, 2] <- nctrl#
    # all.MH[ilev, 3] <- ptrt#
    # all.MH[ilev, 4] <- pctrl#
    dat$Treatment <- dat$T0#
    mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
    smod <- summary(mod)$coeff#
    if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
    print(smod)#
    ci <- smod["Treatment", ,drop = FALSE]#
    est <- exp(ci[, "Estimate"])#
    ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
    dat$Treatment <- 1#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p1hat <- predict(mod, newdat=dat, type="response")#
    dat$Treatment <- 0#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p0hat <- predict(mod, newdat=dat, type="response")#
    Ai <- dat$T0#
    Yi <- dat$Y#
    unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    if (ptrt == 0 | pctrl == 0 | ntrt == ptrt | nctrl == pctrl){#
    	cc <- 0.5    	 #
		  x <- tab#
		  x <- x + cc#
  	    SELOGOR = sqrt(1 /( x[1,1] + cc) + 1 / (x[1,2] + cc) + #
    	                        1 / (x[2,1] +cc) + 1 / (x[2,2] +cc))#
		  OR <- x[2,2]*x[1,1]/(x[1,2]* x[2,1])#
		  log.OR <- log(OR)#
		  ## they were n good / N, so need the table#
		CI <- log.OR + c(-1, 1) * qnorm(0.975) * SELOGOR#
      unadj$OR <- OR#
      OR.CI <- exp(CI)#
      unadj$OR.CI <- OR.CI#
      unadj$SE <- SELOGOR#
		  #stop("IT")#
    }#
    unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    dig <- 2#
    all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
    all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
    all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
  }#
}#
#
rvar <- "Surgery Time"#
all.table <- rbind(all.table, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table)-1 ) ))#
all.table2 <- rbind(all.table2, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table2)-1 )))#
all.table3 <- rbind(all.table3, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table3) -1)))#
#
rvar <- "Ictus_to_Proc1"#
#
data <- full.data		#
if (is.factor(data[, var])) {#
  ylevs <- levels(data[,var])#
} else ylevs <- c(0, 1)		#
data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
#
cc <- complete.cases(full.data[, c("Y", vars, rvar)])#
data <- data[cc,]#
levs <- levels(data[, rvar])#
# all.MH <- matrix(NA, nrow=length(levs)-1, ncol=4)#
print(levs)#
ilev <- 2#
#
for (ilev in 2:3){#
  inlev <- data[, rvar] %in% c("Medical", levs[ilev])#
  dat <- data[inlev,]#
  tab <- table(dat$Group_Assigned, dat$Y)#
  print(tab)#
  ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
  nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
  ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
  pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
  # all.MH[ilev-1, 1] <- ntrt#
  # all.MH[ilev-1, 2] <- nctrl#
  # all.MH[ilev-1, 3] <- ptrt#
  # all.MH[ilev-1, 4] <- pctrl#
  dat$Treatment <- dat$T0#
  mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
  smod <- summary(mod)$coeff#
  if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
  print(smod)#
  ci <- smod["Treatment", ,drop = FALSE]#
  est <- exp(ci[, "Estimate"])#
  ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
  dat$Treatment <- 1#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p1hat <- predict(mod, newdat=dat, type="response")#
  dat$Treatment <- 0#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p0hat <- predict(mod, newdat=dat, type="response")#
  Ai <- dat$T0#
  Yi <- dat$Y#
  unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  if (ptrt == 0 | pctrl == 0){#
    unadj$OR <- NA#
    unadj$OR.CI <- c(NA, NA)#
  }#
  unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  dig <- 2#
  all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
  all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
  all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
}#
all.table <- cbind(all.table, c("OR_Check", rep("", nrow(all.table)-1))) #
col <- ncol(all.table)#
cols <- all.table[1,] %in% c("Surgical", "Medical")#
#
for (irow in 2:nrow(all.table)){#
  x <- all.table[irow, cols]#
  if (is.na(x[1]) & is.na(x[2])) next#
  x <- as.numeric(unlist(strsplit(x, split="/")))#
  ## they were n good / N, so need the table#
  x <- c(x[1], x[2]-x[1], x[3], x[4] - x[3])#
  tab <- matrix(as.numeric(x), ncol=2, byrow=TRUE)#
  if (any(tab == 0)) tab <- tab + 0.5#
  ## they're in reversed order#
  all.table[irow, col] <- tab[2,2]*tab[1,1]/(tab[1,2]* tab[2,1])#
}#
xtab <- all.table#
xtab <- xtab[2:nrow(xtab), ]#
colnames(xtab) <- all.table[1,]#
xtab <- as.data.frame(xtab, stringsAsFactors=FALSE)#
xtab$OR_Check <- as.numeric(xtab$OR_Check)#
xtab$OR <- as.numeric(xtab$OR)#
keep_MIS <- which(all.table[, 1] == "Surgery Time")#
tab2 <- all.table[1:(keep_MIS-1), ]#
colnames(tab2) <- c("Category", "Surgical", "Medical", "N", "MISTIE_OR.95.CI", "Drop", "MISTIE_OR", "Lower", "Upper", "OR_Check")#
tab2 <- data.frame(tab2, stringsAsFactors=FALSE)#
tab2$Drop <- NULL#
tryout <- merge(stich_data, tab2, by="Category", sort=FALSE, all=TRUE)#
#
for (icol in c("N_C", "n_C", "N_E", "n_E")) tryout[, icol] <- as.numeric(tryout[, icol])#
#
tryout$STICH_N <- tryout$N_C + tryout$N_E#
#tryout$n_C <- tryout$N_C <-tryout$N_E <-tryout$n_E <-NULL#
tryout$OR_Check <- NULL#
#
tryout$STICH_RD.Lower <- tryout$STICH_RD.Upper <- tryout$STICH_RD.CI <- tryout$STICH_RD <- NA#
#
for (irow in 2:nrow(tryout)){#
	dat <- tryout[irow, c("n_E", "N_E", "n_C",  "N_C")]#
	if (any(is.na(dat))) next;#
	n <- as.numeric(dat[, c("n_E", "n_C")])#
	N <- as.numeric(dat[, c("N_E", "N_C")])#
	rd <- prop.test(n, N)#
	dig <- 1#
	RD <- round(diff(rd$estimate)*100, dig)#
	CI <- round(rd$conf.int*100, dig)#
	tryout$STICH_RD.CI[irow] <- paste(RD, " (", CI[1], ", ", CI[2], ")", sep="")#
	tryout$STICH_RD.Lower[irow] <- CI[1]#
	tryout$STICH_RD.Upper[irow] <- CI[2]#
	tryout$STICH_RD[irow] <- RD#
}#
rownames(tryout) <- tryout$Category#
cats <- c("Study or subcategory", "Age", levels(full.data$Age_Cat), "GCS", levels(full.data$GCS_Cat), "Side of haematoma", levels(full.data$Side_of_haematoma), c("Site of haematoma"), levels(full.data$ICH_Location), "Haematoma volume", levels(full.data$Haematoma_volume), "Time to Randomization", levels(full.data$Time_to_Randomization))#
#
tryout <- tryout[cats, ]#
rownames(tryout) <- NULL#
#
# cis <- sapply(strsplit(tryout$OR.95..CI, split=" "), function(x) ifelse(length(x) > 0, x[2], NA))#
# cis <- gsub(cis, pattern="(", replacement = "", fixed=TRUE)#
# cis <- gsub(cis, pattern=")", replacement = "", fixed=TRUE)#
# cis <- gsub(cis, pattern="–", replacement = "-", fixed=TRUE)#
# cis <- strsplit(cis, split="-")#
# cis <- lapply(cis, as.numeric)#
# cis <- do.call("rbind", cis)#
# tryout$STICH_Lower <- cis[,1]#
# tryout$STICH_Upper <- cis[,2]#
# tryout$STICH_Lower[1] <- "Lower"#
# tryout$STICH_Upper[1] <- "Upper"#
#
tryout$Conservative[1] <- "Conservative" #
tryout$Early[1] <- "Early" #
#Initial conservative treatment n/N#
tryout$OR.95..CI[1] <- "OR 95% CI"#
tryout$Category[1] <- "Subgroups"#
tryout$OR[1] <- "OR"#
tryout$STICH_N[1] <- "N"
tryout
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
pdf(file=file.path(resdir, "Time_To_Randomization.pdf"))#
	at <- c(0, 8, 16, 24, 48, 72, 96)#
	hist(full.data$Ictus_to_Enrolled*24, breaks=at, xaxt='n', main="MISTIE Distribution of Time from Ictus to Randomization", prob=TRUE, xlab='Hours from Onset')#
	axis(1, at=at)#
dev.off()#
#
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
#
{#
#
	levs <- c("< 8 hrs", "8-24 hrs", "24-72 hrs", "> 72 hrs")#
	full.data$Time_to_Randomization <- NA#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 <= 8] <- levs[1]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 8 & full.data$Ictus_to_Enrolled * 24 <= 24] <- levs[2]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 24 & full.data$Ictus_to_Enrolled * 24 <= 72] <- levs[3]#
	#if (any(full.data$Ictus_to_Enrolled * 24 > 72)) stop("Here")#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 72] <- levs[4]#
	full.data$Time_to_Randomization <- factor(full.data$Time_to_Randomization, levels= levs)#
}#
    table(full.data$Time_to_Randomization)#
# levs <- c("< 1 Day","2 Day", "> 2 Days")#
# full.data$Time_To_Procedure <- NA#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure <= 1] <- levs[1]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 1 & full.data$Ictus_to_Op_Procedure <= 2] <- levs[2]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 2] <- levs[3]#
# full.data$Time_To_Procedure <- factor(full.data$Time_To_Procedure, levels= levs)#
# #
# ll <- c("Other", "African American")#
# full.data$African_American <- ll[as.numeric(full.data$Ethnicity == "African American not Hispanic") + 1]#
# full.data$African_American[full.data$Ethnicity == "Other or unknown"] <- NA#
# full.data$African_American <- factor(full.data$African_American, levels=ll)#
# full.data$Lob <- as.character(full.data$Lobar_BG_vs)#
# full.data$Lob[full.data$Lob == "Not Lobar"] <- "Deep"#
# full.data$Lob <- factor(full.data$Lob, levels= c("Lobar", "Deep"))#
# full.data$Lobar_BG_vs <- full.data$Lob#
#
full.data$ICH_Location <- full.data$Lobar_BG_vs#
#
xxfull.data <- full.data#
#Pct_Pre_10#
vname <- "Group_Assigned"#
#
full.data <-  xxfull.data#
# vname <- "Group_Assigned"#
ssub <- ""#
rvname <- vname#
vsub <- "Surgery"#
#
vars <- c("Age", "ICH_Pre_Rand_10", vname, "Enrollment_GCS_Add")#
cc <- complete.cases(full.data[, vars])#
if (any(!cc)){#
  # if ( !(full.data$patientName[!cc] %in% 289525) ) stop("Something is off about data")#
  stop("Something is off about data")#
}#
#
#### using ABC/2 From Site#
cc <- complete.cases(full.data[, vars])#
#### TAKE OUT WHEN UPDATED#
#
full.data[!cc, c("patientName", vars)]#
#
full.data <- full.data[cc, ]#
FD1 <- full.data#
### say 0 if want probs by group#
fup <- 180#
outvar <- paste("Bad_Outcome_Day_", fup, sep="")#
### Uncomment for Good outcome, comment for bad outcome#
#outvar <- gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)#
full.data[ gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)] <- full.data[, outvar] == 0#
full.data$Y <- as.numeric(full.data[, outvar] == 1)#
#full.data[, paste("Good_Outcome_Day_", fup, sep="")] <-#
# full.data[, outvar] <- NULL#
# , "Ictus_to_Proc", "Hemisphere", "Under_15cc", "African_American"#
runvars <- c("Age_Cat", "GCS_Cat", "Haematoma_volume", "Group_Assigned",  "ICH_Location", "Side_of_haematoma", "Time_to_Randomization")#
runvars <- runvars[ !runvars %in% rvname ]#
#
# else {#
# runvars <- runvars[ !runvars %in% rvname ]#
# }#
lrvar <- length(runvars)#
#
var <- vname#
mod.type <- ""#
#mod.type <- "Adj_"#
#
adder <- "Unadjusted "#
if (mod.type == "Adj_") adder <- "Adjusted "#
# all.table2 <- all.table <- c("Study or subcategory", "Surgical", "Medical", "N", "Odds Ratio (95% CI)", "Odds Ratio (95% CI)", "OR", "Lower", "Upper")#
# all.table3 <- c("Study or subcategory", "Surgical", "Medical", "N", "Risk Difference (95% CI)", "Risk Difference (95% CI)", "RD", "Lower", "Upper")#
#
all.table2 <- all.table <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "OR (95% CI)", "OR (95% CI)", "OR", "Lower", "Upper"), nrow=1)#
all.table3 <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "RD (95% CI)", "RD (95% CI)", "RD", "Lower", "Upper"), nrow=1)#
# data <- data[complete.cases(data[, c("Y", var, runvars)]),]#
#
ivar <- 1
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
pdf(file=file.path(resdir, "Time_To_Randomization.pdf"))#
	at <- c(0, 8, 16, 24, 48, 72, 96)#
	hist(full.data$Ictus_to_Enrolled*24, breaks=at, xaxt='n', main="MISTIE Distribution of Time from Ictus to Randomization", prob=TRUE, xlab='Hours from Onset')#
	axis(1, at=at)#
dev.off()#
#
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
#
{#
#
	levs <- c("< 8 hrs", "8-24 hrs", "24-72 hrs", "> 72 hrs")#
	full.data$Time_to_Randomization <- NA#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 <= 8] <- levs[1]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 8 & full.data$Ictus_to_Enrolled * 24 <= 24] <- levs[2]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 24 & full.data$Ictus_to_Enrolled * 24 <= 72] <- levs[3]#
	#if (any(full.data$Ictus_to_Enrolled * 24 > 72)) stop("Here")#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 72] <- levs[4]#
	full.data$Time_to_Randomization <- factor(full.data$Time_to_Randomization, levels= levs)#
}#
    table(full.data$Time_to_Randomization)#
# levs <- c("< 1 Day","2 Day", "> 2 Days")#
# full.data$Time_To_Procedure <- NA#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure <= 1] <- levs[1]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 1 & full.data$Ictus_to_Op_Procedure <= 2] <- levs[2]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 2] <- levs[3]#
# full.data$Time_To_Procedure <- factor(full.data$Time_To_Procedure, levels= levs)#
# #
# ll <- c("Other", "African American")#
# full.data$African_American <- ll[as.numeric(full.data$Ethnicity == "African American not Hispanic") + 1]#
# full.data$African_American[full.data$Ethnicity == "Other or unknown"] <- NA#
# full.data$African_American <- factor(full.data$African_American, levels=ll)#
# full.data$Lob <- as.character(full.data$Lobar_BG_vs)#
# full.data$Lob[full.data$Lob == "Not Lobar"] <- "Deep"#
# full.data$Lob <- factor(full.data$Lob, levels= c("Lobar", "Deep"))#
# full.data$Lobar_BG_vs <- full.data$Lob#
#
full.data$ICH_Location <- full.data$Lobar_BG_vs#
#
xxfull.data <- full.data#
#Pct_Pre_10#
vname <- "Group_Assigned"#
#
full.data <-  xxfull.data#
# vname <- "Group_Assigned"#
ssub <- ""#
rvname <- vname#
vsub <- "Surgery"#
#
vars <- c("Age", "ICH_Pre_Rand_10", vname, "Enrollment_GCS_Add")#
cc <- complete.cases(full.data[, vars])#
if (any(!cc)){#
  # if ( !(full.data$patientName[!cc] %in% 289525) ) stop("Something is off about data")#
  stop("Something is off about data")#
}#
#
#### using ABC/2 From Site#
cc <- complete.cases(full.data[, vars])#
#### TAKE OUT WHEN UPDATED#
#
full.data[!cc, c("patientName", vars)]#
#
full.data <- full.data[cc, ]#
FD1 <- full.data#
### say 0 if want probs by group#
fup <- 180#
outvar <- paste("Bad_Outcome_Day_", fup, sep="")#
### Uncomment for Good outcome, comment for bad outcome#
#outvar <- gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)#
full.data[ gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)] <- full.data[, outvar] == 0#
full.data$Y <- as.numeric(full.data[, outvar] == 1)#
#full.data[, paste("Good_Outcome_Day_", fup, sep="")] <-#
# full.data[, outvar] <- NULL#
# , "Ictus_to_Proc", "Hemisphere", "Under_15cc", "African_American"#
runvars <- c("Age_Cat", "GCS_Cat", "Haematoma_volume", "Group_Assigned",  "ICH_Location", "Side_of_haematoma", "Time_to_Randomization")#
runvars <- runvars[ !runvars %in% rvname ]#
#
# else {#
# runvars <- runvars[ !runvars %in% rvname ]#
# }#
lrvar <- length(runvars)#
#
var <- vname#
mod.type <- ""#
#mod.type <- "Adj_"#
#
adder <- "Unadjusted "#
if (mod.type == "Adj_") adder <- "Adjusted "#
# all.table2 <- all.table <- c("Study or subcategory", "Surgical", "Medical", "N", "Odds Ratio (95% CI)", "Odds Ratio (95% CI)", "OR", "Lower", "Upper")#
# all.table3 <- c("Study or subcategory", "Surgical", "Medical", "N", "Risk Difference (95% CI)", "Risk Difference (95% CI)", "RD", "Lower", "Upper")#
#
all.table2 <- all.table <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "OR (95% CI)", "OR (95% CI)", "OR", "Lower", "Upper"), nrow=1)#
all.table3 <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "RD (95% CI)", "RD (95% CI)", "RD", "Lower", "Upper"), nrow=1)#
# data <- data[complete.cases(data[, c("Y", var, runvars)]),]#
#
ivar <- 1#
#
for (ivar in 1:lrvar){#
  rvar <- runvars[ivar]#
  varname <- gsub(rvar, pattern="_Cat.*", replacement="")#
  varname <- gsub(varname, pattern="_", replacement = " ")#
  all.table <- rbind(all.table, c(varname, rep(NA, ncol(all.table)-1 ) ))#
  all.table2 <- rbind(all.table2, c(varname, rep(NA, ncol(all.table2)-1 )))#
  all.table3 <- rbind(all.table3, c(varname, rep(NA, ncol(all.table3) -1)))#
  data <- full.data		#
  if (is.factor(data[, var])) {#
    ylevs <- levels(data[,var])#
  } else ylevs <- c(0, 1)		#
  data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
  vars <- c("Age", "ICH_Pre_Rand_10", "Treatment", "Enrollment_GCS_Add", "Y")#
  if (mod.type != "Adj_") vars <- c("Treatment", "Y")#
  cc <- complete.cases(data[, c(vars, rvar)])#
  data <- data[cc,]#
  levs <- levels(data[, rvar])#
  # all.MH <- matrix(NA, nrow=length(levs), ncol=4)#
  print(levs)#
  ilev <- 1#
  for (ilev in 1:length(levs)){#
    inlev <- data[, rvar] == levs[ilev]#
    dat <- data[inlev,]#
    tab <- table(dat$Group_Assigned, dat$Y)#
    print(tab)#
    ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
    nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
    ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
    pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
    # all.MH[ilev, 1] <- ntrt#
    # all.MH[ilev, 2] <- nctrl#
    # all.MH[ilev, 3] <- ptrt#
    # all.MH[ilev, 4] <- pctrl#
    dat$Treatment <- dat$T0#
    mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
    smod <- summary(mod)$coeff#
    if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
    print(smod)#
    ci <- smod["Treatment", ,drop = FALSE]#
    est <- exp(ci[, "Estimate"])#
    ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
    dat$Treatment <- 1#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p1hat <- predict(mod, newdat=dat, type="response")#
    dat$Treatment <- 0#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p0hat <- predict(mod, newdat=dat, type="response")#
    Ai <- dat$T0#
    Yi <- dat$Y#
    unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    if (ptrt == 0 | pctrl == 0 | ntrt == ptrt | nctrl == pctrl){#
    	cc <- 0.5    	 #
		  x <- tab#
		  x <- x + cc#
  	    SELOGOR = sqrt(1 /( x[1,1] + cc) + 1 / (x[1,2] + cc) + #
    	                        1 / (x[2,1] +cc) + 1 / (x[2,2] +cc))#
		  OR <- x[2,2]*x[1,1]/(x[1,2]* x[2,1])#
		  log.OR <- log(OR)#
		  ## they were n good / N, so need the table#
		CI <- log.OR + c(-1, 1) * qnorm(0.975) * SELOGOR#
      unadj$OR <- OR#
      OR.CI <- exp(CI)#
      unadj$OR.CI <- OR.CI#
      unadj$SE <- SELOGOR#
		  #stop("IT")#
    }#
    unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    dig <- 2#
    all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
    all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
    all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
  }#
}
rvar
ivar
ilev
inlev <- data[, rvar] == levs[ilev]#
    dat <- data[inlev,]#
    tab <- table(dat$Group_Assigned, dat$Y)#
    print(tab)#
    ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
    nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
    ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
    pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)
dat$Treatment <- dat$T0#
    mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
    smod <- summary(mod)$coeff#
    if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
    print(smod)#
    ci <- smod["Treatment", ,drop = FALSE]#
    est <- exp(ci[, "Estimate"])#
    ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))
dat$Treatment <- 1#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p1hat <- predict(mod, newdat=dat, type="response")#
    dat$Treatment <- 0#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p0hat <- predict(mod, newdat=dat, type="response")#
    Ai <- dat$T0#
    Yi <- dat$Y#
    unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    if (ptrt == 0 | pctrl == 0 | ntrt == ptrt | nctrl == pctrl){#
    	cc <- 0.5    	 #
		  x <- tab#
		  x <- x + cc#
  	    SELOGOR = sqrt(1 /( x[1,1] + cc) + 1 / (x[1,2] + cc) + #
    	                        1 / (x[2,1] +cc) + 1 / (x[2,2] +cc))#
		  OR <- x[2,2]*x[1,1]/(x[1,2]* x[2,1])#
		  log.OR <- log(OR)#
		  ## they were n good / N, so need the table#
		CI <- log.OR + c(-1, 1) * qnorm(0.975) * SELOGOR#
      unadj$OR <- OR#
      OR.CI <- exp(CI)#
      unadj$OR.CI <- OR.CI#
      unadj$SE <- SELOGOR#
		  #stop("IT")#
    }#
    unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    dig <- 2#
    all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
    all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
    all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
pdf(file=file.path(resdir, "Time_To_Randomization.pdf"))#
	at <- c(0, 8, 16, 24, 48, 72, 96)#
	hist(full.data$Ictus_to_Enrolled*24, breaks=at, xaxt='n', main="MISTIE Distribution of Time from Ictus to Randomization", prob=TRUE, xlab='Hours from Onset')#
	axis(1, at=at)#
dev.off()#
#
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
#
{#
#
	levs <- c("< 8 hrs", "8-24 hrs", "24-72 hrs", "> 72 hrs")#
	full.data$Time_to_Randomization <- NA#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 <= 8] <- levs[1]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 8 & full.data$Ictus_to_Enrolled * 24 <= 24] <- levs[2]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 24 & full.data$Ictus_to_Enrolled * 24 <= 72] <- levs[3]#
	#if (any(full.data$Ictus_to_Enrolled * 24 > 72)) stop("Here")#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 72] <- levs[4]#
	full.data$Time_to_Randomization <- factor(full.data$Time_to_Randomization, levels= levs)#
}#
    table(full.data$Time_to_Randomization)#
# levs <- c("< 1 Day","2 Day", "> 2 Days")#
# full.data$Time_To_Procedure <- NA#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure <= 1] <- levs[1]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 1 & full.data$Ictus_to_Op_Procedure <= 2] <- levs[2]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 2] <- levs[3]#
# full.data$Time_To_Procedure <- factor(full.data$Time_To_Procedure, levels= levs)#
# #
# ll <- c("Other", "African American")#
# full.data$African_American <- ll[as.numeric(full.data$Ethnicity == "African American not Hispanic") + 1]#
# full.data$African_American[full.data$Ethnicity == "Other or unknown"] <- NA#
# full.data$African_American <- factor(full.data$African_American, levels=ll)#
# full.data$Lob <- as.character(full.data$Lobar_BG_vs)#
# full.data$Lob[full.data$Lob == "Not Lobar"] <- "Deep"#
# full.data$Lob <- factor(full.data$Lob, levels= c("Lobar", "Deep"))#
# full.data$Lobar_BG_vs <- full.data$Lob#
#
full.data$ICH_Location <- full.data$Lobar_BG_vs#
#
xxfull.data <- full.data#
#Pct_Pre_10#
vname <- "Group_Assigned"#
#
full.data <-  xxfull.data#
# vname <- "Group_Assigned"#
ssub <- ""#
rvname <- vname#
vsub <- "Surgery"#
#
vars <- c("Age", "ICH_Pre_Rand_10", vname, "Enrollment_GCS_Add")#
cc <- complete.cases(full.data[, vars])#
if (any(!cc)){#
  # if ( !(full.data$patientName[!cc] %in% 289525) ) stop("Something is off about data")#
  stop("Something is off about data")#
}#
#
#### using ABC/2 From Site#
cc <- complete.cases(full.data[, vars])#
#### TAKE OUT WHEN UPDATED#
#
full.data[!cc, c("patientName", vars)]#
#
full.data <- full.data[cc, ]#
FD1 <- full.data#
### say 0 if want probs by group#
fup <- 180#
outvar <- paste("Bad_Outcome_Day_", fup, sep="")#
### Uncomment for Good outcome, comment for bad outcome#
#outvar <- gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)#
full.data[ gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)] <- full.data[, outvar] == 0#
full.data$Y <- as.numeric(full.data[, outvar] == 1)#
#full.data[, paste("Good_Outcome_Day_", fup, sep="")] <-#
# full.data[, outvar] <- NULL#
# , "Ictus_to_Proc", "Hemisphere", "Under_15cc", "African_American"#
runvars <- c("Age_Cat", "GCS_Cat", "Haematoma_volume", "Group_Assigned",  "ICH_Location", "Side_of_haematoma", "Time_to_Randomization")#
runvars <- runvars[ !runvars %in% rvname ]#
#
# else {#
# runvars <- runvars[ !runvars %in% rvname ]#
# }#
lrvar <- length(runvars)#
#
var <- vname#
mod.type <- ""#
#mod.type <- "Adj_"#
#
adder <- "Unadjusted "#
if (mod.type == "Adj_") adder <- "Adjusted "#
# all.table2 <- all.table <- c("Study or subcategory", "Surgical", "Medical", "N", "Odds Ratio (95% CI)", "Odds Ratio (95% CI)", "OR", "Lower", "Upper")#
# all.table3 <- c("Study or subcategory", "Surgical", "Medical", "N", "Risk Difference (95% CI)", "Risk Difference (95% CI)", "RD", "Lower", "Upper")#
#
all.table2 <- all.table <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "OR (95% CI)", "OR (95% CI)", "OR", "Lower", "Upper"), nrow=1)#
all.table3 <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "RD (95% CI)", "RD (95% CI)", "RD", "Lower", "Upper"), nrow=1)#
# data <- data[complete.cases(data[, c("Y", var, runvars)]),]#
#
ivar <- 1
sort(full.data$Time_to_Randomization*24)
sort(full.data$Ictus_to_Enrolled*24)
table(full.data$Time_to_Randomization, full.data$Group_Assigned )
tryout
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
pdf(file=file.path(resdir, "Time_To_Randomization.pdf"))#
	at <- c(0, 8, 16, 24, 48, 72, 96)#
	hist(full.data$Ictus_to_Enrolled*24, breaks=at, xaxt='n', main="MISTIE Distribution of Time from Ictus to Randomization", prob=TRUE, xlab='Hours from Onset')#
	axis(1, at=at)#
dev.off()#
#
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
#
{#
#
	levs <- c("< 8 hrs", "8-24 hrs", "24-72 hrs", "> 72 hrs")#
	full.data$Time_to_Randomization <- NA#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 <= 8] <- levs[1]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 8 & full.data$Ictus_to_Enrolled * 24 <= 24] <- levs[2]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 24 & full.data$Ictus_to_Enrolled * 24 <= 72] <- levs[3]#
	#if (any(full.data$Ictus_to_Enrolled * 24 > 72)) stop("Here")#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 72] <- levs[4]#
	full.data$Time_to_Randomization <- factor(full.data$Time_to_Randomization, levels= levs)#
}#
    table(full.data$Time_to_Randomization)#
# levs <- c("< 1 Day","2 Day", "> 2 Days")#
# full.data$Time_To_Procedure <- NA#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure <= 1] <- levs[1]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 1 & full.data$Ictus_to_Op_Procedure <= 2] <- levs[2]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 2] <- levs[3]#
# full.data$Time_To_Procedure <- factor(full.data$Time_To_Procedure, levels= levs)#
# #
# ll <- c("Other", "African American")#
# full.data$African_American <- ll[as.numeric(full.data$Ethnicity == "African American not Hispanic") + 1]#
# full.data$African_American[full.data$Ethnicity == "Other or unknown"] <- NA#
# full.data$African_American <- factor(full.data$African_American, levels=ll)#
# full.data$Lob <- as.character(full.data$Lobar_BG_vs)#
# full.data$Lob[full.data$Lob == "Not Lobar"] <- "Deep"#
# full.data$Lob <- factor(full.data$Lob, levels= c("Lobar", "Deep"))#
# full.data$Lobar_BG_vs <- full.data$Lob#
#
full.data$ICH_Location <- full.data$Lobar_BG_vs#
#
xxfull.data <- full.data#
#Pct_Pre_10#
vname <- "Group_Assigned"#
#
full.data <-  xxfull.data#
# vname <- "Group_Assigned"#
ssub <- ""#
rvname <- vname#
vsub <- "Surgery"#
#
vars <- c("Age", "ICH_Pre_Rand_10", vname, "Enrollment_GCS_Add")#
cc <- complete.cases(full.data[, vars])#
if (any(!cc)){#
  # if ( !(full.data$patientName[!cc] %in% 289525) ) stop("Something is off about data")#
  stop("Something is off about data")#
}#
#
#### using ABC/2 From Site#
cc <- complete.cases(full.data[, vars])#
#### TAKE OUT WHEN UPDATED#
#
full.data[!cc, c("patientName", vars)]#
#
full.data <- full.data[cc, ]#
FD1 <- full.data#
### say 0 if want probs by group#
fup <- 180#
outvar <- paste("Bad_Outcome_Day_", fup, sep="")#
### Uncomment for Good outcome, comment for bad outcome#
#outvar <- gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)#
full.data[ gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)] <- full.data[, outvar] == 0#
full.data$Y <- as.numeric(full.data[, outvar] == 1)#
#full.data[, paste("Good_Outcome_Day_", fup, sep="")] <-#
# full.data[, outvar] <- NULL#
# , "Ictus_to_Proc", "Hemisphere", "Under_15cc", "African_American"#
runvars <- c("Age_Cat", "GCS_Cat", "Haematoma_volume", "Group_Assigned",  "ICH_Location", "Side_of_haematoma", "Time_to_Randomization")#
runvars <- runvars[ !runvars %in% rvname ]#
#
# else {#
# runvars <- runvars[ !runvars %in% rvname ]#
# }#
lrvar <- length(runvars)#
#
var <- vname#
mod.type <- ""#
#mod.type <- "Adj_"#
#
adder <- "Unadjusted "#
if (mod.type == "Adj_") adder <- "Adjusted "#
# all.table2 <- all.table <- c("Study or subcategory", "Surgical", "Medical", "N", "Odds Ratio (95% CI)", "Odds Ratio (95% CI)", "OR", "Lower", "Upper")#
# all.table3 <- c("Study or subcategory", "Surgical", "Medical", "N", "Risk Difference (95% CI)", "Risk Difference (95% CI)", "RD", "Lower", "Upper")#
#
all.table2 <- all.table <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "OR (95% CI)", "OR (95% CI)", "OR", "Lower", "Upper"), nrow=1)#
all.table3 <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "RD (95% CI)", "RD (95% CI)", "RD", "Lower", "Upper"), nrow=1)#
# data <- data[complete.cases(data[, c("Y", var, runvars)]),]#
#
ivar <- 1#
#
for (ivar in 1:lrvar){#
  rvar <- runvars[ivar]#
  varname <- gsub(rvar, pattern="_Cat.*", replacement="")#
  varname <- gsub(varname, pattern="_", replacement = " ")#
  all.table <- rbind(all.table, c(varname, rep(NA, ncol(all.table)-1 ) ))#
  all.table2 <- rbind(all.table2, c(varname, rep(NA, ncol(all.table2)-1 )))#
  all.table3 <- rbind(all.table3, c(varname, rep(NA, ncol(all.table3) -1)))#
  data <- full.data		#
  if (is.factor(data[, var])) {#
    ylevs <- levels(data[,var])#
  } else ylevs <- c(0, 1)		#
  data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
  vars <- c("Age", "ICH_Pre_Rand_10", "Treatment", "Enrollment_GCS_Add", "Y")#
  if (mod.type != "Adj_") vars <- c("Treatment", "Y")#
  cc <- complete.cases(data[, c(vars, rvar)])#
  data <- data[cc,]#
  levs <- levels(data[, rvar])#
  # all.MH <- matrix(NA, nrow=length(levs), ncol=4)#
  print(levs)#
  ilev <- 1#
  for (ilev in 1:length(levs)){#
    inlev <- data[, rvar] == levs[ilev]#
    dat <- data[inlev,]#
    tab <- table(dat$Group_Assigned, dat$Y)#
    print(tab)#
    ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
    nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
    ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
    pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
    # all.MH[ilev, 1] <- ntrt#
    # all.MH[ilev, 2] <- nctrl#
    # all.MH[ilev, 3] <- ptrt#
    # all.MH[ilev, 4] <- pctrl#
    dat$Treatment <- dat$T0#
    mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
    smod <- summary(mod)$coeff#
    if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
    print(smod)#
    ci <- smod["Treatment", ,drop = FALSE]#
    est <- exp(ci[, "Estimate"])#
    ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
    dat$Treatment <- 1#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p1hat <- predict(mod, newdat=dat, type="response")#
    dat$Treatment <- 0#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p0hat <- predict(mod, newdat=dat, type="response")#
    Ai <- dat$T0#
    Yi <- dat$Y#
    unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    if (ptrt == 0 | pctrl == 0 | ntrt == ptrt | nctrl == pctrl){#
    	cc <- 0.5    	 #
		  x <- tab#
		  x <- x + cc#
  	    SELOGOR = sqrt(1 /( x[1,1] + cc) + 1 / (x[1,2] + cc) + #
    	                        1 / (x[2,1] +cc) + 1 / (x[2,2] +cc))#
		  OR <- x[2,2]*x[1,1]/(x[1,2]* x[2,1])#
		  log.OR <- log(OR)#
		  ## they were n good / N, so need the table#
		CI <- log.OR + c(-1, 1) * qnorm(0.975) * SELOGOR#
      unadj$OR <- OR#
      OR.CI <- exp(CI)#
      unadj$OR.CI <- OR.CI#
      unadj$SE <- SELOGOR#
		  #stop("IT")#
    }#
    unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    dig <- 2#
    all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
    all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
    all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
  }#
}#
#
rvar <- "Surgery Time"#
all.table <- rbind(all.table, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table)-1 ) ))#
all.table2 <- rbind(all.table2, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table2)-1 )))#
all.table3 <- rbind(all.table3, c(gsub(rvar, pattern="_Cat.*", replacement=""), rep(NA, ncol(all.table3) -1)))#
#
rvar <- "Ictus_to_Proc1"#
#
data <- full.data		#
if (is.factor(data[, var])) {#
  ylevs <- levels(data[,var])#
} else ylevs <- c(0, 1)		#
data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
#
cc <- complete.cases(full.data[, c("Y", vars, rvar)])#
data <- data[cc,]#
levs <- levels(data[, rvar])#
# all.MH <- matrix(NA, nrow=length(levs)-1, ncol=4)#
print(levs)#
ilev <- 2#
#
for (ilev in 2:3){#
  inlev <- data[, rvar] %in% c("Medical", levs[ilev])#
  dat <- data[inlev,]#
  tab <- table(dat$Group_Assigned, dat$Y)#
  print(tab)#
  ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
  nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
  ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
  pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
  # all.MH[ilev-1, 1] <- ntrt#
  # all.MH[ilev-1, 2] <- nctrl#
  # all.MH[ilev-1, 3] <- ptrt#
  # all.MH[ilev-1, 4] <- pctrl#
  dat$Treatment <- dat$T0#
  mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
  smod <- summary(mod)$coeff#
  if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
  print(smod)#
  ci <- smod["Treatment", ,drop = FALSE]#
  est <- exp(ci[, "Estimate"])#
  ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
  dat$Treatment <- 1#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p1hat <- predict(mod, newdat=dat, type="response")#
  dat$Treatment <- 0#
  dat$Treatment[is.na(dat[, var])] <- NA#
  dat$p0hat <- predict(mod, newdat=dat, type="response")#
  Ai <- dat$T0#
  Yi <- dat$Y#
  unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  if (ptrt == 0 | pctrl == 0){#
    unadj$OR <- NA#
    unadj$OR.CI <- c(NA, NA)#
  }#
  unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
  dig <- 2#
  all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
  all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
  all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
}#
all.table <- cbind(all.table, c("OR_Check", rep("", nrow(all.table)-1))) #
col <- ncol(all.table)#
cols <- all.table[1,] %in% c("Surgical", "Medical")#
#
for (irow in 2:nrow(all.table)){#
  x <- all.table[irow, cols]#
  if (is.na(x[1]) & is.na(x[2])) next#
  x <- as.numeric(unlist(strsplit(x, split="/")))#
  ## they were n good / N, so need the table#
  x <- c(x[1], x[2]-x[1], x[3], x[4] - x[3])#
  tab <- matrix(as.numeric(x), ncol=2, byrow=TRUE)#
  if (any(tab == 0)) tab <- tab + 0.5#
  ## they're in reversed order#
  all.table[irow, col] <- tab[2,2]*tab[1,1]/(tab[1,2]* tab[2,1])#
}#
xtab <- all.table#
xtab <- xtab[2:nrow(xtab), ]#
colnames(xtab) <- all.table[1,]#
xtab <- as.data.frame(xtab, stringsAsFactors=FALSE)#
xtab$OR_Check <- as.numeric(xtab$OR_Check)#
xtab$OR <- as.numeric(xtab$OR)#
keep_MIS <- which(all.table[, 1] == "Surgery Time")#
tab2 <- all.table[1:(keep_MIS-1), ]#
colnames(tab2) <- c("Category", "Surgical", "Medical", "N", "MISTIE_OR.95.CI", "Drop", "MISTIE_OR", "Lower", "Upper", "OR_Check")#
tab2 <- data.frame(tab2, stringsAsFactors=FALSE)#
tab2$Drop <- NULL#
tryout <- merge(stich_data, tab2, by="Category", sort=FALSE, all=TRUE)#
#
for (icol in c("N_C", "n_C", "N_E", "n_E")) tryout[, icol] <- as.numeric(tryout[, icol])#
#
tryout$STICH_N <- tryout$N_C + tryout$N_E#
#tryout$n_C <- tryout$N_C <-tryout$N_E <-tryout$n_E <-NULL#
tryout$OR_Check <- NULL#
#
tryout$STICH_RD.Lower <- tryout$STICH_RD.Upper <- tryout$STICH_RD.CI <- tryout$STICH_RD <- NA#
#
for (irow in 2:nrow(tryout)){#
	dat <- tryout[irow, c("n_E", "N_E", "n_C",  "N_C")]#
	if (any(is.na(dat))) next;#
	n <- as.numeric(dat[, c("n_E", "n_C")])#
	N <- as.numeric(dat[, c("N_E", "N_C")])#
	rd <- prop.test(n, N)#
	dig <- 1#
	RD <- round(diff(rd$estimate)*100, dig)#
	CI <- round(rd$conf.int*100, dig)#
	tryout$STICH_RD.CI[irow] <- paste(RD, " (", CI[1], ", ", CI[2], ")", sep="")#
	tryout$STICH_RD.Lower[irow] <- CI[1]#
	tryout$STICH_RD.Upper[irow] <- CI[2]#
	tryout$STICH_RD[irow] <- RD#
}#
rownames(tryout) <- tryout$Category#
cats <- c("Study or subcategory", "Age", levels(full.data$Age_Cat), "GCS", levels(full.data$GCS_Cat), "Side of haematoma", levels(full.data$Side_of_haematoma), c("Site of haematoma"), levels(full.data$ICH_Location), "Haematoma volume", levels(full.data$Haematoma_volume), "Time to Randomization", levels(full.data$Time_to_Randomization))#
#
tryout <- tryout[cats, ]#
rownames(tryout) <- NULL#
#
# cis <- sapply(strsplit(tryout$OR.95..CI, split=" "), function(x) ifelse(length(x) > 0, x[2], NA))#
# cis <- gsub(cis, pattern="(", replacement = "", fixed=TRUE)#
# cis <- gsub(cis, pattern=")", replacement = "", fixed=TRUE)#
# cis <- gsub(cis, pattern="–", replacement = "-", fixed=TRUE)#
# cis <- strsplit(cis, split="-")#
# cis <- lapply(cis, as.numeric)#
# cis <- do.call("rbind", cis)#
# tryout$STICH_Lower <- cis[,1]#
# tryout$STICH_Upper <- cis[,2]#
# tryout$STICH_Lower[1] <- "Lower"#
# tryout$STICH_Upper[1] <- "Upper"#
#
tryout$Conservative[1] <- "Conservative" #
tryout$Early[1] <- "Early" #
#Initial conservative treatment n/N#
tryout$OR.95..CI[1] <- "OR 95% CI"#
tryout$Category[1] <- "Subgroups"#
tryout$OR[1] <- "OR"#
tryout$STICH_N[1] <- "N"
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
pdf(file=file.path(resdir, "Time_To_Randomization.pdf"))#
	at <- c(0, 8, 16, 24, 48, 72, 96)#
	hist(full.data$Ictus_to_Enrolled*24, breaks=at, xaxt='n', main="MISTIE Distribution of Time from Ictus to Randomization", prob=TRUE, xlab='Hours from Onset')#
	axis(1, at=at)#
dev.off()#
#
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
#
{#
#
	levs <- c("< 8 hrs", "8-24 hrs", "24-72 hrs", "> 72 hrs")#
	full.data$Time_to_Randomization <- NA#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 <= 8] <- levs[1]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 8 & full.data$Ictus_to_Enrolled * 24 <= 24] <- levs[2]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 24 & full.data$Ictus_to_Enrolled * 24 <= 72] <- levs[3]#
	#if (any(full.data$Ictus_to_Enrolled * 24 > 72)) stop("Here")#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 72] <- levs[4]#
	full.data$Time_to_Randomization <- factor(full.data$Time_to_Randomization, levels= levs)#
}#
    table(full.data$Time_to_Randomization)#
# levs <- c("< 1 Day","2 Day", "> 2 Days")#
# full.data$Time_To_Procedure <- NA#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure <= 1] <- levs[1]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 1 & full.data$Ictus_to_Op_Procedure <= 2] <- levs[2]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 2] <- levs[3]#
# full.data$Time_To_Procedure <- factor(full.data$Time_To_Procedure, levels= levs)#
# #
# ll <- c("Other", "African American")#
# full.data$African_American <- ll[as.numeric(full.data$Ethnicity == "African American not Hispanic") + 1]#
# full.data$African_American[full.data$Ethnicity == "Other or unknown"] <- NA#
# full.data$African_American <- factor(full.data$African_American, levels=ll)#
# full.data$Lob <- as.character(full.data$Lobar_BG_vs)#
# full.data$Lob[full.data$Lob == "Not Lobar"] <- "Deep"#
# full.data$Lob <- factor(full.data$Lob, levels= c("Lobar", "Deep"))#
# full.data$Lobar_BG_vs <- full.data$Lob#
#
full.data$ICH_Location <- full.data$Lobar_BG_vs#
#
xxfull.data <- full.data#
#Pct_Pre_10#
vname <- "Group_Assigned"#
#
full.data <-  xxfull.data#
# vname <- "Group_Assigned"#
ssub <- ""#
rvname <- vname#
vsub <- "Surgery"#
#
vars <- c("Age", "ICH_Pre_Rand_10", vname, "Enrollment_GCS_Add")#
cc <- complete.cases(full.data[, vars])#
if (any(!cc)){#
  # if ( !(full.data$patientName[!cc] %in% 289525) ) stop("Something is off about data")#
  stop("Something is off about data")#
}#
#
#### using ABC/2 From Site#
cc <- complete.cases(full.data[, vars])#
#### TAKE OUT WHEN UPDATED#
#
full.data[!cc, c("patientName", vars)]#
#
full.data <- full.data[cc, ]#
FD1 <- full.data#
### say 0 if want probs by group#
fup <- 180#
outvar <- paste("Bad_Outcome_Day_", fup, sep="")#
### Uncomment for Good outcome, comment for bad outcome#
#outvar <- gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)#
full.data[ gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)] <- full.data[, outvar] == 0#
full.data$Y <- as.numeric(full.data[, outvar] == 1)#
#full.data[, paste("Good_Outcome_Day_", fup, sep="")] <-#
# full.data[, outvar] <- NULL#
# , "Ictus_to_Proc", "Hemisphere", "Under_15cc", "African_American"#
runvars <- c("Age_Cat", "GCS_Cat", "Haematoma_volume", "Group_Assigned",  "ICH_Location", "Side_of_haematoma", "Time_to_Randomization")#
runvars <- runvars[ !runvars %in% rvname ]#
#
# else {#
# runvars <- runvars[ !runvars %in% rvname ]#
# }#
lrvar <- length(runvars)#
#
var <- vname#
mod.type <- ""#
#mod.type <- "Adj_"#
#
adder <- "Unadjusted "#
if (mod.type == "Adj_") adder <- "Adjusted "#
# all.table2 <- all.table <- c("Study or subcategory", "Surgical", "Medical", "N", "Odds Ratio (95% CI)", "Odds Ratio (95% CI)", "OR", "Lower", "Upper")#
# all.table3 <- c("Study or subcategory", "Surgical", "Medical", "N", "Risk Difference (95% CI)", "Risk Difference (95% CI)", "RD", "Lower", "Upper")#
#
all.table2 <- all.table <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "OR (95% CI)", "OR (95% CI)", "OR", "Lower", "Upper"), nrow=1)#
all.table3 <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "RD (95% CI)", "RD (95% CI)", "RD", "Lower", "Upper"), nrow=1)#
# data <- data[complete.cases(data[, c("Y", var, runvars)]),]#
#
ivar <- 1#
#
for (ivar in 1:lrvar){#
  rvar <- runvars[ivar]#
  varname <- gsub(rvar, pattern="_Cat.*", replacement="")#
  varname <- gsub(varname, pattern="_", replacement = " ")#
  all.table <- rbind(all.table, c(varname, rep(NA, ncol(all.table)-1 ) ))#
  all.table2 <- rbind(all.table2, c(varname, rep(NA, ncol(all.table2)-1 )))#
  all.table3 <- rbind(all.table3, c(varname, rep(NA, ncol(all.table3) -1)))#
  data <- full.data		#
  if (is.factor(data[, var])) {#
    ylevs <- levels(data[,var])#
  } else ylevs <- c(0, 1)		#
  data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
  vars <- c("Age", "ICH_Pre_Rand_10", "Treatment", "Enrollment_GCS_Add", "Y")#
  if (mod.type != "Adj_") vars <- c("Treatment", "Y")#
  cc <- complete.cases(data[, c(vars, rvar)])#
  data <- data[cc,]#
  levs <- levels(data[, rvar])#
  # all.MH <- matrix(NA, nrow=length(levs), ncol=4)#
  print(levs)#
  ilev <- 1#
  for (ilev in 1:length(levs)){#
    inlev <- data[, rvar] == levs[ilev]#
    dat <- data[inlev,]#
    tab <- table(dat$Group_Assigned, dat$Y)#
    print(tab)#
    ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
    nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
    ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
    pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
    # all.MH[ilev, 1] <- ntrt#
    # all.MH[ilev, 2] <- nctrl#
    # all.MH[ilev, 3] <- ptrt#
    # all.MH[ilev, 4] <- pctrl#
    dat$Treatment <- dat$T0#
    mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
    smod <- summary(mod)$coeff#
    if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
    print(smod)#
    ci <- smod["Treatment", ,drop = FALSE]#
    est <- exp(ci[, "Estimate"])#
    ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
    dat$Treatment <- 1#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p1hat <- predict(mod, newdat=dat, type="response")#
    dat$Treatment <- 0#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p0hat <- predict(mod, newdat=dat, type="response")#
    Ai <- dat$T0#
    Yi <- dat$Y#
    unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    if (ptrt == 0 | pctrl == 0 | ntrt == ptrt | nctrl == pctrl){#
    	cc <- 0.5    	 #
		  x <- tab#
		  x <- x + cc#
  	    SELOGOR = sqrt(1 /( x[1,1] + cc) + 1 / (x[1,2] + cc) + #
    	                        1 / (x[2,1] +cc) + 1 / (x[2,2] +cc))#
		  OR <- x[2,2]*x[1,1]/(x[1,2]* x[2,1])#
		  log.OR <- log(OR)#
		  ## they were n good / N, so need the table#
		CI <- log.OR + c(-1, 1) * qnorm(0.975) * SELOGOR#
      unadj$OR <- OR#
      OR.CI <- exp(CI)#
      unadj$OR.CI <- OR.CI#
      unadj$SE <- SELOGOR#
		  #stop("IT")#
    }#
    unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    dig <- 2#
    all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
    all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
    all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
  }#
}
tab
any(dim(tab) == 1)
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
RD <- function() setwd(file.path(homedir, "stataprograms"))#
#
library(rmeta)#
library(tm)#
#
load(file.path(homedir, "statacalc", 'STICH_Data.Rda'))#
expit <- function(x) return( exp(x)/( 1+exp(x) ) )#
OR.it <- function(x) return( x/( 1-x ) )#
#
tab <- function(..., useNA=c("no", "ifany", "always"), col=FALSE, row=FALSE, missing=FALSE){#
  if (missing) useNA = "ifany"#
  the.tab <- table(..., useNA=useNA)#
  print(the.tab)#
  rs <- matrix(rowSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=FALSE)#
  cs <- matrix(colSums(the.tab), ncol=ncol(the.tab), nrow=nrow(the.tab), byrow=TRUE)#
  if (row) print(the.tab/rs)#
  if (col) print(the.tab/cs)#
}#
#
OR.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  OR1 <- 1/(p1hat *{1-p1hat}) #
  OR2 <- 1/({1-p0hat} * p0hat) #
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({OR1 * S1 - OR2*S2}^2))#
  CI <- log.OR + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(log.OR/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  OR <- exp(log.OR)#
  OR.CI <- exp(CI)#
  return(list(CI=CI, log.OR=log.OR, SE = SE, sig=sig, sig2=sig2, OR=OR, OR.CI=OR.CI, pval=pval))#
}#
#
RD.ci <- function(Ai, Yi, mu_1, mu_0){#
  ## check if something is wrong#
  p1hat <- mean(mu_1)#
  p0hat <- mean(mu_0)#
  log.OR <- log( {p1hat/(1-p1hat)} / {p0hat/(1-p0hat)} )#
  n <- length(mu_1)#
  if (n != length(mu_0) | n != length(Yi) | n != length(Ai)) stop("Something is wrong with input")#
  rd <- p1hat - p0hat#
  S1 <- (Ai/0.5) * (Yi - mu_1) + mu_1 - p1hat#
  S2 <- ((1-Ai)/0.5) * (Yi - mu_0) + mu_0 - p0hat#
  SE <- sqrt(1/(n^2) * sum({S1 - S2}^2))#
  CI <- rd + c(-1, 1) * qnorm(0.975) * SE#
  pval <- pnorm(abs(rd/SE), lower.tail=FALSE)#
  ### just see if significantly less than 0#
  sig <- CI[2] < 0 | CI[1] > 0#
  sig2 <- CI[2] < 0#
  return(list(CI=CI, rd=rd, SE = SE, sig=sig, sig2=sig2, p1hat=p1hat, p0hat=p0hat, pval=pval))#
}	#
#
dropices <- function(data){#
  data <- data[ (data$Group_Assigned == "Medical" | (data$patientName %% 1000) < 500),  ]#
}#
full.data <- read.csv(file=file.path(homedir, "statacalc", "All_180_FollowUp_wDemographics.csv"), header=TRUE, stringsAsFactors=FALSE)#
full.data <- dropices(full.data)#
pdf(file=file.path(resdir, "Time_To_Randomization.pdf"))#
	at <- c(0, 8, 16, 24, 48, 72, 96)#
	hist(full.data$Ictus_to_Enrolled*24, breaks=at, xaxt='n', main="MISTIE Distribution of Time from Ictus to Randomization", prob=TRUE, xlab='Hours from Onset')#
	axis(1, at=at)#
dev.off()#
#
full.data$Pct_Remaining <- full.data$EOT_ICHVolume / full.data$ICH_Pre_Rand_10 * 100#
#
full.data$Under_15cc <- NULL#
full.data$Under_15cc <- NA#
#
full.data$Under_15cc[ full.data$ICH_EOT <= 1.5 ] <- "Less or equal to 15cc at EOT"#
full.data$Under_15cc[ full.data$ICH_EOT > 1.5 ] <- "More than 15cc at EOT"#
#
full.data$Under_15cc[full.data$Under_15cc == ""] <- NA#
full.data$Under_15cc <- factor(full.data$Under_15cc, levels=c("More than 15cc at EOT", "Less or equal to 15cc at EOT"))#
full.data$Any_IVH <- as.numeric(full.data$IVH_Pre_Rand_10 > 0)#
full.data$Any_IVH_EOT <- as.numeric(full.data$IVH_EOT_10 > 0)#
for (icol in 1:ncol(full.data)) {#
  if (class(full.data[, icol]) == "character") {#
    x <- full.data[, icol]#
    x[x == ""] <- NA#
    full.data[, icol] <- factor(x)#
  }#
}#
head(full.data)#
ll <- c("Medical", "< 36 hours", ">= 36 hours")#
full.data$Ictus_to_Proc1 <- ll[(full.data$Ictus_to_Op_Procedure* 24 >= 36) + 2]#
full.data$Ictus_to_Proc1[ full.data$Group_Assigned == "Medical" ] <- "Medical"#
full.data$Ictus_to_Proc1 <- factor(full.data$Ictus_to_Proc1, levels=ll)#
#
full.data$Ictus_to_Proc2 <- full.data$Ictus_to_Proc1#
#
levs <- c("< 65", ">= 65")#
full.data$Age_Cat <- NA#
full.data$Age_Cat[full.data$Age < 65] <- levs[1]#
full.data$Age_Cat[full.data$Age >= 65] <- levs[2]#
full.data$Age_Cat <- factor(full.data$Age_Cat, levels= levs)#
#
if (sum(full.data$Enrollment_GCS_Add < 3) > 0 ) stop("GCS Wrong")#
levs <- c("3-8", "9-12", "13-15")#
full.data$GCS_Cat <- NA#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add <= 8] <- levs[1]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 9 & full.data$Enrollment_GCS_Add <= 12] <- levs[2]#
full.data$GCS_Cat[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[3]#
full.data$GCS_Cat <- factor(full.data$GCS_Cat, levels= levs)#
#
# levs <- c("3-12","13-15")#
# full.data$GCS_Cat2 <- NA#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add <= 12] <- levs[1]#
# full.data$GCS_Cat2[full.data$Enrollment_GCS_Add >= 13 & full.data$Enrollment_GCS_Add <= 15] <- levs[2]#
# full.data$GCS_Cat2 <- factor(full.data$GCS_Cat2, levels= levs)#
#
# levs <- c("20-40","40-60", "> 60")#
# full.data$Randomization_ICH_Cat <- NA#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 <= 4] <- levs[1]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 4 & full.data$ICH_Pre_Rand_10 <= 6] <- levs[2]#
# full.data$Randomization_ICH_Cat[full.data$ICH_Pre_Rand_10 > 6] <- levs[3]#
# full.data$Randomization_ICH_Cat <- factor(full.data$Randomization_ICH_Cat, levels= levs)#
{#
  levs <- c("<= 50 mL", "> 50 mL")#
  full.data$Haematoma_volume <- NA#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 <= 5] <- levs[1]#
  full.data$Haematoma_volume[full.data$ICH_Pre_Rand_10 > 5] <- levs[2]#
  full.data$Haematoma_volume <- factor(full.data$Haematoma_volume, levels= levs)#
}#
#
{#
  levs <- c("Left hemisphere", "Right hemisphere")#
  full.data$Side_of_haematoma <- NA#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Left"] <- levs[1]#
  full.data$Side_of_haematoma[full.data$Hemisphere == "Right"] <- levs[2]#
  full.data$Side_of_haematoma <- factor(full.data$Side_of_haematoma, levels= levs)#
}  #
#
{#
#
	levs <- c("< 8 hrs", "8-24 hrs", "24-72 hrs", "> 72 hrs")#
	full.data$Time_to_Randomization <- NA#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 <= 8] <- levs[1]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 8 & full.data$Ictus_to_Enrolled * 24 <= 24] <- levs[2]#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 24 & full.data$Ictus_to_Enrolled * 24 <= 72] <- levs[3]#
	#if (any(full.data$Ictus_to_Enrolled * 24 > 72)) stop("Here")#
	full.data$Time_to_Randomization[full.data$Ictus_to_Enrolled * 24 > 72] <- levs[4]#
	full.data$Time_to_Randomization <- factor(full.data$Time_to_Randomization, levels= levs)#
}#
    table(full.data$Time_to_Randomization)#
# levs <- c("< 1 Day","2 Day", "> 2 Days")#
# full.data$Time_To_Procedure <- NA#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure <= 1] <- levs[1]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 1 & full.data$Ictus_to_Op_Procedure <= 2] <- levs[2]#
# full.data$Time_To_Procedure[full.data$Ictus_to_Op_Procedure > 2] <- levs[3]#
# full.data$Time_To_Procedure <- factor(full.data$Time_To_Procedure, levels= levs)#
# #
# ll <- c("Other", "African American")#
# full.data$African_American <- ll[as.numeric(full.data$Ethnicity == "African American not Hispanic") + 1]#
# full.data$African_American[full.data$Ethnicity == "Other or unknown"] <- NA#
# full.data$African_American <- factor(full.data$African_American, levels=ll)#
# full.data$Lob <- as.character(full.data$Lobar_BG_vs)#
# full.data$Lob[full.data$Lob == "Not Lobar"] <- "Deep"#
# full.data$Lob <- factor(full.data$Lob, levels= c("Lobar", "Deep"))#
# full.data$Lobar_BG_vs <- full.data$Lob#
#
full.data$ICH_Location <- full.data$Lobar_BG_vs#
#
xxfull.data <- full.data#
#Pct_Pre_10#
vname <- "Group_Assigned"#
#
full.data <-  xxfull.data#
# vname <- "Group_Assigned"#
ssub <- ""#
rvname <- vname#
vsub <- "Surgery"#
#
vars <- c("Age", "ICH_Pre_Rand_10", vname, "Enrollment_GCS_Add")#
cc <- complete.cases(full.data[, vars])#
if (any(!cc)){#
  # if ( !(full.data$patientName[!cc] %in% 289525) ) stop("Something is off about data")#
  stop("Something is off about data")#
}#
#
#### using ABC/2 From Site#
cc <- complete.cases(full.data[, vars])#
#### TAKE OUT WHEN UPDATED#
#
full.data[!cc, c("patientName", vars)]#
#
full.data <- full.data[cc, ]#
FD1 <- full.data#
### say 0 if want probs by group#
fup <- 180#
outvar <- paste("Bad_Outcome_Day_", fup, sep="")#
### Uncomment for Good outcome, comment for bad outcome#
#outvar <- gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)#
full.data[ gsub(outvar, pattern="Bad_", replacement="Good_", fixed=TRUE)] <- full.data[, outvar] == 0#
full.data$Y <- as.numeric(full.data[, outvar] == 1)#
#full.data[, paste("Good_Outcome_Day_", fup, sep="")] <-#
# full.data[, outvar] <- NULL#
# , "Ictus_to_Proc", "Hemisphere", "Under_15cc", "African_American"#
runvars <- c("Age_Cat", "GCS_Cat", "Haematoma_volume", "Group_Assigned",  "ICH_Location", "Side_of_haematoma", "Time_to_Randomization")#
runvars <- runvars[ !runvars %in% rvname ]#
#
# else {#
# runvars <- runvars[ !runvars %in% rvname ]#
# }#
lrvar <- length(runvars)#
#
var <- vname#
mod.type <- ""#
#mod.type <- "Adj_"#
#
adder <- "Unadjusted "#
if (mod.type == "Adj_") adder <- "Adjusted "#
# all.table2 <- all.table <- c("Study or subcategory", "Surgical", "Medical", "N", "Odds Ratio (95% CI)", "Odds Ratio (95% CI)", "OR", "Lower", "Upper")#
# all.table3 <- c("Study or subcategory", "Surgical", "Medical", "N", "Risk Difference (95% CI)", "Risk Difference (95% CI)", "RD", "Lower", "Upper")#
#
all.table2 <- all.table <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "OR (95% CI)", "OR (95% CI)", "OR", "Lower", "Upper"), nrow=1)#
all.table3 <- matrix(c("Study or subcategory", "Surgical", "Medical", "N", "RD (95% CI)", "RD (95% CI)", "RD", "Lower", "Upper"), nrow=1)#
# data <- data[complete.cases(data[, c("Y", var, runvars)]),]#
#
ivar <- 1#
#
for (ivar in 1:lrvar){#
  rvar <- runvars[ivar]#
  varname <- gsub(rvar, pattern="_Cat.*", replacement="")#
  varname <- gsub(varname, pattern="_", replacement = " ")#
  all.table <- rbind(all.table, c(varname, rep(NA, ncol(all.table)-1 ) ))#
  all.table2 <- rbind(all.table2, c(varname, rep(NA, ncol(all.table2)-1 )))#
  all.table3 <- rbind(all.table3, c(varname, rep(NA, ncol(all.table3) -1)))#
  data <- full.data		#
  if (is.factor(data[, var])) {#
    ylevs <- levels(data[,var])#
  } else ylevs <- c(0, 1)		#
  data$Treatment <- data$T0 <- as.numeric(data[, var] == ylevs[2])#
  vars <- c("Age", "ICH_Pre_Rand_10", "Treatment", "Enrollment_GCS_Add", "Y")#
  if (mod.type != "Adj_") vars <- c("Treatment", "Y")#
  cc <- complete.cases(data[, c(vars, rvar)])#
  data <- data[cc,]#
  levs <- levels(data[, rvar])#
  # all.MH <- matrix(NA, nrow=length(levs), ncol=4)#
  print(levs)#
  ilev <- 1#
  for (ilev in 1:length(levs)){#
    inlev <- data[, rvar] == levs[ilev]#
    dat <- data[inlev,]#
    tab <- table(dat$Group_Assigned, dat$Y)#
    print(tab)#
    ntrt <- sum(dat[, var] == ylevs[2], na.rm=TRUE)#
    nctrl <- sum(dat[, var] == ylevs[1], na.rm=TRUE)#
    ptrt <- sum(dat[, var] == ylevs[2] & dat$Y == 1, na.rm=TRUE)#
    pctrl <- sum(dat[, var] == ylevs[1] & dat$Y == 1, na.rm=TRUE)#
    # all.MH[ilev, 1] <- ntrt#
    # all.MH[ilev, 2] <- nctrl#
    # all.MH[ilev, 3] <- ptrt#
    # all.MH[ilev, 4] <- pctrl#
    dat$Treatment <- dat$T0#
    mod <- glm(Y ~ ., dat=dat[, vars], family=binomial)#
    smod <- summary(mod)$coeff#
    if ( !("Treatment" %in% rownames(smod))) smod <- rbind(smod, Treatment=rep(NA, ncol(smod)))#
    print(smod)#
    ci <- smod["Treatment", ,drop = FALSE]#
    est <- exp(ci[, "Estimate"])#
    ci <- exp(c(ci[, "Estimate"] - qnorm(0.975)*ci[, "Std. Error"], ci[, "Estimate"] + qnorm(0.975)*ci[, "Std. Error"]))#
    dat$Treatment <- 1#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p1hat <- predict(mod, newdat=dat, type="response")#
    dat$Treatment <- 0#
    dat$Treatment[is.na(dat[, var])] <- NA#
    dat$p0hat <- predict(mod, newdat=dat, type="response")#
    Ai <- dat$T0#
    Yi <- dat$Y#
    unadj <- OR.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    if (ptrt == 0 | pctrl == 0 | ntrt == ptrt | nctrl == pctrl){#
    	if (any(dim(tab) == 1)){#
    		      unadj$OR <- NA#
    		  OR.CI <- exp(c(NA, NA))#
		      unadj$OR.CI <- OR.CI#
      		unadj$SE <- NA#
    		}#
    	cc <- 0.5    	 #
		  x <- tab#
		  x <- x + cc#
  	    SELOGOR = sqrt(1 /( x[1,1] + cc) + 1 / (x[1,2] + cc) + #
    	                        1 / (x[2,1] +cc) + 1 / (x[2,2] +cc))#
		  OR <- x[2,2]*x[1,1]/(x[1,2]* x[2,1])#
		  log.OR <- log(OR)#
		  ## they were n good / N, so need the table#
		CI <- log.OR + c(-1, 1) * qnorm(0.975) * SELOGOR#
      unadj$OR <- OR#
      OR.CI <- exp(CI)#
      unadj$OR.CI <- OR.CI#
      unadj$SE <- SELOGOR#
		  #stop("IT")#
    }#
    unadj.rd <- RD.ci(Ai, Yi, dat$p1hat, dat$p0hat)#
    dig <- 2#
    all.table <- rbind(all.table, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj$OR, dig), " (", round(unadj$OR.CI[1], dig), ", ", round(unadj$OR.CI[2], dig),   ")", sep=""), NA, unadj$OR, unadj$OR.CI[1], unadj$OR.CI[2]))#
    all.table3 <- rbind(all.table3, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(unadj.rd$rd, dig), " (", round(unadj.rd$CI[1], dig), ", ", round(unadj.rd$CI[2], dig),   ")", sep=""), NA, unadj.rd$rd, unadj.rd$CI[1], unadj.rd$CI[2]))	#
    all.table2 <- rbind(all.table2, c(levs[ilev], paste(ptrt, ntrt, sep="/"), paste(pctrl, nctrl, sep="/"), ntrt+nctrl, paste(round(est, dig), " (", round(ci[1], dig), ", ", round(ci[2], dig),   ")", sep=""), NA, est, ci[1], ci[2]))			#
  }#
}
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
basedir = file.path("/Users", username, "Dropbox/CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(homedir, "results")#
progdir <- file.path(homedir, "stataprograms")#
RD <- function() setwd(progdir)#
library(binom)#
library(rmeta)#
library(tm)#
library(RColorBrewer)#
source(file.path(progdir, "Forestplot2.R"))#
source(file.path(progdir, "Forestplot3.R"))#
#
load(file=file.path(homedir, "statacalc", 'MISTIE_STICH_Data.Rda'))#
#
tryout$Category[tryout$Category == "Site of haematoma"] <- "Site"#
tryout$Category[tryout$Category == "Haematoma volume"] <- "ICH Volume"#
tryout$Category[tryout$Category == "Time to Randomization"] <- "To Randomization"#
##### PLOTS START HERE#
		# where the main should be put#
		myy <- 0.82#
#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		## font size#
		fs <- 8.5#
		## graph width#
		gwidth <- 3.5#
		addci <- ""#
			# addci <- ".95.CI"#
		ranges <- c(0.15, 2.5)#
		xrange <- clip <- log(ranges)#
		xticks <- unique(c(ranges[1], 0.5, 1, 1.5, 2, ranges[2]))#
#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		indent <- "  "#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		fs <- 15#
		gwidth <- 2.5#
		below <- TRUE		#
	    yy <- c(0.78)#
		if (below) yy <- c(0.15)#
		# myy <- 0.9#
	    # dev.off()#
		l <- as.numeric(tryout$STICH_Lower)#
		m <- as.numeric(tryout$OR)#
		u <- as.numeric(tryout$STICH_Upper)#
		fontsize <- rep(fs, length(m))#
		# fontsize[tryout$Category == "Time to Randomization"] <- fs/1.5			#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
   		color.levs <- brewer.pal(9,"PuBu")#
		cols <- rep(color.levs[9], length(m))#
		# cols[tabletext$Category == ">= 36 hours"] <- "red"#
		# cols[tabletext$Category == "<= 50 mL"] <- "orange"#
		# cols[tabletext$Category == "> 50 mL"] <- "orange"#
		# cols[tabletext$Category == "Not Lobar"] <- "green"		#
#		cols[makered] <- "red"#
		textcols <- rep("black", length(m))#
#		textcols[tabletext$Category=="Not Lobar"] <- "black"#
		lcols <- rep(color.levs[5], length(m))#
#		lcols <- paste("dark", cols, sep="")#
 	    tryout2 <- tryout#
   		is.summary <- is.na(as.numeric(tryout2$OR))#
#
		tryout2$Category[!is.summary] <- paste("", tryout2$Category[!is.summary], sep=indent)   	    #
	    pdf(file=file.path(resdir, "Toy_Study2.pdf"))#
	    xx <- c(0.645, 0.86) + addit - 0.052*(addci == "")#
#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
#
		tabletext <- tryout[, c("Category")]#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	#
		tabletext$Category <- ""#
		tabletext$Category[1] <- NA#
		is.summary <- is.na(as.numeric(tryout$OR))#
		fontsize[is.summary] <- fontsize[is.summary]*1.2#
   		makered <- tryout2$Category %in% paste(indent, c(">= 36 hours", "<= 50 mL", "> 50 mL", "Not Lobar"), sep="")#
		forestplot2(tabletext, log(m), log(l), log(u), clip=clip, zero=0, xlog=TRUE, is.summary=is.summary  , #
			 col=meta.colors(box=cols,line=lcols, summary="royalblue", text=textcols), fontsize=fontsize, xticks=xticks, graphwidth=unit(gwidth, "inches"), xrange=xrange, cgap=unit(0, "mm"))#
		main <- paste("Odds Ratios for Study 2, Log scale", sep="")#
	    grid.text(main, x=unit(0.5, "npc"), y=unit(myy, "npc"), gp=gpar(fontsize=fs))#
   		grid.text("Favors: Trt", x=unit(xx[1]-0.25, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs))    #
   		# 0.78#
   		grid.text("Placebo", x=unit(xx[2]-0.2 - .025*(gwidth== 2.5), "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs)) #
  	    dev.off() #
		addci <- ""#
			# addci <- ".95.CI"#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		l <- as.numeric(tryout$Lower)#
		m <- as.numeric(tryout$MISTIE_OR)#
		u <- as.numeric(tryout$Upper)#
		tabletext <- tryout[, c("Category")] #"MISTIE_OR.95.CI"#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	    	    	#
	pdf(file=file.path(resdir, "Toy_Study1.pdf"))#
#
	    xx <- c(0.62, 0.83) + addit#
		is.summary <- is.na(as.numeric(tryout$MISTIE_OR))#
		tabletext$Category[!is.summary] <- paste("", tabletext$Category[!is.summary], sep=indent)#
   		makered <- tabletext$Category %in% paste(indent, c(">= 36 hours", "<= 50 mL", "> 50 mL", "Not Lobar"), sep="")#
		cols <- rep(color.levs[9], length(m))#
		# cols[tabletext$Category == ">= 36 hours"] <- "red"#
		# cols[tabletext$Category == "<= 50 mL"] <- "orange"#
		# cols[tabletext$Category == "> 50 mL"] <- "orange"#
		# cols[tabletext$Category == "Not Lobar"] <- "green"		#
#		cols[makered] <- "red"#
		textcols <- rep("black", length(m))#
#		textcols[tabletext$Category=="Not Lobar"] <- "black"#
		lcols <- rep(color.levs[5], length(m))#
#		lcols <- paste("dark", cols, sep="")#
		# lcols <- paste("dark", cols, sep="")#
		# lcols[cols == "royalblue"] <- "darkblue"#
		# textcols <- rep("gray", length(m))#
		# textcols[tabletext$Category=="Not Lobar"] <- "black"#
		forestplot2(tabletext, log(m), log(l), log(u), clip=clip, zero=0, xlog=TRUE, is.summary= is.summary , #
			 col=meta.colors(box=cols,line=lcols, summary="royalblue", text=textcols), fontsize=fontsize, graphwidth=unit(gwidth, "inches"), xrange=xrange, cgap=unit(0, "mm"), xticks=xticks)#
		main <- paste("Odds Ratios for Study1 Log scale", sep="")#
	    grid.text(main, x=unit(0.5, "npc"), y=unit(myy, "npc"), gp=gpar(fontsize=fs))#
   		grid.text("Favors: Trt", x=unit(xx[1]-0.1, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs))    #
   		grid.text("Placebo", x=unit(xx[2]-0.075, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs)) #
	  dev.off()
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
dropdir <- file.path("/Users", username, "Dropbox")#
basedir = file.path(dropdir, "CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(dropdir, "Hopstat", "Forestplot2")#
progdir <- file.path(homedir, "stataprograms")#
RD <- function() setwd(progdir)#
library(binom)#
library(rmeta)#
library(tm)#
library(RColorBrewer)#
source(file.path(progdir, "Forestplot2.R"))#
source(file.path(progdir, "Forestplot3.R"))#
#
load(file=file.path(homedir, "statacalc", 'MISTIE_STICH_Data.Rda'))#
#
tryout$Category[tryout$Category == "Site of haematoma"] <- "Site"#
tryout$Category[tryout$Category == "Haematoma volume"] <- "ICH Volume"#
tryout$Category[tryout$Category == "Time to Randomization"] <- "To Randomization"#
##### PLOTS START HERE#
		# where the main should be put#
		myy <- 0.82#
#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		## font size#
		fs <- 8.5#
		## graph width#
		gwidth <- 3.5#
		addci <- ""#
			# addci <- ".95.CI"#
		ranges <- c(0.15, 2.5)#
		xrange <- clip <- log(ranges)#
		xticks <- unique(c(ranges[1], 0.5, 1, 1.5, 2, ranges[2]))#
#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		indent <- "  "#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		fs <- 15#
		gwidth <- 2.5#
		below <- TRUE		#
	    yy <- c(0.78)#
		if (below) yy <- c(0.15)#
		# myy <- 0.9#
	    # dev.off()#
		l <- as.numeric(tryout$STICH_Lower)#
		m <- as.numeric(tryout$OR)#
		u <- as.numeric(tryout$STICH_Upper)#
		fontsize <- rep(fs, length(m))#
		# fontsize[tryout$Category == "Time to Randomization"] <- fs/1.5			#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
   		color.levs <- brewer.pal(9,"PuBu")#
		cols <- rep(color.levs[9], length(m))#
		# cols[tabletext$Category == ">= 36 hours"] <- "red"#
		# cols[tabletext$Category == "<= 50 mL"] <- "orange"#
		# cols[tabletext$Category == "> 50 mL"] <- "orange"#
		# cols[tabletext$Category == "Not Lobar"] <- "green"		#
#		cols[makered] <- "red"#
		textcols <- rep("black", length(m))#
#		textcols[tabletext$Category=="Not Lobar"] <- "black"#
		lcols <- rep(color.levs[5], length(m))#
#		lcols <- paste("dark", cols, sep="")#
 	    tryout2 <- tryout#
   		is.summary <- is.na(as.numeric(tryout2$OR))#
#
		tryout2$Category[!is.summary] <- paste("", tryout2$Category[!is.summary], sep=indent)   	    #
	    pdf(file=file.path(resdir, "Toy_Study2.pdf"))#
	    xx <- c(0.645, 0.86) + addit - 0.052*(addci == "")#
#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
#
		tabletext <- tryout[, c("Category")]#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	#
		tabletext$Category <- ""#
		tabletext$Category[1] <- NA#
		is.summary <- is.na(as.numeric(tryout$OR))#
		fontsize[is.summary] <- fontsize[is.summary]*1.2#
   		makered <- tryout2$Category %in% paste(indent, c(">= 36 hours", "<= 50 mL", "> 50 mL", "Not Lobar"), sep="")#
		forestplot2(tabletext, log(m), log(l), log(u), clip=clip, zero=0, xlog=TRUE, is.summary=is.summary  , #
			 col=meta.colors(box=cols,line=lcols, summary="royalblue", text=textcols), fontsize=fontsize, xticks=xticks, graphwidth=unit(gwidth, "inches"), xrange=xrange, cgap=unit(0, "mm"))#
		main <- paste("Odds Ratios for Study 2, Log scale", sep="")#
	    grid.text(main, x=unit(0.5, "npc"), y=unit(myy, "npc"), gp=gpar(fontsize=fs))#
   		grid.text("Favors: Trt", x=unit(xx[1]-0.25, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs))    #
   		# 0.78#
   		grid.text("Placebo", x=unit(xx[2]-0.2 - .025*(gwidth== 2.5), "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs)) #
  	    dev.off() #
		addci <- ""#
			# addci <- ".95.CI"#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		l <- as.numeric(tryout$Lower)#
		m <- as.numeric(tryout$MISTIE_OR)#
		u <- as.numeric(tryout$Upper)#
		tabletext <- tryout[, c("Category")] #"MISTIE_OR.95.CI"#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	    	    	#
	pdf(file=file.path(resdir, "Toy_Study1.pdf"))#
#
	    xx <- c(0.62, 0.83) + addit#
		is.summary <- is.na(as.numeric(tryout$MISTIE_OR))#
		tabletext$Category[!is.summary] <- paste("", tabletext$Category[!is.summary], sep=indent)#
   		makered <- tabletext$Category %in% paste(indent, c(">= 36 hours", "<= 50 mL", "> 50 mL", "Not Lobar"), sep="")#
		cols <- rep(color.levs[9], length(m))#
		# cols[tabletext$Category == ">= 36 hours"] <- "red"#
		# cols[tabletext$Category == "<= 50 mL"] <- "orange"#
		# cols[tabletext$Category == "> 50 mL"] <- "orange"#
		# cols[tabletext$Category == "Not Lobar"] <- "green"		#
#		cols[makered] <- "red"#
		textcols <- rep("black", length(m))#
#		textcols[tabletext$Category=="Not Lobar"] <- "black"#
		lcols <- rep(color.levs[5], length(m))#
#		lcols <- paste("dark", cols, sep="")#
		# lcols <- paste("dark", cols, sep="")#
		# lcols[cols == "royalblue"] <- "darkblue"#
		# textcols <- rep("gray", length(m))#
		# textcols[tabletext$Category=="Not Lobar"] <- "black"#
		forestplot2(tabletext, log(m), log(l), log(u), clip=clip, zero=0, xlog=TRUE, is.summary= is.summary , #
			 col=meta.colors(box=cols,line=lcols, summary="royalblue", text=textcols), fontsize=fontsize, graphwidth=unit(gwidth, "inches"), xrange=xrange, cgap=unit(0, "mm"), xticks=xticks)#
		main <- paste("Odds Ratios for Study1 Log scale", sep="")#
	    grid.text(main, x=unit(0.5, "npc"), y=unit(myy, "npc"), gp=gpar(fontsize=fs))#
   		grid.text("Favors: Trt", x=unit(xx[1]-0.1, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs))    #
   		grid.text("Placebo", x=unit(xx[2]-0.075, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs)) #
	  dev.off()
tabletext
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
dropdir <- file.path("/Users", username, "Dropbox")#
basedir = file.path(dropdir, "CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(dropdir, "Hopstat", "Forestplot2")#
progdir <- file.path(homedir, "stataprograms")#
RD <- function() setwd(progdir)#
library(binom)#
library(rmeta)#
library(tm)#
library(RColorBrewer)#
source(file.path(progdir, "Forestplot2.R"))#
source(file.path(progdir, "Forestplot3.R"))#
#
load(file=file.path(homedir, "statacalc", 'MISTIE_STICH_Data.Rda'))#
#
tryout$Category[tryout$Category == "Site of haematoma"] <- "Site"#
tryout$Category[tryout$Category == "Haematoma volume"] <- "ICH Volume"#
tryout$Category[tryout$Category == "Time to Randomization"] <- "To Randomization"#
##### PLOTS START HERE#
		# where the main should be put#
		myy <- 0.82#
#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		## font size#
		fs <- 8.5#
		## graph width#
		gwidth <- 3.5#
		addci <- ""#
			# addci <- ".95.CI"#
		ranges <- c(0.15, 2.5)#
		xrange <- clip <- log(ranges)#
		xticks <- unique(c(ranges[1], 0.5, 1, 1.5, 2, ranges[2]))#
#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		indent <- "  "#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		fs <- 15#
		gwidth <- 2.5#
		below <- TRUE		#
	    yy <- c(0.78)#
		if (below) yy <- c(0.15)#
		# myy <- 0.9#
	    # dev.off()#
		l <- as.numeric(tryout$STICH_Lower)#
		m <- as.numeric(tryout$OR)#
		u <- as.numeric(tryout$STICH_Upper)#
		fontsize <- rep(fs, length(m))#
		# fontsize[tryout$Category == "Time to Randomization"] <- fs/1.5			#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
   		color.levs <- brewer.pal(9,"PuBu")#
		cols <- rep(color.levs[9], length(m))#
		# cols[tabletext$Category == ">= 36 hours"] <- "red"#
		# cols[tabletext$Category == "<= 50 mL"] <- "orange"#
		# cols[tabletext$Category == "> 50 mL"] <- "orange"#
		# cols[tabletext$Category == "Not Lobar"] <- "green"		#
#		cols[makered] <- "red"#
		textcols <- rep("black", length(m))#
#		textcols[tabletext$Category=="Not Lobar"] <- "black"#
		lcols <- rep(color.levs[5], length(m))#
#		lcols <- paste("dark", cols, sep="")#
 	    tryout2 <- tryout#
   		is.summary <- is.na(as.numeric(tryout2$OR))#
#
		tryout2$Category[!is.summary] <- paste("", tryout2$Category[!is.summary], sep=indent)   	    #
	    pdf(file=file.path(resdir, "Toy_Study2.pdf"))#
	    xx <- c(0.645, 0.86) + addit - 0.052*(addci == "")#
#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
#
		tabletext <- tryout[, c("Category")]#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	#
		tabletext$Category <- ""#
		tabletext$Category[1] <- NA#
		is.summary <- is.na(as.numeric(tryout$OR))#
		fontsize[is.summary] <- fontsize[is.summary]*1.2#
   		makered <- tryout2$Category %in% paste(indent, c(">= 36 hours", "<= 50 mL", "> 50 mL", "Not Lobar"), sep="")#
		forestplot2(tabletext, log(m), log(l), log(u), clip=clip, zero=0, xlog=TRUE, is.summary=is.summary  , #
			 col=meta.colors(box=cols,line=lcols, summary="royalblue", text=textcols), fontsize=fontsize, xticks=xticks, graphwidth=unit(gwidth, "inches"), xrange=xrange, cgap=unit(0, "mm"))#
		main <- paste("Odds Ratios for Study 2, Log scale", sep="")#
	    grid.text(main, x=unit(0.5, "npc"), y=unit(myy, "npc"), gp=gpar(fontsize=fs))#
   		grid.text("Favors: Trt", x=unit(xx[1]-0.25, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs))    #
   		# 0.78#
   		grid.text("Placebo", x=unit(xx[2]-0.2 - .025*(gwidth== 2.5), "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs)) #
  	    dev.off() #
		addci <- ""#
			# addci <- ".95.CI"#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		l <- as.numeric(tryout$Lower)#
		m <- as.numeric(tryout$MISTIE_OR)#
		u <- as.numeric(tryout$Upper)#
		tabletext <- tryout[, c("Category")] #"MISTIE_OR.95.CI"#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	    	    	#
	pdf(file=file.path(resdir, "Toy_Study1.pdf"))#
#
	    xx <- c(0.62, 0.83) + addit#
		is.summary <- is.na(as.numeric(tryout$MISTIE_OR))#
		tabletext$Category[!is.summary] <- paste("", tabletext$Category[!is.summary], sep=indent)#
		tabletext$Category[is.summary] <- paste("Category", 1:sum(is.summary))#
		tabletext$Category[!is.summary] <- paste("Level", 1:2)
tabletext
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
dropdir <- file.path("/Users", username, "Dropbox")#
basedir = file.path(dropdir, "CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(dropdir, "Hopstat", "Forestplot2")#
progdir <- file.path(homedir, "stataprograms")#
RD <- function() setwd(progdir)#
library(binom)#
library(rmeta)#
library(tm)#
library(RColorBrewer)#
source(file.path(progdir, "Forestplot2.R"))#
source(file.path(progdir, "Forestplot3.R"))#
#
load(file=file.path(homedir, "statacalc", 'MISTIE_STICH_Data.Rda'))#
#
tryout$Category[tryout$Category == "Site of haematoma"] <- "Site"#
tryout$Category[tryout$Category == "Haematoma volume"] <- "ICH Volume"#
tryout$Category[tryout$Category == "Time to Randomization"] <- "To Randomization"#
##### PLOTS START HERE#
		# where the main should be put#
		myy <- 0.82#
#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		## font size#
		fs <- 8.5#
		## graph width#
		gwidth <- 3.5#
		addci <- ""#
			# addci <- ".95.CI"#
		ranges <- c(0.15, 2.5)#
		xrange <- clip <- log(ranges)#
		xticks <- unique(c(ranges[1], 0.5, 1, 1.5, 2, ranges[2]))#
#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		indent <- "  "#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		fs <- 15#
		gwidth <- 2.5#
		below <- TRUE		#
	    yy <- c(0.78)#
		if (below) yy <- c(0.15)#
		# myy <- 0.9#
	    # dev.off()#
		l <- as.numeric(tryout$STICH_Lower)#
		m <- as.numeric(tryout$OR)#
		u <- as.numeric(tryout$STICH_Upper)#
		fontsize <- rep(fs, length(m))#
		# fontsize[tryout$Category == "Time to Randomization"] <- fs/1.5			#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
   		color.levs <- brewer.pal(9,"PuBu")#
		cols <- rep(color.levs[9], length(m))#
		# cols[tabletext$Category == ">= 36 hours"] <- "red"#
		# cols[tabletext$Category == "<= 50 mL"] <- "orange"#
		# cols[tabletext$Category == "> 50 mL"] <- "orange"#
		# cols[tabletext$Category == "Not Lobar"] <- "green"		#
#		cols[makered] <- "red"#
		textcols <- rep("black", length(m))#
#		textcols[tabletext$Category=="Not Lobar"] <- "black"#
		lcols <- rep(color.levs[5], length(m))#
#		lcols <- paste("dark", cols, sep="")#
 	    tryout2 <- tryout#
   		is.summary <- is.na(as.numeric(tryout2$OR))#
#
		tryout2$Category[!is.summary] <- paste("", tryout2$Category[!is.summary], sep=indent)   	    #
	    pdf(file=file.path(resdir, "Toy_Study2.pdf"))#
	    xx <- c(0.645, 0.86) + addit - 0.052*(addci == "")#
#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
#
		tabletext <- tryout[, c("Category")]#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	#
		tabletext$Category <- ""#
		tabletext$Category[1] <- NA#
		is.summary <- is.na(as.numeric(tryout$OR))#
		fontsize[is.summary] <- fontsize[is.summary]*1.2#
   		makered <- tryout2$Category %in% paste(indent, c(">= 36 hours", "<= 50 mL", "> 50 mL", "Not Lobar"), sep="")#
		forestplot2(tabletext, log(m), log(l), log(u), clip=clip, zero=0, xlog=TRUE, is.summary=is.summary  , #
			 col=meta.colors(box=cols,line=lcols, summary="royalblue", text=textcols), fontsize=fontsize, xticks=xticks, graphwidth=unit(gwidth, "inches"), xrange=xrange, cgap=unit(0, "mm"))#
		main <- paste("Odds Ratios for Study 2, Log scale", sep="")#
	    grid.text(main, x=unit(0.5, "npc"), y=unit(myy, "npc"), gp=gpar(fontsize=fs))#
   		grid.text("Favors: Trt", x=unit(xx[1]-0.25, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs))    #
   		# 0.78#
   		grid.text("Placebo", x=unit(xx[2]-0.2 - .025*(gwidth== 2.5), "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs)) #
  	    dev.off() #
		addci <- ""#
			# addci <- ".95.CI"#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		l <- as.numeric(tryout$Lower)#
		m <- as.numeric(tryout$MISTIE_OR)#
		u <- as.numeric(tryout$Upper)#
		tabletext <- tryout[, c("Category")] #"MISTIE_OR.95.CI"#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	    	    	#
	pdf(file=file.path(resdir, "Toy_Study1.pdf"))#
#
	    xx <- c(0.62, 0.83) + addit#
		is.summary <- is.na(as.numeric(tryout$MISTIE_OR))#
		tabletext$Category[!is.summary] <- paste("", tabletext$Category[!is.summary], sep=indent)#
		tabletext$Category[is.summary] <- paste("Category", 1:sum(is.summary))#
		tabletext$Category[!is.summary] <- paste("Level", 2:1)
tabletext
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
dropdir <- file.path("/Users", username, "Dropbox")#
basedir = file.path(dropdir, "CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(dropdir, "Hopstat", "Forestplot2")#
progdir <- file.path(homedir, "stataprograms")#
RD <- function() setwd(progdir)#
library(binom)#
library(rmeta)#
library(tm)#
library(RColorBrewer)#
source(file.path(progdir, "Forestplot2.R"))#
source(file.path(progdir, "Forestplot3.R"))#
#
load(file=file.path(homedir, "statacalc", 'MISTIE_STICH_Data.Rda'))#
#
tryout$Category[tryout$Category == "Site of haematoma"] <- "Site"#
tryout$Category[tryout$Category == "Haematoma volume"] <- "ICH Volume"#
tryout$Category[tryout$Category == "Time to Randomization"] <- "To Randomization"#
##### PLOTS START HERE#
		# where the main should be put#
		myy <- 0.82#
#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		## font size#
		fs <- 8.5#
		## graph width#
		gwidth <- 3.5#
		addci <- ""#
			# addci <- ".95.CI"#
		ranges <- c(0.15, 2.5)#
		xrange <- clip <- log(ranges)#
		xticks <- unique(c(ranges[1], 0.5, 1, 1.5, 2, ranges[2]))#
#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		indent <- "  "#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		fs <- 15#
		gwidth <- 2.5#
		below <- TRUE		#
	    yy <- c(0.78)#
		if (below) yy <- c(0.15)#
		# myy <- 0.9#
	    # dev.off()#
		l <- as.numeric(tryout$STICH_Lower)#
		m <- as.numeric(tryout$OR)#
		u <- as.numeric(tryout$STICH_Upper)#
		fontsize <- rep(fs, length(m))#
		# fontsize[tryout$Category == "Time to Randomization"] <- fs/1.5			#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
   		color.levs <- brewer.pal(9,"PuBu")#
		cols <- rep(color.levs[9], length(m))#
		# cols[tabletext$Category == ">= 36 hours"] <- "red"#
		# cols[tabletext$Category == "<= 50 mL"] <- "orange"#
		# cols[tabletext$Category == "> 50 mL"] <- "orange"#
		# cols[tabletext$Category == "Not Lobar"] <- "green"		#
#		cols[makered] <- "red"#
		textcols <- rep("black", length(m))#
#		textcols[tabletext$Category=="Not Lobar"] <- "black"#
		lcols <- rep(color.levs[5], length(m))#
#		lcols <- paste("dark", cols, sep="")#
 	    tryout2 <- tryout#
   		is.summary <- is.na(as.numeric(tryout2$OR))#
#
		tryout2$Category[!is.summary] <- paste("", tryout2$Category[!is.summary], sep=indent)   	    #
	    pdf(file=file.path(resdir, "Toy_Study2.pdf"))#
	    xx <- c(0.645, 0.86) + addit - 0.052*(addci == "")#
#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
#
		tabletext <- tryout[, c("Category")]#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	#
		tabletext$Category <- ""#
		tabletext$Category[1] <- NA#
		is.summary <- is.na(as.numeric(tryout$OR))#
		fontsize[is.summary] <- fontsize[is.summary]*1.2#
   		makered <- tryout2$Category %in% paste(indent, c(">= 36 hours", "<= 50 mL", "> 50 mL", "Not Lobar"), sep="")#
		forestplot2(tabletext, log(m), log(l), log(u), clip=clip, zero=0, xlog=TRUE, is.summary=is.summary  , #
			 col=meta.colors(box=cols,line=lcols, summary="royalblue", text=textcols), fontsize=fontsize, xticks=xticks, graphwidth=unit(gwidth, "inches"), xrange=xrange, cgap=unit(0, "mm"))#
		main <- paste("Odds Ratios for Study 2, Log scale", sep="")#
	    grid.text(main, x=unit(0.5, "npc"), y=unit(myy, "npc"), gp=gpar(fontsize=fs))#
   		grid.text("Favors: Trt", x=unit(xx[1]-0.25, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs))    #
   		# 0.78#
   		grid.text("Placebo", x=unit(xx[2]-0.2 - .025*(gwidth== 2.5), "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs)) #
  	    dev.off() #
		addci <- ""#
			# addci <- ".95.CI"#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		l <- as.numeric(tryout$Lower)#
		m <- as.numeric(tryout$MISTIE_OR)#
		u <- as.numeric(tryout$Upper)#
		tabletext <- tryout[, c("Category")] #"MISTIE_OR.95.CI"#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	    	    	#
	pdf(file=file.path(resdir, "Toy_Study1.pdf"))#
#
	    xx <- c(0.62, 0.83) + addit#
		is.summary <- is.na(as.numeric(tryout$MISTIE_OR))#
		tabletext$Category[!is.summary] <- paste("", tabletext$Category[!is.summary], sep=indent)#
		tabletext$Category[is.summary] <- paste("Category", 1:sum(is.summary))#
		tabletext$Category[which(!is.summary)] <- paste("Level", 1:2)
tabletext
which(!is.summary)
paste("Level", 1:2)
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
dropdir <- file.path("/Users", username, "Dropbox")#
basedir = file.path(dropdir, "CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(dropdir, "Hopstat", "Forestplot2")#
progdir <- file.path(homedir, "stataprograms")#
RD <- function() setwd(progdir)#
library(binom)#
library(rmeta)#
library(tm)#
library(RColorBrewer)#
source(file.path(progdir, "Forestplot2.R"))#
source(file.path(progdir, "Forestplot3.R"))#
#
load(file=file.path(homedir, "statacalc", 'MISTIE_STICH_Data.Rda'))#
#
tryout$Category[tryout$Category == "Site of haematoma"] <- "Site"#
tryout$Category[tryout$Category == "Haematoma volume"] <- "ICH Volume"#
tryout$Category[tryout$Category == "Time to Randomization"] <- "To Randomization"#
##### PLOTS START HERE#
		# where the main should be put#
		myy <- 0.82#
#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		## font size#
		fs <- 8.5#
		## graph width#
		gwidth <- 3.5#
		addci <- ""#
			# addci <- ".95.CI"#
		ranges <- c(0.15, 2.5)#
		xrange <- clip <- log(ranges)#
		xticks <- unique(c(ranges[1], 0.5, 1, 1.5, 2, ranges[2]))#
#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		indent <- "  "#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		fs <- 15#
		gwidth <- 2.5#
		below <- TRUE		#
	    yy <- c(0.78)#
		if (below) yy <- c(0.15)#
		# myy <- 0.9#
	    # dev.off()#
		l <- as.numeric(tryout$STICH_Lower)#
		m <- as.numeric(tryout$OR)#
		u <- as.numeric(tryout$STICH_Upper)#
		fontsize <- rep(fs, length(m))#
		# fontsize[tryout$Category == "Time to Randomization"] <- fs/1.5			#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
   		color.levs <- brewer.pal(9,"PuBu")#
		cols <- rep(color.levs[9], length(m))#
		# cols[tabletext$Category == ">= 36 hours"] <- "red"#
		# cols[tabletext$Category == "<= 50 mL"] <- "orange"#
		# cols[tabletext$Category == "> 50 mL"] <- "orange"#
		# cols[tabletext$Category == "Not Lobar"] <- "green"		#
#		cols[makered] <- "red"#
		textcols <- rep("black", length(m))#
#		textcols[tabletext$Category=="Not Lobar"] <- "black"#
		lcols <- rep(color.levs[5], length(m))#
#		lcols <- paste("dark", cols, sep="")#
 	    tryout2 <- tryout#
   		is.summary <- is.na(as.numeric(tryout2$OR))#
#
		tryout2$Category[!is.summary] <- paste("", tryout2$Category[!is.summary], sep=indent)   	    #
	    pdf(file=file.path(resdir, "Toy_Study2.pdf"))#
	    xx <- c(0.645, 0.86) + addit - 0.052*(addci == "")#
#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
#
		tabletext <- tryout[, c("Category")]#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	#
		tabletext$Category <- ""#
		tabletext$Category[1] <- NA#
		is.summary <- is.na(as.numeric(tryout$OR))#
		fontsize[is.summary] <- fontsize[is.summary]*1.2#
   		makered <- tryout2$Category %in% paste(indent, c(">= 36 hours", "<= 50 mL", "> 50 mL", "Not Lobar"), sep="")#
		forestplot2(tabletext, log(m), log(l), log(u), clip=clip, zero=0, xlog=TRUE, is.summary=is.summary  , #
			 col=meta.colors(box=cols,line=lcols, summary="royalblue", text=textcols), fontsize=fontsize, xticks=xticks, graphwidth=unit(gwidth, "inches"), xrange=xrange, cgap=unit(0, "mm"))#
		main <- paste("Odds Ratios for Study 2, Log scale", sep="")#
	    grid.text(main, x=unit(0.5, "npc"), y=unit(myy, "npc"), gp=gpar(fontsize=fs))#
   		grid.text("Favors: Trt", x=unit(xx[1]-0.25, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs))    #
   		# 0.78#
   		grid.text("Placebo", x=unit(xx[2]-0.2 - .025*(gwidth== 2.5), "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs)) #
  	    dev.off() #
		addci <- ""#
			# addci <- ".95.CI"#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		l <- as.numeric(tryout$Lower)#
		m <- as.numeric(tryout$MISTIE_OR)#
		u <- as.numeric(tryout$Upper)#
		tabletext <- tryout[, c("Category")] #"MISTIE_OR.95.CI"#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	    	    	#
	pdf(file=file.path(resdir, "Toy_Study1.pdf"))#
#
	    xx <- c(0.62, 0.83) + addit#
		is.summary <- is.na(as.numeric(tryout$MISTIE_OR))#
		tabletext$Category[!is.summary] <- paste("", tabletext$Category[!is.summary], sep=indent)#
		tabletext$Category[is.summary] <- paste("Category", 1:sum(is.summary))#
		tabletext$Category[which(!is.summary)] <- rep(paste("Level", 1:2), sum(!is.summary)/2)
tabletext
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
dropdir <- file.path("/Users", username, "Dropbox")#
basedir = file.path(dropdir, "CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(dropdir, "Hopstat", "Forestplot2")#
progdir <- file.path(homedir, "stataprograms")#
RD <- function() setwd(progdir)#
library(binom)#
library(rmeta)#
library(tm)#
library(RColorBrewer)#
source(file.path(progdir, "Forestplot2.R"))#
source(file.path(progdir, "Forestplot3.R"))#
#
load(file=file.path(homedir, "statacalc", 'MISTIE_STICH_Data.Rda'))#
#
tryout$Category[tryout$Category == "Site of haematoma"] <- "Site"#
tryout$Category[tryout$Category == "Haematoma volume"] <- "ICH Volume"#
tryout$Category[tryout$Category == "Time to Randomization"] <- "To Randomization"#
##### PLOTS START HERE#
		# where the main should be put#
		myy <- 0.82#
#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		## font size#
		fs <- 8.5#
		## graph width#
		gwidth <- 3.5#
		addci <- ""#
			# addci <- ".95.CI"#
		ranges <- c(0.15, 2.5)#
		xrange <- clip <- log(ranges)#
		xticks <- unique(c(ranges[1], 0.5, 1, 1.5, 2, ranges[2]))#
#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		indent <- "  "#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		fs <- 15#
		gwidth <- 2.5#
		below <- TRUE		#
	    yy <- c(0.78)#
		if (below) yy <- c(0.15)#
		# myy <- 0.9#
	    # dev.off()#
		l <- as.numeric(tryout$STICH_Lower)#
		m <- as.numeric(tryout$OR)#
		u <- as.numeric(tryout$STICH_Upper)#
		fontsize <- rep(fs, length(m))#
		# fontsize[tryout$Category == "Time to Randomization"] <- fs/1.5			#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
   		color.levs <- brewer.pal(9,"PuBu")#
		cols <- rep(color.levs[9], length(m))#
		# cols[tabletext$Category == ">= 36 hours"] <- "red"#
		# cols[tabletext$Category == "<= 50 mL"] <- "orange"#
		# cols[tabletext$Category == "> 50 mL"] <- "orange"#
		# cols[tabletext$Category == "Not Lobar"] <- "green"		#
#		cols[makered] <- "red"#
		textcols <- rep("black", length(m))#
#		textcols[tabletext$Category=="Not Lobar"] <- "black"#
		lcols <- rep(color.levs[5], length(m))#
#		lcols <- paste("dark", cols, sep="")#
 	    tryout2 <- tryout#
   		is.summary <- is.na(as.numeric(tryout2$OR))#
#
		tryout2$Category[!is.summary] <- paste("", tryout2$Category[!is.summary], sep=indent)   	    #
	    pdf(file=file.path(resdir, "Toy_Study2.pdf"))#
	    xx <- c(0.645, 0.86) + addit - 0.052*(addci == "")#
#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
#
		tabletext <- tryout[, c("Category")]#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	#
		tabletext$Category <- ""#
		tabletext$Category[1] <- NA#
		is.summary <- is.na(as.numeric(tryout$OR))#
		fontsize[is.summary] <- fontsize[is.summary]*1.2#
   		makered <- tryout2$Category %in% paste(indent, c(">= 36 hours", "<= 50 mL", "> 50 mL", "Not Lobar"), sep="")#
		forestplot2(tabletext, log(m), log(l), log(u), clip=clip, zero=0, xlog=TRUE, is.summary=is.summary  , #
			 col=meta.colors(box=cols,line=lcols, summary="royalblue", text=textcols), fontsize=fontsize, xticks=xticks, graphwidth=unit(gwidth, "inches"), xrange=xrange, cgap=unit(0, "mm"))#
		main <- paste("Odds Ratios for Study 2, Log scale", sep="")#
	    grid.text(main, x=unit(0.5, "npc"), y=unit(myy, "npc"), gp=gpar(fontsize=fs))#
   		grid.text("Favors: Trt", x=unit(xx[1]-0.25, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs))    #
   		# 0.78#
   		grid.text("Placebo", x=unit(xx[2]-0.2 - .025*(gwidth== 2.5), "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs)) #
  	    dev.off() #
		addci <- ""#
			# addci <- ".95.CI"#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		l <- as.numeric(tryout$Lower)#
		m <- as.numeric(tryout$MISTIE_OR)#
		u <- as.numeric(tryout$Upper)#
		tabletext <- tryout[, c("Category")] #"MISTIE_OR.95.CI"#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	    	    	#
	pdf(file=file.path(resdir, "Toy_Study1.pdf"))#
#
	    xx <- c(0.62, 0.83) + addit#
		is.summary <- is.na(as.numeric(tryout$MISTIE_OR))#
		tabletext$Category[!is.summary] <- paste("", tabletext$Category[!is.summary], sep=indent)#
		tabletext$Category[is.summary] <- paste("Category", 1:sum(is.summary))#
		tabletext$Category[which(!is.summary)] <- c(paste("Level", 1:2), 1), paste("Level", 1:3), rep(paste("Level", 1:2), 4))
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
dropdir <- file.path("/Users", username, "Dropbox")#
basedir = file.path(dropdir, "CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(dropdir, "Hopstat", "Forestplot2")#
progdir <- file.path(homedir, "stataprograms")#
RD <- function() setwd(progdir)#
library(binom)#
library(rmeta)#
library(tm)#
library(RColorBrewer)#
source(file.path(progdir, "Forestplot2.R"))#
source(file.path(progdir, "Forestplot3.R"))#
#
load(file=file.path(homedir, "statacalc", 'MISTIE_STICH_Data.Rda'))#
#
tryout$Category[tryout$Category == "Site of haematoma"] <- "Site"#
tryout$Category[tryout$Category == "Haematoma volume"] <- "ICH Volume"#
tryout$Category[tryout$Category == "Time to Randomization"] <- "To Randomization"#
##### PLOTS START HERE#
		# where the main should be put#
		myy <- 0.82#
#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		## font size#
		fs <- 8.5#
		## graph width#
		gwidth <- 3.5#
		addci <- ""#
			# addci <- ".95.CI"#
		ranges <- c(0.15, 2.5)#
		xrange <- clip <- log(ranges)#
		xticks <- unique(c(ranges[1], 0.5, 1, 1.5, 2, ranges[2]))#
#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		indent <- "  "#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		fs <- 15#
		gwidth <- 2.5#
		below <- TRUE		#
	    yy <- c(0.78)#
		if (below) yy <- c(0.15)#
		# myy <- 0.9#
	    # dev.off()#
		l <- as.numeric(tryout$STICH_Lower)#
		m <- as.numeric(tryout$OR)#
		u <- as.numeric(tryout$STICH_Upper)#
		fontsize <- rep(fs, length(m))#
		# fontsize[tryout$Category == "Time to Randomization"] <- fs/1.5			#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
   		color.levs <- brewer.pal(9,"PuBu")#
		cols <- rep(color.levs[9], length(m))#
		# cols[tabletext$Category == ">= 36 hours"] <- "red"#
		# cols[tabletext$Category == "<= 50 mL"] <- "orange"#
		# cols[tabletext$Category == "> 50 mL"] <- "orange"#
		# cols[tabletext$Category == "Not Lobar"] <- "green"		#
#		cols[makered] <- "red"#
		textcols <- rep("black", length(m))#
#		textcols[tabletext$Category=="Not Lobar"] <- "black"#
		lcols <- rep(color.levs[5], length(m))#
#		lcols <- paste("dark", cols, sep="")#
 	    tryout2 <- tryout#
   		is.summary <- is.na(as.numeric(tryout2$OR))#
#
		tryout2$Category[!is.summary] <- paste("", tryout2$Category[!is.summary], sep=indent)   	    #
	    pdf(file=file.path(resdir, "Toy_Study2.pdf"))#
	    xx <- c(0.645, 0.86) + addit - 0.052*(addci == "")#
#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
#
		tabletext <- tryout[, c("Category")]#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	#
		tabletext$Category <- ""#
		tabletext$Category[1] <- NA#
		is.summary <- is.na(as.numeric(tryout$OR))#
		fontsize[is.summary] <- fontsize[is.summary]*1.2#
   		makered <- tryout2$Category %in% paste(indent, c(">= 36 hours", "<= 50 mL", "> 50 mL", "Not Lobar"), sep="")#
		forestplot2(tabletext, log(m), log(l), log(u), clip=clip, zero=0, xlog=TRUE, is.summary=is.summary  , #
			 col=meta.colors(box=cols,line=lcols, summary="royalblue", text=textcols), fontsize=fontsize, xticks=xticks, graphwidth=unit(gwidth, "inches"), xrange=xrange, cgap=unit(0, "mm"))#
		main <- paste("Odds Ratios for Study 2, Log scale", sep="")#
	    grid.text(main, x=unit(0.5, "npc"), y=unit(myy, "npc"), gp=gpar(fontsize=fs))#
   		grid.text("Favors: Trt", x=unit(xx[1]-0.25, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs))    #
   		# 0.78#
   		grid.text("Placebo", x=unit(xx[2]-0.2 - .025*(gwidth== 2.5), "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs)) #
  	    dev.off() #
		addci <- ""#
			# addci <- ".95.CI"#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		l <- as.numeric(tryout$Lower)#
		m <- as.numeric(tryout$MISTIE_OR)#
		u <- as.numeric(tryout$Upper)#
		tabletext <- tryout[, c("Category")] #"MISTIE_OR.95.CI"#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	    	    	#
	pdf(file=file.path(resdir, "Toy_Study1.pdf"))#
#
	    xx <- c(0.62, 0.83) + addit#
		is.summary <- is.na(as.numeric(tryout$MISTIE_OR))#
		tabletext$Category[!is.summary] <- paste("", tabletext$Category[!is.summary], sep=indent)#
		tabletext$Category[is.summary] <- paste("Category", 1:sum(is.summary))#
		tabletext$Category[which(!is.summary)] <- c(paste("Level", 1:2), paste("Level", 1:3), rep(paste("Level", 1:2), 4))
tabletext
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
dropdir <- file.path("/Users", username, "Dropbox")#
basedir = file.path(dropdir, "CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(dropdir, "Hopstat", "Forestplot2")#
progdir <- file.path(homedir, "stataprograms")#
RD <- function() setwd(progdir)#
library(binom)#
library(rmeta)#
library(tm)#
library(RColorBrewer)#
source(file.path(progdir, "Forestplot2.R"))#
source(file.path(progdir, "Forestplot3.R"))#
#
load(file=file.path(homedir, "statacalc", 'MISTIE_STICH_Data.Rda'))#
#
tryout$Category[tryout$Category == "Site of haematoma"] <- "Site"#
tryout$Category[tryout$Category == "Haematoma volume"] <- "ICH Volume"#
tryout$Category[tryout$Category == "Time to Randomization"] <- "To Randomization"#
##### PLOTS START HERE#
		# where the main should be put#
		myy <- 0.82#
#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		## font size#
		fs <- 8.5#
		## graph width#
		gwidth <- 3.5#
		addci <- ""#
			# addci <- ".95.CI"#
		ranges <- c(0.15, 2.5)#
		xrange <- clip <- log(ranges)#
		xticks <- unique(c(ranges[1], 0.5, 1, 1.5, 2, ranges[2]))#
#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		indent <- "  "#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		fs <- 15#
		gwidth <- 2.5#
		below <- TRUE		#
	    yy <- c(0.78)#
		if (below) yy <- c(0.15)#
		# myy <- 0.9#
	    # dev.off()#
		l <- as.numeric(tryout$STICH_Lower)#
		m <- as.numeric(tryout$OR)#
		u <- as.numeric(tryout$STICH_Upper)#
		fontsize <- rep(fs, length(m))#
		# fontsize[tryout$Category == "Time to Randomization"] <- fs/1.5			#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
   		color.levs <- brewer.pal(9,"PuBu")#
		cols <- rep(color.levs[9], length(m))#
		# cols[tabletext$Category == ">= 36 hours"] <- "red"#
		# cols[tabletext$Category == "<= 50 mL"] <- "orange"#
		# cols[tabletext$Category == "> 50 mL"] <- "orange"#
		# cols[tabletext$Category == "Not Lobar"] <- "green"		#
#		cols[makered] <- "red"#
		textcols <- rep("black", length(m))#
#		textcols[tabletext$Category=="Not Lobar"] <- "black"#
		lcols <- rep(color.levs[5], length(m))#
#		lcols <- paste("dark", cols, sep="")#
 	    tryout2 <- tryout#
   		is.summary <- is.na(as.numeric(tryout2$OR))#
#
		tryout2$Category[!is.summary] <- paste("", tryout2$Category[!is.summary], sep=indent)   	    #
	    pdf(file=file.path(resdir, "Toy_Study2.pdf"))#
	    xx <- c(0.645, 0.86) + addit - 0.052*(addci == "")#
#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
#
		tabletext <- tryout[, c("Category")]#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	#
		tabletext$Category <- ""#
		tabletext$Category[1] <- NA#
		is.summary <- is.na(as.numeric(tryout$OR))#
		fontsize[is.summary] <- fontsize[is.summary]*1.2#
   		makered <- tryout2$Category %in% paste(indent, c(">= 36 hours", "<= 50 mL", "> 50 mL", "Not Lobar"), sep="")#
		forestplot2(tabletext, log(m), log(l), log(u), clip=clip, zero=0, xlog=TRUE, is.summary=is.summary  , #
			 col=meta.colors(box=cols,line=lcols, summary="royalblue", text=textcols), fontsize=fontsize, xticks=xticks, graphwidth=unit(gwidth, "inches"), xrange=xrange, cgap=unit(0, "mm"))#
		main <- paste("Odds Ratios for Study 2, Log scale", sep="")#
	    grid.text(main, x=unit(0.5, "npc"), y=unit(myy, "npc"), gp=gpar(fontsize=fs))#
   		grid.text("Favors: Trt", x=unit(xx[1]-0.25, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs))    #
   		# 0.78#
   		grid.text("Placebo", x=unit(xx[2]-0.2 - .025*(gwidth== 2.5), "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs)) #
  	    dev.off() #
		addci <- ""#
			# addci <- ".95.CI"#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		l <- as.numeric(tryout$Lower)#
		m <- as.numeric(tryout$MISTIE_OR)#
		u <- as.numeric(tryout$Upper)#
		tabletext <- tryout[, c("Category")] #"MISTIE_OR.95.CI"#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	    	    	#
	pdf(file=file.path(resdir, "Toy_Study1.pdf"))#
#
	    xx <- c(0.62, 0.83) + addit#
		is.summary <- is.na(as.numeric(tryout$MISTIE_OR))#
		tabletext$Category[!is.summary] <- paste("", tabletext$Category[!is.summary], sep=indent)#
		tabletext$Category[is.summary] <- paste("Category", 1:sum(is.summary))#
		tabletext$Category[which(!is.summary)] <- c(paste("Level", 1:2), paste("Level", 1:3), rep(paste("Level", 1:2), 4))#
   		makered <- tabletext$Category %in% paste(indent, c(">= 36 hours", "<= 50 mL", "> 50 mL", "Not Lobar"), sep="")#
		cols <- rep(color.levs[9], length(m))#
		# cols[tabletext$Category == ">= 36 hours"] <- "red"#
		# cols[tabletext$Category == "<= 50 mL"] <- "orange"#
		# cols[tabletext$Category == "> 50 mL"] <- "orange"#
		# cols[tabletext$Category == "Not Lobar"] <- "green"		#
#		cols[makered] <- "red"#
		textcols <- rep("black", length(m))#
#		textcols[tabletext$Category=="Not Lobar"] <- "black"#
		lcols <- rep(color.levs[5], length(m))#
#		lcols <- paste("dark", cols, sep="")#
		# lcols <- paste("dark", cols, sep="")#
		# lcols[cols == "royalblue"] <- "darkblue"#
		# textcols <- rep("gray", length(m))#
		# textcols[tabletext$Category=="Not Lobar"] <- "black"#
		forestplot2(tabletext, log(m), log(l), log(u), clip=clip, zero=0, xlog=TRUE, is.summary= is.summary , #
			 col=meta.colors(box=cols,line=lcols, summary="royalblue", text=textcols), fontsize=fontsize, graphwidth=unit(gwidth, "inches"), xrange=xrange, cgap=unit(0, "mm"), xticks=xticks)#
		main <- paste("Odds Ratios for Study1 Log scale", sep="")#
	    grid.text(main, x=unit(0.5, "npc"), y=unit(myy, "npc"), gp=gpar(fontsize=fs))#
   		grid.text("Favors: Trt", x=unit(xx[1]-0.1, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs))    #
   		grid.text("Placebo", x=unit(xx[2]-0.075, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs)) #
	  dev.off()  	    #
iadd <- 3#
setwd(resdir)#
	texfile <- paste("Toy_Example.tex", sep="")#
	tex <- NULL#
	tex <- c("\\documentclass{article}", #
	"\\usepackage{float}", #
	"\\usepackage{verbatim}", #
	"\\usepackage{graphicx}", #
	"\\usepackage{onimage}", #
	"\\usepackage[active, tightpage]{preview}", #
	"\\PreviewEnvironment{tabular}", #
	"\\begin{document}", #
	"% Define block styles", #
	"\\begin{tabular}{cc}")#
	mtrim <- strim <- c(0, 2, 1, 2)#
	coords <- c(0.5, 1)#
	if (iadd > 2) {#
		coords <- c(0.4, 0.7)#
		mtrim <- strim <- c(2.75, 2, 2, 2)#
		strim[1] <- 4.8#
		strim[3] <- 4#
	}	#
	mtrim <- paste(mtrim, "", sep="cm", collapse = " ")#
	mtrimmer <- paste("[trim=", mtrim, ", clip=TRUE]", sep="")#
#
	strim <- paste(strim, "", sep="cm", collapse = " ")#
	strimmer <- paste("[trim=", strim, ", clip=TRUE]", sep="")#
	boxes <- c(red=paste("    \\draw [red, line width=1pt] (", coords[1], ",0.22) rectangle (", coords[2], ", 0.2525);", sep=""), orange=paste("    \\draw [orange, line width=1pt] (", coords[1], ", 0.35) rectangle (", coords[2], ", 0.46);", sep=""), green=paste("    \\draw [green, line width=1pt] (", coords[1], ",0.48) rectangle (", coords[2], ", 0.51);", sep=""))#
	boxes <- ""#
	tex <- c(tex, #
	paste("\\begin{tikzonimage}", mtrimmer, "{Toy_Study1.pdf}", sep=""), #
	"%    \\draw [orange, line width=1pt] (0.5,0.25) rectangle (1, 0.3);", #
	"\\end{tikzonimage} & ")#
	tex <- c(tex, #
	paste("\\begin{tikzonimage}", strimmer, "{Toy_Study2.pdf}", sep=""), #
	paste("%    \\draw [green, line width=1pt] (", coords[1], ",0.25) rectangle (", coords[2], ", 0.3);", sep=""), #
	boxes[!names(boxes) %in% c("red")],#
	"\\end{tikzonimage}", #
	"\\end{tabular}", #
	"\\end{document}")#
	cat(tex, file=texfile, sep="\n")#
	system(sprintf('/usr/texbin/pdflatex "%s"', texfile))#
	system(sprintf('open "%s"', gsub(".tex", '.pdf', texfile, fixed=TRUE)))#
}
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
dropdir <- file.path("/Users", username, "Dropbox")#
basedir = file.path(dropdir, "CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(dropdir, "Hopstat", "Forestplot2")#
progdir <- file.path(homedir, "stataprograms")#
RD <- function() setwd(progdir)#
library(binom)#
library(rmeta)#
library(tm)#
library(RColorBrewer)#
source(file.path(progdir, "Forestplot2.R"))#
source(file.path(progdir, "Forestplot3.R"))#
#
load(file=file.path(homedir, "statacalc", 'MISTIE_STICH_Data.Rda'))#
#
tryout$Category[tryout$Category == "Site of haematoma"] <- "Site"#
tryout$Category[tryout$Category == "Haematoma volume"] <- "ICH Volume"#
tryout$Category[tryout$Category == "Time to Randomization"] <- "To Randomization"#
##### PLOTS START HERE#
		# where the main should be put#
		myy <- 0.82#
#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		## font size#
		fs <- 8.5#
		## graph width#
		gwidth <- 3.5#
		addci <- ""#
			# addci <- ".95.CI"#
		ranges <- c(0.15, 2.5)#
		xrange <- clip <- log(ranges)#
		xticks <- unique(c(ranges[1], 0.5, 1, 1.5, 2, ranges[2]))#
#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		indent <- "  "#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		fs <- 15#
		gwidth <- 2.5#
		below <- TRUE		#
	    yy <- c(0.78)#
		if (below) yy <- c(0.15)#
		# myy <- 0.9#
	    # dev.off()#
		l <- as.numeric(tryout$STICH_Lower)#
		m <- as.numeric(tryout$OR)#
		u <- as.numeric(tryout$STICH_Upper)#
		fontsize <- rep(fs, length(m))#
		# fontsize[tryout$Category == "Time to Randomization"] <- fs/1.5			#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
   		color.levs <- brewer.pal(9,"PuBu")#
		cols <- rep(color.levs[9], length(m))#
		# cols[tabletext$Category == ">= 36 hours"] <- "red"#
		# cols[tabletext$Category == "<= 50 mL"] <- "orange"#
		# cols[tabletext$Category == "> 50 mL"] <- "orange"#
		# cols[tabletext$Category == "Not Lobar"] <- "green"		#
#		cols[makered] <- "red"#
		textcols <- rep("black", length(m))#
#		textcols[tabletext$Category=="Not Lobar"] <- "black"#
		lcols <- rep(color.levs[5], length(m))#
#		lcols <- paste("dark", cols, sep="")#
 	    tryout2 <- tryout#
   		is.summary <- is.na(as.numeric(tryout2$OR))#
#
		tryout2$Category[!is.summary] <- paste("", tryout2$Category[!is.summary], sep=indent)   	    #
	    pdf(file=file.path(resdir, "Toy_Study2.pdf"))#
	    xx <- c(0.645, 0.86) + addit - 0.052*(addci == "")#
#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
#
		tabletext <- tryout[, c("Category")]#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	#
		tabletext$Category <- ""#
		tabletext$Category[1] <- NA#
		is.summary <- is.na(as.numeric(tryout$OR))#
		fontsize[is.summary] <- fontsize[is.summary]*1.2#
   		makered <- tryout2$Category %in% paste(indent, c(">= 36 hours", "<= 50 mL", "> 50 mL", "Not Lobar"), sep="")#
		forestplot2(tabletext, log(m), log(l), log(u), clip=clip, zero=0, xlog=TRUE, is.summary=is.summary  , #
			 col=meta.colors(box=cols,line=lcols, summary="royalblue", text=textcols), fontsize=fontsize, xticks=xticks, graphwidth=unit(gwidth, "inches"), xrange=xrange, cgap=unit(0, "mm"))#
		main <- paste("Odds Ratios for Study 2, Log scale", sep="")#
	    grid.text(main, x=unit(0.5, "npc"), y=unit(myy, "npc"), gp=gpar(fontsize=fs))#
   		grid.text("Favors: Trt", x=unit(xx[1]-0.25, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs))    #
   		# 0.78#
   		grid.text("Placebo", x=unit(xx[2]-0.2 - .025*(gwidth== 2.5), "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs)) #
  	    dev.off() #
		addci <- ""#
			# addci <- ".95.CI"#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		l <- as.numeric(tryout$Lower)#
		m <- as.numeric(tryout$MISTIE_OR)#
		u <- as.numeric(tryout$Upper)#
		tabletext <- tryout[, c("Category")] #"MISTIE_OR.95.CI"#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	    	    	#
	pdf(file=file.path(resdir, "Toy_Study1.pdf"))#
#
	    xx <- c(0.62, 0.83) + addit#
		is.summary <- is.na(as.numeric(tryout$MISTIE_OR))#
		tabletext$Category[!is.summary] <- paste("", tabletext$Category[!is.summary], sep=indent)#
		tabletext$Category[is.summary] <- paste("Category", 1:sum(is.summary))#
		tabletext$Category[which(!is.summary)] <- c(paste("Level", 1:2), paste("Level", 1:3), rep(paste("Level", 1:2), 4))#
   		makered <- tabletext$Category %in% paste(indent, c(">= 36 hours", "<= 50 mL", "> 50 mL", "Not Lobar"), sep="")#
		cols <- rep(color.levs[9], length(m))#
		# cols[tabletext$Category == ">= 36 hours"] <- "red"#
		# cols[tabletext$Category == "<= 50 mL"] <- "orange"#
		# cols[tabletext$Category == "> 50 mL"] <- "orange"#
		# cols[tabletext$Category == "Not Lobar"] <- "green"		#
#		cols[makered] <- "red"#
		textcols <- rep("black", length(m))#
#		textcols[tabletext$Category=="Not Lobar"] <- "black"#
		lcols <- rep(color.levs[5], length(m))#
#		lcols <- paste("dark", cols, sep="")#
		# lcols <- paste("dark", cols, sep="")#
		# lcols[cols == "royalblue"] <- "darkblue"#
		# textcols <- rep("gray", length(m))#
		# textcols[tabletext$Category=="Not Lobar"] <- "black"#
		forestplot2(tabletext, log(m), log(l), log(u), clip=clip, zero=0, xlog=TRUE, is.summary= is.summary , #
			 col=meta.colors(box=cols,line=lcols, summary="royalblue", text=textcols), fontsize=fontsize, graphwidth=unit(gwidth, "inches"), xrange=xrange, cgap=unit(0, "mm"), xticks=xticks)#
		main <- paste("Odds Ratios for Study1 Log scale", sep="")#
	    grid.text(main, x=unit(0.5, "npc"), y=unit(myy, "npc"), gp=gpar(fontsize=fs))#
   		grid.text("Favors: Trt", x=unit(xx[1]-0.1, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs))    #
   		grid.text("Placebo", x=unit(xx[2]-0.075, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs)) #
	  dev.off()  	    #
iadd <- 3#
setwd(resdir)#
	texfile <- paste("Toy_Example.tex", sep="")#
	tex <- NULL#
	tex <- c("\\documentclass{article}", #
	"\\usepackage{float}", #
	"\\usepackage{verbatim}", #
	"\\usepackage{graphicx}", #
	"\\usepackage{onimage}", #
	"\\usepackage[active, tightpage]{preview}", #
	"\\PreviewEnvironment{tabular}", #
	"\\begin{document}", #
	"% Define block styles", #
	"\\begin{tabular}{cc}")#
	mtrim <- strim <- c(0, 2, 1, 2)#
	coords <- c(0.5, 1)#
	if (iadd > 2) {#
		coords <- c(0.4, 0.7)#
		mtrim <- strim <- c(2.75, 2, 2, 2)#
		strim[1] <- 4.8#
		strim[3] <- 4#
	}	#
	mtrim <- paste(mtrim, "", sep="cm", collapse = " ")#
	mtrimmer <- paste("[trim=", mtrim, ", clip=TRUE]", sep="")#
#
	strim <- paste(strim, "", sep="cm", collapse = " ")#
	strimmer <- paste("[trim=", strim, ", clip=TRUE]", sep="")#
	boxes <- c(red=paste("    \\draw [red, line width=1pt] (", coords[1], ",0.22) rectangle (", coords[2], ", 0.2525);", sep=""), orange=paste("    \\draw [orange, line width=1pt] (", coords[1], ", 0.35) rectangle (", coords[2], ", 0.46);", sep=""), green=paste("    \\draw [green, line width=1pt] (", coords[1], ",0.48) rectangle (", coords[2], ", 0.51);", sep=""))#
	boxes <- ""#
	tex <- c(tex, #
	paste("\\begin{tikzonimage}", mtrimmer, "{Toy_Study1.pdf}", sep=""), #
	"%    \\draw [orange, line width=1pt] (0.5,0.25) rectangle (1, 0.3);", #
	"\\end{tikzonimage} & ")#
	tex <- c(tex, #
	paste("\\begin{tikzonimage}", strimmer, "{Toy_Study2.pdf}", sep=""), #
	paste("%    \\draw [green, line width=1pt] (", coords[1], ",0.25) rectangle (", coords[2], ", 0.3);", sep=""), #
	boxes[!names(boxes) %in% c("red")],#
	"\\end{tikzonimage}", #
	"\\end{tabular}", #
	"\\end{document}")#
	cat(tex, file=texfile, sep="\n")#
	system(sprintf('/usr/texbin/pdflatex "%s"', texfile))#
	system(sprintf('open "%s"', gsub(".tex", '.pdf', texfile, fixed=TRUE)))
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
dropdir <- file.path("/Users", username, "Dropbox")#
basedir = file.path(dropdir, "CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(dropdir, "Hopstat", "Forestplot2")#
progdir <- file.path(homedir, "stataprograms")#
RD <- function() setwd(progdir)#
library(binom)#
library(rmeta)#
library(tm)#
library(RColorBrewer)#
source(file.path(progdir, "Forestplot2.R"))#
source(file.path(progdir, "Forestplot3.R"))#
#
load(file=file.path(homedir, "statacalc", 'MISTIE_STICH_Data.Rda'))#
#
tryout$Category[tryout$Category == "Site of haematoma"] <- "Site"#
tryout$Category[tryout$Category == "Haematoma volume"] <- "ICH Volume"#
tryout$Category[tryout$Category == "Time to Randomization"] <- "To Randomization"#
##### PLOTS START HERE#
		# where the main should be put#
		myy <- 0.82#
#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		## font size#
		fs <- 8.5#
		## graph width#
		gwidth <- 3.5#
		addci <- ""#
			# addci <- ".95.CI"#
		ranges <- c(0.15, 2.5)#
		xrange <- clip <- log(ranges)#
		xticks <- unique(c(ranges[1], 0.5, 1, 1.5, 2, ranges[2]))#
#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		indent <- "  "#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		fs <- 15#
		gwidth <- 2.5#
		below <- TRUE		#
	    yy <- c(0.78)#
		if (below) yy <- c(0.15)#
		# myy <- 0.9#
	    # dev.off()#
		l <- as.numeric(tryout$STICH_Lower)#
		m <- as.numeric(tryout$OR)#
		u <- as.numeric(tryout$STICH_Upper)#
		fontsize <- rep(fs, length(m))#
		# fontsize[tryout$Category == "Time to Randomization"] <- fs/1.5			#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
   		color.levs <- brewer.pal(9,"PuBu")#
		cols <- rep(color.levs[9], length(m))#
		# cols[tabletext$Category == ">= 36 hours"] <- "red"#
		# cols[tabletext$Category == "<= 50 mL"] <- "orange"#
		# cols[tabletext$Category == "> 50 mL"] <- "orange"#
		# cols[tabletext$Category == "Not Lobar"] <- "green"		#
#		cols[makered] <- "red"#
		textcols <- rep("black", length(m))#
#		textcols[tabletext$Category=="Not Lobar"] <- "black"#
		lcols <- rep(color.levs[5], length(m))#
#		lcols <- paste("dark", cols, sep="")#
 	    tryout2 <- tryout#
   		is.summary <- is.na(as.numeric(tryout2$OR))#
#
		tryout2$Category[!is.summary] <- paste("", tryout2$Category[!is.summary], sep=indent)   	    #
	    pdf(file=file.path(resdir, "Toy_Study2.pdf"))#
	    xx <- c(0.645, 0.86) + addit - 0.052*(addci == "")#
#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
#
		tabletext <- tryout[, c("Category")]#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	#
		tabletext$Category <- ""#
		tabletext$Category[1] <- NA#
		is.summary <- is.na(as.numeric(tryout$OR))#
		fontsize[is.summary] <- fontsize[is.summary]*1.2#
   		makered <- tryout2$Category %in% paste(indent, c(">= 36 hours", "<= 50 mL", "> 50 mL", "Not Lobar"), sep="")#
		forestplot2(tabletext, log(m), log(l), log(u), clip=clip, zero=0, xlog=TRUE, is.summary=is.summary  , #
			 col=meta.colors(box=cols,line=lcols, summary="royalblue", text=textcols), fontsize=fontsize, xticks=xticks, graphwidth=unit(gwidth, "inches"), xrange=xrange, cgap=unit(0, "mm"))#
		main <- paste("Odds Ratios for Study 2, Log scale", sep="")#
	    grid.text(main, x=unit(0.5, "npc"), y=unit(myy, "npc"), gp=gpar(fontsize=fs))#
   		grid.text("Favors: Trt", x=unit(xx[1]-0.25, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs))    #
   		# 0.78#
   		grid.text("Placebo", x=unit(xx[2]-0.2 - .025*(gwidth== 2.5), "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs)) #
  	    dev.off() #
		addci <- ""#
			# addci <- ".95.CI"#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		l <- as.numeric(tryout$Lower)#
		m <- as.numeric(tryout$MISTIE_OR)#
		u <- as.numeric(tryout$Upper)#
		tabletext <- tryout[, c("Category")] #"MISTIE_OR.95.CI"#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	    	    	#
	pdf(file=file.path(resdir, "Toy_Study1.pdf"))#
#
	    xx <- c(0.62, 0.83) + addit#
		is.summary <- is.na(as.numeric(tryout$MISTIE_OR))#
		tabletext$Category[!is.summary] <- paste("", tabletext$Category[!is.summary], sep=indent)#
		tabletext$Category[is.summary] <- paste("Category", 1:sum(is.summary))#
		tabletext$Category[which(!is.summary)] <- c(paste("Level", 1:2), paste("Level", 1:3), rep(paste("Level", 1:2), 4))#
   		makered <- tabletext$Category %in% paste(indent, c(">= 36 hours", "<= 50 mL", "> 50 mL", "Not Lobar"), sep="")#
		cols <- rep(color.levs[9], length(m))#
		# cols[tabletext$Category == ">= 36 hours"] <- "red"#
		# cols[tabletext$Category == "<= 50 mL"] <- "orange"#
		# cols[tabletext$Category == "> 50 mL"] <- "orange"#
		# cols[tabletext$Category == "Not Lobar"] <- "green"		#
#		cols[makered] <- "red"#
		textcols <- rep("black", length(m))#
#		textcols[tabletext$Category=="Not Lobar"] <- "black"#
		lcols <- rep(color.levs[5], length(m))#
#		lcols <- paste("dark", cols, sep="")#
		# lcols <- paste("dark", cols, sep="")#
		# lcols[cols == "royalblue"] <- "darkblue"#
		# textcols <- rep("gray", length(m))#
		# textcols[tabletext$Category=="Not Lobar"] <- "black"#
		forestplot2(tabletext, log(m), log(l), log(u), clip=clip, zero=0, xlog=TRUE, is.summary= is.summary , #
			 col=meta.colors(box=cols,line=lcols, summary="royalblue", text=textcols), fontsize=fontsize, graphwidth=unit(gwidth, "inches"), xrange=xrange, cgap=unit(0, "mm"), xticks=xticks)#
		main <- paste("Odds Ratios for Study1 Log scale", sep="")#
	    grid.text(main, x=unit(0.5, "npc"), y=unit(myy, "npc"), gp=gpar(fontsize=fs))#
   		grid.text("Favors: Trt", x=unit(xx[1]-0.1, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs))    #
   		grid.text("Placebo", x=unit(xx[2]-0.075, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs)) #
	  dev.off()  	    #
iadd <- 3#
setwd(resdir)#
	texfile <- paste("Toy_Example.tex", sep="")#
	tex <- NULL#
	tex <- c("\\documentclass{article}", #
	"\\usepackage{float}", #
	"\\usepackage{verbatim}", #
	"\\usepackage{graphicx}", #
	"\\usepackage{onimage}", #
	"\\usepackage[active, tightpage]{preview}", #
	"\\PreviewEnvironment{tabular}", #
	"\\begin{document}", #
	"% Define block styles", #
	"\\begin{tabular}{cc}")#
	mtrim <- strim <- c(0, 2, 1, 2)#
	coords <- c(0.5, 1)#
	if (iadd > 2) {#
		coords <- c(0.4, 0.7)#
		mtrim <- strim <- c(2.75, 2, 2, 2)#
		strim[1] <- 4.8#
		strim[3] <- 4#
	}	#
	mtrim <- paste(mtrim, "", sep="cm", collapse = " ")#
	mtrimmer <- paste("[trim=", mtrim, ", clip=TRUE]", sep="")#
#
	strim <- paste(strim, "", sep="cm", collapse = " ")#
	strimmer <- paste("[trim=", strim, ", clip=TRUE]", sep="")#
	boxes <- c(red=paste("    \\draw [red, line width=1pt] (", coords[1], ",0.22) rectangle (", coords[2], ", 0.2525);", sep=""), orange=paste("    \\draw [orange, line width=1pt] (", coords[1], ", 0.35) rectangle (", coords[2], ", 0.46);", sep=""), green=paste("    \\draw [green, line width=1pt] (", coords[1], ",0.48) rectangle (", coords[2], ", 0.51);", sep=""))#
	boxes <- ""#
	tex <- c(tex, #
	paste("\\begin{tikzonimage}", mtrimmer, "{Toy_Study1.pdf}", sep=""), #
	"%    \\draw [orange, line width=1pt] (0.5,0.25) rectangle (1, 0.3);", #
	"\\end{tikzonimage} & ")#
	tex <- c(tex, #
	paste("\\begin{tikzonimage}", strimmer, "{Toy_Study2.pdf}", sep=""), #
	paste("%    \\draw [green, line width=1pt] (", coords[1], ",0.25) rectangle (", coords[2], ", 0.3);", sep=""), #
	boxes[!names(boxes) %in% c("red")],#
	"\\end{tikzonimage}", #
	"\\end{tabular}", #
	"\\end{document}")#
	cat(tex, file=texfile, sep="\n")#
	system(sprintf('/usr/texbin/pdflatex "%s"', texfile))#
	system(sprintf('open "%s"', gsub(".tex", '.pdf', texfile, fixed=TRUE)))
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
dropdir <- file.path("/Users", username, "Dropbox")#
basedir = file.path(dropdir, "CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(dropdir, "Hopstat", "Forestplot2")#
progdir <- file.path(homedir, "stataprograms")#
RD <- function() setwd(progdir)#
library(binom)#
library(rmeta)#
library(tm)#
library(RColorBrewer)#
source(file.path(progdir, "Forestplot2.R"))#
source(file.path(progdir, "Forestplot3.R"))#
#
load(file=file.path(homedir, "statacalc", 'MISTIE_STICH_Data.Rda'))#
#
tryout$Category[tryout$Category == "Site of haematoma"] <- "Site"#
tryout$Category[tryout$Category == "Haematoma volume"] <- "ICH Volume"#
tryout$Category[tryout$Category == "Time to Randomization"] <- "To Randomization"#
##### PLOTS START HERE#
		# where the main should be put#
		myy <- 0.82#
#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		## font size#
		fs <- 8.5#
		## graph width#
		gwidth <- 3.5#
		addci <- ""#
			# addci <- ".95.CI"#
		ranges <- c(0.15, 2.5)#
		xrange <- clip <- log(ranges)#
		xticks <- unique(c(ranges[1], 0.5, 1, 1.5, 2, ranges[2]))#
#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		indent <- "  "#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		fs <- 15#
		gwidth <- 2.5#
		below <- TRUE		#
	    yy <- c(0.78)#
		if (below) yy <- c(0.15)#
		# myy <- 0.9#
	    # dev.off()#
		l <- as.numeric(tryout$STICH_Lower)#
		m <- as.numeric(tryout$OR)#
		u <- as.numeric(tryout$STICH_Upper)#
		fontsize <- rep(fs, length(m))#
		# fontsize[tryout$Category == "Time to Randomization"] <- fs/1.5			#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
   		color.levs <- brewer.pal(9,"PuBu")#
		cols <- rep(color.levs[9], length(m))#
		# cols[tabletext$Category == ">= 36 hours"] <- "red"#
		# cols[tabletext$Category == "<= 50 mL"] <- "orange"#
		# cols[tabletext$Category == "> 50 mL"] <- "orange"#
		# cols[tabletext$Category == "Not Lobar"] <- "green"		#
#		cols[makered] <- "red"#
		textcols <- rep("black", length(m))#
#		textcols[tabletext$Category=="Not Lobar"] <- "black"#
		lcols <- rep(color.levs[5], length(m))#
#		lcols <- paste("dark", cols, sep="")#
 	    tryout2 <- tryout#
   		is.summary <- is.na(as.numeric(tryout2$OR))#
#
		tryout2$Category[!is.summary] <- paste("", tryout2$Category[!is.summary], sep=indent)   	    #
	    pdf(file=file.path(resdir, "Toy_Study2.pdf"))#
	    xx <- c(0.645, 0.86) + addit - 0.052*(addci == "")#
#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
#
		tabletext <- tryout[, c("Category")]#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	#
		tabletext$Category <- ""#
		tabletext$Category[1] <- NA#
		is.summary <- is.na(as.numeric(tryout$OR))#
		fontsize[is.summary] <- fontsize[is.summary]*1.2#
   		makered <- tryout2$Category %in% paste(indent, c(">= 36 hours", "<= 50 mL", "> 50 mL", "Not Lobar"), sep="")#
		forestplot2(tabletext, log(m), log(l), log(u), clip=clip, zero=0, xlog=TRUE, is.summary=is.summary  , #
			 col=meta.colors(box=cols,line=lcols, summary="royalblue", text=textcols), fontsize=fontsize, xticks=xticks, graphwidth=unit(gwidth, "inches"), xrange=xrange, cgap=unit(0, "mm"))#
		main <- paste("Odds Ratios for Study 2, Log scale", sep="")#
	    grid.text(main, x=unit(0.5, "npc"), y=unit(myy, "npc"), gp=gpar(fontsize=fs))#
   		grid.text("Favors: Trt", x=unit(xx[1]-0.25, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs))    #
   		# 0.78#
   		grid.text("Placebo", x=unit(xx[2]-0.2 - .025*(gwidth== 2.5), "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs)) #
  	    dev.off() #
		addci <- ""#
			# addci <- ".95.CI"#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		l <- as.numeric(tryout$Lower)#
		m <- as.numeric(tryout$MISTIE_OR)#
		u <- as.numeric(tryout$Upper)#
		tabletext <- tryout[, c("Category")] #"MISTIE_OR.95.CI"#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	    	    	#
	pdf(file=file.path(resdir, "Toy_Study1.pdf"))#
#
	    xx <- c(0.62, 0.83) + addit#
		is.summary <- is.na(as.numeric(tryout$MISTIE_OR))#
		tabletext$Category[!is.summary] <- paste("", tabletext$Category[!is.summary], sep=indent)#
		tabletext$Category[is.summary] <- paste("Category", 1:sum(is.summary))#
		tabletext$Category[which(!is.summary)] <- c(paste("Level", 1:2), paste("Level", 1:3), rep(paste("Level", 1:2), 4))#
   		makered <- tabletext$Category %in% paste(indent, c(">= 36 hours", "<= 50 mL", "> 50 mL", "Not Lobar"), sep="")#
		cols <- rep(color.levs[9], length(m))#
		# cols[tabletext$Category == ">= 36 hours"] <- "red"#
		# cols[tabletext$Category == "<= 50 mL"] <- "orange"#
		# cols[tabletext$Category == "> 50 mL"] <- "orange"#
		# cols[tabletext$Category == "Not Lobar"] <- "green"		#
#		cols[makered] <- "red"#
		textcols <- rep("black", length(m))#
#		textcols[tabletext$Category=="Not Lobar"] <- "black"#
		lcols <- rep(color.levs[5], length(m))#
#		lcols <- paste("dark", cols, sep="")#
		# lcols <- paste("dark", cols, sep="")#
		# lcols[cols == "royalblue"] <- "darkblue"#
		# textcols <- rep("gray", length(m))#
		# textcols[tabletext$Category=="Not Lobar"] <- "black"#
		forestplot2(tabletext, log(m), log(l), log(u), clip=clip, zero=0, xlog=TRUE, is.summary= is.summary , #
			 col=meta.colors(box=cols,line=lcols, summary="royalblue", text=textcols), fontsize=fontsize, graphwidth=unit(gwidth, "inches"), xrange=xrange, cgap=unit(0, "mm"), xticks=xticks)#
		main <- paste("Odds Ratios for Study1 Log scale", sep="")#
	    grid.text(main, x=unit(0.5, "npc"), y=unit(myy, "npc"), gp=gpar(fontsize=fs))#
   		grid.text("Favors: Trt", x=unit(xx[1]-0.2, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs))    #
   		grid.text("Placebo", x=unit(xx[2]-0.09, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs)) #
	  dev.off()  	    #
iadd <- 3#
setwd(resdir)#
	texfile <- paste("Toy_Example.tex", sep="")#
	tex <- NULL#
	tex <- c("\\documentclass{article}", #
	"\\usepackage{float}", #
	"\\usepackage{verbatim}", #
	"\\usepackage{graphicx}", #
	"\\usepackage{onimage}", #
	"\\usepackage[active, tightpage]{preview}", #
	"\\PreviewEnvironment{tabular}", #
	"\\begin{document}", #
	"% Define block styles", #
	"\\begin{tabular}{cc}")#
	mtrim <- strim <- c(0, 2, 1, 2)#
	coords <- c(0.5, 1)#
	if (iadd > 2) {#
		coords <- c(0.4, 0.7)#
		mtrim <- strim <- c(2.75, 2, 2, 2)#
		strim[1] <- 4.8#
		strim[3] <- 4#
	}	#
	mtrim <- paste(mtrim, "", sep="cm", collapse = " ")#
	mtrimmer <- paste("[trim=", mtrim, ", clip=TRUE]", sep="")#
#
	strim <- paste(strim, "", sep="cm", collapse = " ")#
	strimmer <- paste("[trim=", strim, ", clip=TRUE]", sep="")#
	boxes <- c(red=paste("    \\draw [red, line width=1pt] (", coords[1], ",0.22) rectangle (", coords[2], ", 0.2525);", sep=""), orange=paste("    \\draw [orange, line width=1pt] (", coords[1], ", 0.35) rectangle (", coords[2], ", 0.46);", sep=""), green=paste("    \\draw [green, line width=1pt] (", coords[1], ",0.48) rectangle (", coords[2], ", 0.51);", sep=""))#
	boxes <- ""#
	tex <- c(tex, #
	paste("\\begin{tikzonimage}", mtrimmer, "{Toy_Study1.pdf}", sep=""), #
	"%    \\draw [orange, line width=1pt] (0.5,0.25) rectangle (1, 0.3);", #
	"\\end{tikzonimage} & ")#
	tex <- c(tex, #
	paste("\\begin{tikzonimage}", strimmer, "{Toy_Study2.pdf}", sep=""), #
	paste("%    \\draw [green, line width=1pt] (", coords[1], ",0.25) rectangle (", coords[2], ", 0.3);", sep=""), #
	boxes[!names(boxes) %in% c("red")],#
	"\\end{tikzonimage}", #
	"\\end{tabular}", #
	"\\end{document}")#
	cat(tex, file=texfile, sep="\n")#
	system(sprintf('/usr/texbin/pdflatex "%s"', texfile))#
	system(sprintf('open "%s"', gsub(".tex", '.pdf', texfile, fixed=TRUE)))
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
dropdir <- file.path("/Users", username, "Dropbox")#
basedir = file.path(dropdir, "CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(dropdir, "Hopstat", "Forestplot2")#
progdir <- file.path(homedir, "stataprograms")#
RD <- function() setwd(progdir)#
library(binom)#
library(rmeta)#
library(tm)#
library(RColorBrewer)#
source(file.path(progdir, "Forestplot2.R"))#
source(file.path(progdir, "Forestplot3.R"))#
#
load(file=file.path(homedir, "statacalc", 'MISTIE_STICH_Data.Rda'))#
#
tryout$Category[tryout$Category == "Site of haematoma"] <- "Site"#
tryout$Category[tryout$Category == "Haematoma volume"] <- "ICH Volume"#
tryout$Category[tryout$Category == "Time to Randomization"] <- "To Randomization"#
##### PLOTS START HERE#
		# where the main should be put#
		myy <- 0.82#
#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		## font size#
		fs <- 8.5#
		## graph width#
		gwidth <- 3.5#
		addci <- ""#
			# addci <- ".95.CI"#
		ranges <- c(0.15, 2.5)#
		xrange <- clip <- log(ranges)#
		xticks <- unique(c(ranges[1], 0.5, 1, 1.5, 2, ranges[2]))#
#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		indent <- "  "#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		fs <- 15#
		gwidth <- 2.5#
		below <- TRUE		#
	    yy <- c(0.78)#
		if (below) yy <- c(0.15)#
		# myy <- 0.9#
	    # dev.off()#
		l <- as.numeric(tryout$STICH_Lower)#
		m <- as.numeric(tryout$OR)#
		u <- as.numeric(tryout$STICH_Upper)#
		fontsize <- rep(fs, length(m))#
		# fontsize[tryout$Category == "Time to Randomization"] <- fs/1.5			#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
   		color.levs <- brewer.pal(9,"PuBu")#
		cols <- rep(color.levs[9], length(m))#
		# cols[tabletext$Category == ">= 36 hours"] <- "red"#
		# cols[tabletext$Category == "<= 50 mL"] <- "orange"#
		# cols[tabletext$Category == "> 50 mL"] <- "orange"#
		# cols[tabletext$Category == "Not Lobar"] <- "green"		#
#		cols[makered] <- "red"#
		textcols <- rep("black", length(m))#
#		textcols[tabletext$Category=="Not Lobar"] <- "black"#
		lcols <- rep(color.levs[5], length(m))#
#		lcols <- paste("dark", cols, sep="")#
 	    tryout2 <- tryout#
   		is.summary <- is.na(as.numeric(tryout2$OR))#
#
		tryout2$Category[!is.summary] <- paste("", tryout2$Category[!is.summary], sep=indent)   	    #
	    pdf(file=file.path(resdir, "Toy_Study2.pdf"))#
	    xx <- c(0.645, 0.86) + addit - 0.052*(addci == "")#
#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
#
		tabletext <- tryout[, c("Category")]#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	#
		tabletext$Category <- ""#
		tabletext$Category[1] <- NA#
		is.summary <- is.na(as.numeric(tryout$OR))#
		fontsize[is.summary] <- fontsize[is.summary]*1.2#
   		makered <- tryout2$Category %in% paste(indent, c(">= 36 hours", "<= 50 mL", "> 50 mL", "Not Lobar"), sep="")#
		forestplot2(tabletext, log(m), log(l), log(u), clip=clip, zero=0, xlog=TRUE, is.summary=is.summary  , #
			 col=meta.colors(box=cols,line=lcols, summary="royalblue", text=textcols), fontsize=fontsize, xticks=xticks, graphwidth=unit(gwidth, "inches"), xrange=xrange, cgap=unit(0, "mm"))#
		main <- paste("Odds Ratios for Study 2, Log scale", sep="")#
	    grid.text(main, x=unit(0.5, "npc"), y=unit(myy, "npc"), gp=gpar(fontsize=fs))#
   		grid.text("Favors: Trt", x=unit(xx[1]-0.25, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs))    #
   		# 0.78#
   		grid.text("Placebo", x=unit(xx[2]-0.2 - .025*(gwidth== 2.5), "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs)) #
  	    dev.off() #
		addci <- ""#
			# addci <- ".95.CI"#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		l <- as.numeric(tryout$Lower)#
		m <- as.numeric(tryout$MISTIE_OR)#
		u <- as.numeric(tryout$Upper)#
		tabletext <- tryout[, c("Category")] #"MISTIE_OR.95.CI"#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	    	    	#
	pdf(file=file.path(resdir, "Toy_Study1.pdf"))#
#
	    xx <- c(0.62, 0.83) + addit#
		is.summary <- is.na(as.numeric(tryout$MISTIE_OR))#
		tabletext$Category[!is.summary] <- paste("", tabletext$Category[!is.summary], sep=indent)#
		tabletext$Category[is.summary] <- paste("Category", 1:sum(is.summary))#
		tabletext$Category[which(!is.summary)] <- c(paste("Level", 1:2), paste("Level", 1:3), rep(paste("Level", 1:2), 4))#
   		makered <- tabletext$Category %in% paste(indent, c(">= 36 hours", "<= 50 mL", "> 50 mL", "Not Lobar"), sep="")#
		cols <- rep(color.levs[9], length(m))#
		# cols[tabletext$Category == ">= 36 hours"] <- "red"#
		# cols[tabletext$Category == "<= 50 mL"] <- "orange"#
		# cols[tabletext$Category == "> 50 mL"] <- "orange"#
		# cols[tabletext$Category == "Not Lobar"] <- "green"		#
#		cols[makered] <- "red"#
		textcols <- rep("black", length(m))#
#		textcols[tabletext$Category=="Not Lobar"] <- "black"#
		lcols <- rep(color.levs[5], length(m))#
#		lcols <- paste("dark", cols, sep="")#
		# lcols <- paste("dark", cols, sep="")#
		# lcols[cols == "royalblue"] <- "darkblue"#
		# textcols <- rep("gray", length(m))#
		# textcols[tabletext$Category=="Not Lobar"] <- "black"#
		forestplot2(tabletext, log(m), log(l), log(u), clip=clip, zero=0, xlog=TRUE, is.summary= is.summary , #
			 col=meta.colors(box=cols,line=lcols, summary="royalblue", text=textcols), fontsize=fontsize, graphwidth=unit(gwidth, "inches"), xrange=xrange, cgap=unit(0, "mm"), xticks=xticks)#
		main <- paste("Odds Ratios for Study1 Log scale", sep="")#
	    grid.text(main, x=unit(0.5, "npc"), y=unit(myy, "npc"), gp=gpar(fontsize=fs))#
   		grid.text("Favors: Trt", x=unit(xx[1]-0.2, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs))    #
   		grid.text("Placebo", x=unit(xx[2]-0.175, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs)) #
	  dev.off()  	    #
iadd <- 3#
setwd(resdir)#
	texfile <- paste("Toy_Example.tex", sep="")#
	tex <- NULL#
	tex <- c("\\documentclass{article}", #
	"\\usepackage{float}", #
	"\\usepackage{verbatim}", #
	"\\usepackage{graphicx}", #
	"\\usepackage{onimage}", #
	"\\usepackage[active, tightpage]{preview}", #
	"\\PreviewEnvironment{tabular}", #
	"\\begin{document}", #
	"% Define block styles", #
	"\\begin{tabular}{cc}")#
	mtrim <- strim <- c(0, 2, 1, 2)#
	coords <- c(0.5, 1)#
	if (iadd > 2) {#
		coords <- c(0.4, 0.7)#
		mtrim <- strim <- c(2.75, 2, 2, 2)#
		strim[1] <- 4.8#
		strim[3] <- 4#
	}	#
	mtrim <- paste(mtrim, "", sep="cm", collapse = " ")#
	mtrimmer <- paste("[trim=", mtrim, ", clip=TRUE]", sep="")#
#
	strim <- paste(strim, "", sep="cm", collapse = " ")#
	strimmer <- paste("[trim=", strim, ", clip=TRUE]", sep="")#
	boxes <- c(red=paste("    \\draw [red, line width=1pt] (", coords[1], ",0.22) rectangle (", coords[2], ", 0.2525);", sep=""), orange=paste("    \\draw [orange, line width=1pt] (", coords[1], ", 0.35) rectangle (", coords[2], ", 0.46);", sep=""), green=paste("    \\draw [green, line width=1pt] (", coords[1], ",0.48) rectangle (", coords[2], ", 0.51);", sep=""))#
	boxes <- ""#
	tex <- c(tex, #
	paste("\\begin{tikzonimage}", mtrimmer, "{Toy_Study1.pdf}", sep=""), #
	"%    \\draw [orange, line width=1pt] (0.5,0.25) rectangle (1, 0.3);", #
	"\\end{tikzonimage} & ")#
	tex <- c(tex, #
	paste("\\begin{tikzonimage}", strimmer, "{Toy_Study2.pdf}", sep=""), #
	paste("%    \\draw [green, line width=1pt] (", coords[1], ",0.25) rectangle (", coords[2], ", 0.3);", sep=""), #
	boxes[!names(boxes) %in% c("red")],#
	"\\end{tikzonimage}", #
	"\\end{tabular}", #
	"\\end{document}")#
	cat(tex, file=texfile, sep="\n")#
	system(sprintf('/usr/texbin/pdflatex "%s"', texfile))#
	system(sprintf('open "%s"', gsub(".tex", '.pdf', texfile, fixed=TRUE)))
cols
Something for Under 36 hours and 36 - 72#
## Do this more#
###
###
#
rm(list=ls())#
username <- Sys.info()["user"][[1]]#
dropdir <- file.path("/Users", username, "Dropbox")#
basedir = file.path(dropdir, "CTR/DHanley")#
rootdir = file.path(basedir, "MISTIE")#
paperdir <- file.path(basedir, "Papers")#
homedir = file.path(rootdir, "ICH Analysis")#
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")#
resdir <- file.path(dropdir, "Hopstat", "Forestplot2")#
progdir <- file.path(homedir, "stataprograms")#
RD <- function() setwd(progdir)#
library(binom)#
library(rmeta)#
library(tm)#
library(RColorBrewer)#
source(file.path(progdir, "Forestplot2.R"))#
source(file.path(progdir, "Forestplot3.R"))#
#
load(file=file.path(homedir, "statacalc", 'MISTIE_STICH_Data.Rda'))#
#
tryout$Category[tryout$Category == "Site of haematoma"] <- "Site"#
tryout$Category[tryout$Category == "Haematoma volume"] <- "ICH Volume"#
tryout$Category[tryout$Category == "Time to Randomization"] <- "To Randomization"#
##### PLOTS START HERE#
		# where the main should be put#
		myy <- 0.82#
#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		## font size#
		fs <- 8.5#
		## graph width#
		gwidth <- 3.5#
		addci <- ""#
			# addci <- ".95.CI"#
		ranges <- c(0.15, 2.5)#
		xrange <- clip <- log(ranges)#
		xticks <- unique(c(ranges[1], 0.5, 1, 1.5, 2, ranges[2]))#
#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		indent <- "  "#
		colnames(tryout)[colnames(tryout) == "OR.95..CI"] <- "OR.95.CI"#
		fs <- 15#
		gwidth <- 2.5#
		below <- TRUE		#
	    yy <- c(0.78)#
		if (below) yy <- c(0.15)#
		# myy <- 0.9#
	    # dev.off()#
		l <- as.numeric(tryout$STICH_Lower)#
		m <- as.numeric(tryout$OR)#
		u <- as.numeric(tryout$STICH_Upper)#
		fontsize <- rep(fs, length(m))#
		# fontsize[tryout$Category == "Time to Randomization"] <- fs/1.5			#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
   		color.levs <- brewer.pal(9,"PuBu")#
		cols <- rep(color.levs[9], length(m))#
		# cols[tabletext$Category == ">= 36 hours"] <- "red"#
		# cols[tabletext$Category == "<= 50 mL"] <- "orange"#
		# cols[tabletext$Category == "> 50 mL"] <- "orange"#
		# cols[tabletext$Category == "Not Lobar"] <- "green"		#
#		cols[makered] <- "red"#
		textcols <- rep("black", length(m))#
#		textcols[tabletext$Category=="Not Lobar"] <- "black"#
		lcols <- rep(color.levs[5], length(m))#
#		lcols <- paste("dark", cols, sep="")#
 	    tryout2 <- tryout#
   		is.summary <- is.na(as.numeric(tryout2$OR))#
#
		tryout2$Category[!is.summary] <- paste("", tryout2$Category[!is.summary], sep=indent)   	    #
	    pdf(file=file.path(resdir, "Toy_Study2.pdf"))#
	    xx <- c(0.645, 0.86) + addit - 0.052*(addci == "")#
#
		tabletext <- tryout[, c("Category", "STICH_N")] #"OR.95.CI",#
#
		tabletext <- tryout[, c("Category")]#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	#
		tabletext$Category <- ""#
		tabletext$Category[1] <- NA#
		is.summary <- is.na(as.numeric(tryout$OR))#
		fontsize[is.summary] <- fontsize[is.summary]*1.2#
   		makered <- tryout2$Category %in% paste(indent, c(">= 36 hours", "<= 50 mL", "> 50 mL", "Not Lobar"), sep="")#
		forestplot2(tabletext, log(m), log(l), log(u), clip=clip, zero=0, xlog=TRUE, is.summary=is.summary  , #
			 col=meta.colors(box=cols,line=lcols, summary="royalblue", text=textcols), fontsize=fontsize, xticks=xticks, graphwidth=unit(gwidth, "inches"), xrange=xrange, cgap=unit(0, "mm"))#
		main <- paste("Odds Ratios for Study 2, Log scale", sep="")#
	    grid.text(main, x=unit(0.5, "npc"), y=unit(myy, "npc"), gp=gpar(fontsize=fs))#
   		grid.text("Favors: Trt", x=unit(xx[1]-0.25, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs))    #
   		# 0.78#
   		grid.text("Placebo", x=unit(xx[2]-0.2 - .025*(gwidth== 2.5), "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs)) #
  	    dev.off() #
		addci <- ""#
			# addci <- ".95.CI"#
		scaler <- gwidth / 1.5#
	    addit <- 0.04* scaler#
	    if (addci != "") addit <- 0.04 * gwidth /2#
		l <- as.numeric(tryout$Lower)#
		m <- as.numeric(tryout$MISTIE_OR)#
		u <- as.numeric(tryout$Upper)#
		tabletext <- tryout[, c("Category")] #"MISTIE_OR.95.CI"#
		tabletext <- data.frame(Category=tabletext, stringsAsFactors=FALSE)	    	    	#
	pdf(file=file.path(resdir, "Toy_Study1.pdf"))#
#
	    xx <- c(0.62, 0.83) + addit#
		is.summary <- is.na(as.numeric(tryout$MISTIE_OR))#
		tabletext$Category[!is.summary] <- paste("", tabletext$Category[!is.summary], sep=indent)#
		tabletext$Category[is.summary] <- paste("Category", 1:sum(is.summary))#
		tabletext$Category[which(!is.summary)] <- c(paste("Level", 1:2), paste("Level", 1:3), rep(paste("Level", 1:2), 4))#
   		makered <- tabletext$Category %in% paste(indent, c(">= 36 hours", "<= 50 mL", "> 50 mL", "Not Lobar"), sep="")#
		cols <- rep(color.levs[9], length(m))#
		cols[4] <- "red"#
		# cols[tabletext$Category == "<= 50 mL"] <- "orange"#
		# cols[tabletext$Category == "> 50 mL"] <- "orange"#
		# cols[tabletext$Category == "Not Lobar"] <- "green"		#
#		cols[makered] <- "red"#
		textcols <- rep("black", length(m))#
#		textcols[tabletext$Category=="Not Lobar"] <- "black"#
		lcols <- rep(color.levs[5], length(m))#
		lcols[4] <- "darkred"#
#		lcols <- paste("dark", cols, sep="")#
		# lcols <- paste("dark", cols, sep="")#
		# lcols[cols == "royalblue"] <- "darkblue"#
		# textcols <- rep("gray", length(m))#
		# textcols[tabletext$Category=="Not Lobar"] <- "black"#
		forestplot2(tabletext, log(m), log(l), log(u), clip=clip, zero=0, xlog=TRUE, is.summary= is.summary , #
			 col=meta.colors(box=cols,line=lcols, summary="royalblue", text=textcols), fontsize=fontsize, graphwidth=unit(gwidth, "inches"), xrange=xrange, cgap=unit(0, "mm"), xticks=xticks)#
		main <- paste("Odds Ratios for Study1 Log scale", sep="")#
	    grid.text(main, x=unit(0.5, "npc"), y=unit(myy, "npc"), gp=gpar(fontsize=fs))#
   		grid.text("Favors: Trt", x=unit(xx[1]-0.2, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs))    #
   		grid.text("Placebo", x=unit(xx[2]-0.175, "npc"), y=unit(yy, "npc"), gp=gpar(fontsize=fs)) #
	  dev.off()  	    #
iadd <- 3#
setwd(resdir)#
	texfile <- paste("Toy_Example.tex", sep="")#
	tex <- NULL#
	tex <- c("\\documentclass{article}", #
	"\\usepackage{float}", #
	"\\usepackage{verbatim}", #
	"\\usepackage{graphicx}", #
	"\\usepackage{onimage}", #
	"\\usepackage[active, tightpage]{preview}", #
	"\\PreviewEnvironment{tabular}", #
	"\\begin{document}", #
	"% Define block styles", #
	"\\begin{tabular}{cc}")#
	mtrim <- strim <- c(0, 2, 1, 2)#
	coords <- c(0.5, 1)#
	if (iadd > 2) {#
		coords <- c(0.4, 0.7)#
		mtrim <- strim <- c(2.75, 2, 2, 2)#
		strim[1] <- 4.8#
		strim[3] <- 4#
	}	#
	mtrim <- paste(mtrim, "", sep="cm", collapse = " ")#
	mtrimmer <- paste("[trim=", mtrim, ", clip=TRUE]", sep="")#
#
	strim <- paste(strim, "", sep="cm", collapse = " ")#
	strimmer <- paste("[trim=", strim, ", clip=TRUE]", sep="")#
	boxes <- c(red=paste("    \\draw [red, line width=1pt] (", coords[1], ",0.22) rectangle (", coords[2], ", 0.2525);", sep=""), orange=paste("    \\draw [orange, line width=1pt] (", coords[1], ", 0.35) rectangle (", coords[2], ", 0.46);", sep=""), green=paste("    \\draw [green, line width=1pt] (", coords[1], ",0.48) rectangle (", coords[2], ", 0.51);", sep=""))#
	boxes <- ""#
	tex <- c(tex, #
	paste("\\begin{tikzonimage}", mtrimmer, "{Toy_Study1.pdf}", sep=""), #
	"%    \\draw [orange, line width=1pt] (0.5,0.25) rectangle (1, 0.3);", #
	"\\end{tikzonimage} & ")#
	tex <- c(tex, #
	paste("\\begin{tikzonimage}", strimmer, "{Toy_Study2.pdf}", sep=""), #
	paste("%    \\draw [green, line width=1pt] (", coords[1], ",0.25) rectangle (", coords[2], ", 0.3);", sep=""), #
	boxes[!names(boxes) %in% c("red")],#
	"\\end{tikzonimage}", #
	"\\end{tabular}", #
	"\\end{document}")#
	cat(tex, file=texfile, sep="\n")#
	system(sprintf('/usr/texbin/pdflatex "%s"', texfile))#
	system(sprintf('open "%s"', gsub(".tex", '.pdf', texfile, fixed=TRUE)))
