as.numeric(df[, "NIHSS HPR"]),
as.numeric(df[, "GCS HPR"]),
decreasing=TRUE),]
df[sapply(df, is.na)] = ""
rownames(df) = NULL
?revalue
rm(list=ls())
load("Top_0.01_Pvalues_df.Rda")
n = 10
nihss.tab = pvalimg.tab[["EVE_1"]]
nihss.tab = nihss.tab[order(nihss.tab$roi_mean_pct, decreasing=TRUE),]
nihss.tab = nihss.tab[, c("roi_mean_pct", "area")]
nihss.tab$roi_mean_pct = sprintf("%02.1f", nihss.tab$roi_mean_pct)
names(nihss.tab) = c("NIHSS HPR", "Area")
load("GCS_Top_1000_Pvalues_df.Rda")
gcs.tab = pvalimg.tab[["EVE_1"]]
gcs.tab = gcs.tab[order(gcs.tab$roi_mean_pct, decreasing=TRUE),]
gcs.tab = gcs.tab[, c("roi_mean_pct", "area")]
gcs.tab$roi_mean_pct = sprintf("%02.1f", gcs.tab$roi_mean_pct)
names(gcs.tab) = c("GCS HPR", "Area")
load("Population_Table.Rda")
pop.tab = dfs[["EVE_1"]]
pop.tab = pop.tab[order(pop.tab$EVE_1_ROI_Pct, decreasing=TRUE),]
pop.tab = pop.tab[, c("EVE_1_ROI_Pct", "Area")]
pop.tab$EVE_1_ROI_Pct = sprintf("%02.1f", pop.tab$EVE_1_ROI_Pct)
names(pop.tab) = c("Population Engagement", "Area")
df = merge(pop.tab, nihss.tab, sort=FALSE, all = TRUE)
df = merge(df, gcs.tab, sort=FALSE, all = TRUE)
df = df[
grep("GLOBUS_PALLIDUS|THALAMUS|PUTAMEN", df$Area),]
proper = function(x){
substring(x, 1, 1) <- toupper(substring(x, 1, 1))
substring(x, 2) <- tolower(substring(x, 2))
x
}
df$Area = proper(df$Area)
df$Area = revalue(df$Area, c("Background" = "CSF"),
warn_missing = FALSE)
df$Area = gsub("_", " ", df$Area)
df = df[order(as.numeric(df$"Population Engagement"),
as.numeric(df[, "NIHSS HPR"]),
as.numeric(df[, "GCS HPR"]),
decreasing=TRUE),]
df[sapply(df, is.na)] = ""
rownames(df) = NULL
df
load("Top_0.01_Pvalues_df.Rda")
nihss.tab = pvalimg.tab[["EVE_1"]]
nihss.tab = nihss.tab[order(nihss.tab$roi_mean_pct, decreasing=TRUE),]
nihss.tab = nihss.tab[, c("roi_mean_pct", "area")]
nihss.tab$roi_mean_pct = sprintf("%02.1f", nihss.tab$roi_mean_pct)
names(nihss.tab) = c("NIHSS HPR", "Area")
load("GCS_Top_1000_Pvalues_df.Rda")
gcs.tab = pvalimg.tab[["EVE_1"]]
gcs.tab = gcs.tab[order(gcs.tab$roi_mean_pct, decreasing=TRUE),]
gcs.tab = gcs.tab[, c("roi_mean_pct", "area")]
gcs.tab$roi_mean_pct = sprintf("%02.1f", gcs.tab$roi_mean_pct)
names(gcs.tab) = c("GCS HPR", "Area")
load("Population_Table.Rda")
pop.tab = dfs[["EVE_1"]]
pop.tab = pop.tab[order(pop.tab$EVE_1_ROI_Pct, decreasing=TRUE),]
pop.tab = pop.tab[, c("EVE_1_ROI_Pct", "Area")]
pop.tab$EVE_1_ROI_Pct = sprintf("%02.1f", pop.tab$EVE_1_ROI_Pct)
names(pop.tab) = c("Population Engagement", "Area")
df = merge(pop.tab, nihss.tab, sort=FALSE, all = TRUE)
df = merge(df, gcs.tab, sort=FALSE, all = TRUE)
df = df[
grep("GLOBUS_PALLIDUS|THALAMUS|PUTAMEN", df$Area),]
proper = function(x){
substring(x, 1, 1) <- toupper(substring(x, 1, 1))
substring(x, 2) <- tolower(substring(x, 2))
x
}
df$Area = proper(df$Area)
df$Area = revalue(df$Area, c("Background" = "CSF"),
warn_missing = FALSE)
df$Area = gsub("_", " ", df$Area)
df
df = df[order(df$Area),]
df
rm(list=ls())
load("Top_0.01_Pvalues_df.Rda")
n = 10
nihss.tab = pvalimg.tab[["EVE_1"]]
nihss.tab = nihss.tab[order(nihss.tab$roi_mean_pct, decreasing=TRUE),]
nihss.tab = nihss.tab[, c("roi_mean_pct", "area")]
nihss.tab$roi_mean_pct = sprintf("%02.1f", nihss.tab$roi_mean_pct)
names(nihss.tab) = c("NIHSS HPR", "Area")
load("GCS_Top_1000_Pvalues_df.Rda")
gcs.tab = pvalimg.tab[["EVE_1"]]
gcs.tab = gcs.tab[order(gcs.tab$roi_mean_pct, decreasing=TRUE),]
gcs.tab = gcs.tab[, c("roi_mean_pct", "area")]
gcs.tab$roi_mean_pct = sprintf("%02.1f", gcs.tab$roi_mean_pct)
names(gcs.tab) = c("GCS HPR", "Area")
load("Population_Table.Rda")
pop.tab = dfs[["EVE_1"]]
pop.tab = pop.tab[order(pop.tab$EVE_1_ROI_Pct, decreasing=TRUE),]
pop.tab = pop.tab[, c("EVE_1_ROI_Pct", "Area")]
pop.tab$EVE_1_ROI_Pct = sprintf("%02.1f", pop.tab$EVE_1_ROI_Pct)
names(pop.tab) = c("Population Engagement", "Area")
pop.tab["MIDDLE_OCCIPITAL_GYRUS",]
rm(list=ls())
load("Top_0.01_Pvalues_df.Rda")
n = 10
nihss.tab = pvalimg.tab[["EVE_1"]]
nihss.tab = nihss.tab[order(nihss.tab$roi_mean_pct, decreasing=TRUE),]
nihss.tab = nihss.tab[, c("roi_mean_pct", "area")]
nihss.tab$roi_mean_pct = sprintf("%02.1f", nihss.tab$roi_mean_pct)
names(nihss.tab) = c("NIHSS HPR", "Area")
load("GCS_Top_1000_Pvalues_df.Rda")
gcs.tab = pvalimg.tab[["EVE_1"]]
gcs.tab = gcs.tab[order(gcs.tab$roi_mean_pct, decreasing=TRUE),]
gcs.tab = gcs.tab[, c("roi_mean_pct", "area")]
gcs.tab$roi_mean_pct = sprintf("%02.1f", gcs.tab$roi_mean_pct)
names(gcs.tab) = c("GCS HPR", "Area")
load("Population_Table.Rda")
pop.tab = dfs[["EVE_1"]]
pop.tab
rm(list=ls())
load("Top_0.01_Pvalues_df.Rda")
n = 10
nihss.tab = pvalimg.tab[["EVE_1"]]
nihss.tab = nihss.tab[order(nihss.tab$roi_mean_pct, decreasing=TRUE),]
nihss.tab = nihss.tab[, c("roi_mean_pct", "area")]
nihss.tab$roi_mean_pct = sprintf("%02.1f", nihss.tab$roi_mean_pct)
names(nihss.tab) = c("NIHSS HPR", "Area")
load("GCS_Top_1000_Pvalues_df.Rda")
gcs.tab = pvalimg.tab[["EVE_1"]]
gcs.tab = gcs.tab[order(gcs.tab$roi_mean_pct, decreasing=TRUE),]
gcs.tab = gcs.tab[, c("roi_mean_pct", "area")]
gcs.tab$roi_mean_pct = sprintf("%02.1f", gcs.tab$roi_mean_pct)
names(gcs.tab) = c("GCS HPR", "Area")
load("Population_Table.Rda")
pop.tab = dfs[["EVE_1"]]
rm(list=ls())
load("Top_0.01_Pvalues_df.Rda")
n = 10
nihss.tab = pvalimg.tab[["EVE_1"]]
nihss.tab = nihss.tab[order(nihss.tab$roi_mean_pct, decreasing=TRUE),]
nihss.tab = nihss.tab[, c("roi_mean_pct", "area")]
nihss.tab$roi_mean_pct = sprintf("%02.1f", nihss.tab$roi_mean_pct)
names(nihss.tab) = c("NIHSS HPR", "Area")
load("GCS_Top_1000_Pvalues_df.Rda")
gcs.tab = pvalimg.tab[["EVE_1"]]
gcs.tab = gcs.tab[order(gcs.tab$roi_mean_pct, decreasing=TRUE),]
gcs.tab = gcs.tab[, c("roi_mean_pct", "area")]
gcs.tab$roi_mean_pct = sprintf("%02.1f", gcs.tab$roi_mean_pct)
names(gcs.tab) = c("GCS HPR", "Area")
load("Population_Table.Rda")
pop.tab = dfs[["EVE_1"]]
pop.tab = pop.tab[order(pop.tab$EVE_1_ROI_Pct, decreasing=TRUE),]
pop.tab = pop.tab[, c("EVE_1_ROI_Pct", "Area")]
pop.tab$EVE_1_ROI_Pct = sprintf("%02.1f", pop.tab$EVE_1_ROI_Pct)
names(pop.tab) = c("Population Engagement", "Area")
df = merge(pop.tab, nihss.tab, sort=FALSE, all = TRUE)
df = merge(df, gcs.tab, sort=FALSE, all = TRUE)
df = df[
grep("GLOBUS_PALLIDUS|THALAMUS|PUTAMEN", df$Area),]
proper = function(x){
substring(x, 1, 1) <- toupper(substring(x, 1, 1))
substring(x, 2) <- tolower(substring(x, 2))
x
}
df$Area = proper(df$Area)
df$Area = revalue(df$Area, c("Background" = "CSF"),
warn_missing = FALSE)
df$Area = gsub("_", " ", df$Area)
df = df[order(as.numeric(df$"Population Engagement"),
as.numeric(df[, "NIHSS HPR"]),
as.numeric(df[, "GCS HPR"]),
decreasing=TRUE),]
df[sapply(df, is.na)] = ""
rownames(df) = NULL
df
rm(list=ls())
load("Top_0.01_Pvalues_df.Rda")
n = 10
nihss.tab = pvalimg.tab[["EVE_1"]]
nihss.tab = nihss.tab[order(nihss.tab$roi_mean_pct, decreasing=TRUE),]
nihss.tab = nihss.tab[, c("roi_mean_pct", "area")]
nihss.tab$roi_mean_pct = sprintf("%02.1f", nihss.tab$roi_mean_pct)
names(nihss.tab) = c("NIHSS HPR", "Area")
load("GCS_Top_1000_Pvalues_df.Rda")
gcs.tab = pvalimg.tab[["EVE_1"]]
gcs.tab = gcs.tab[order(gcs.tab$roi_mean_pct, decreasing=TRUE),]
gcs.tab = gcs.tab[, c("roi_mean_pct", "area")]
gcs.tab$roi_mean_pct = sprintf("%02.1f", gcs.tab$roi_mean_pct)
names(gcs.tab) = c("GCS HPR", "Area")
load("Population_Table.Rda")
pop.tab = dfs[["EVE_1"]]
pop.tab = pop.tab[order(pop.tab$EVE_1_ROI_Pct, decreasing=TRUE),]
pop.tab = pop.tab[, c("EVE_1_ROI_Pct", "Area")]
pop.tab$EVE_1_ROI_Pct = sprintf("%02.1f", pop.tab$EVE_1_ROI_Pct)
names(pop.tab) = c("Population Engagement", "Area")
df = merge(pop.tab, nihss.tab, sort=FALSE, all = TRUE)
df = merge(df, gcs.tab, sort=FALSE, all = TRUE)
df = df[
grep("GLOBUS_PALLIDUS|THALAMUS|PUTAMEN", df$Area),]
proper = function(x){
substring(x, 1, 1) <- toupper(substring(x, 1, 1))
substring(x, 2) <- tolower(substring(x, 2))
x
}
df$Area = proper(df$Area)
df$Area = revalue(df$Area, c("Background" = "CSF"),
warn_missing = FALSE)
df$Area = gsub("_", " ", df$Area)
df = df[order(df$Area),]
rownames(df) = NULL
df
(29.2 + 17.5)/2
dfs[["MNI"]]
(9.1+6.8)/2
(25.2 + 14.8)/2
(34.8 + 44.7)/2
(9.4  + 3.8)/2
(14.6+3.1)/2
library(ggplto2)
library(ggplot2)
?geom_density
ggplot(diamonds, aes(x = price)) +
stat_density(aes(ymax = ..density..,  ymin = -..density..),
fill = "grey50", colour = "grey50",
geom = "ribbon", position = "identity") +
facet_grid(. ~ cut) +
coord_flip()
?hist
h1 = hist(df$x)
library(ggplot2)
df = data.frame(x = rnorm(100), x2 = rnorm(100, mean=2))
g = ggplot(df, aes(x)) + geom_histogram( aes(x = x, y = ..density..), fill="blue") +
geom_histogram( aes(x = x2, y = -..density..), fill= "green")
print(g)
print(g + coord_flip())
h1 = hist(df$x)
h2 = hist(df$x2)
h2$counts = - h2$counts
h1 = hist(df$x, plot=FALSE)
h2 = hist(df$x2, plot=FALSE)
h2$counts = - h2$counts
hmax = max(h1$counts)
hmin = min(h2$counts)
X = c(h1$breaks, h2$breaks)
xmax = max(X)
xmin = min(X)
plot(h1, ylim=c(hmin, hmax), col="green", xlim=c(xmin, xmax))
lines(h2, col="blue")
?hist
h2$breaks
h2$density
h2$mids
h2$breaks
?barplot
barplot(h2$counts)
barplot(h2$counts, space=0)
barplot(h2$counts, space=0, horiz=TRUE)
?barplot
barplot(h2$counts, space=0, horiz=TRUE, xlim=c(hmin, hmax))
barplot(-h1$counts, space=0, horiz=TRUE, xlim=c(hmin, hmax))
barplot(h2$counts, space=0, horiz=TRUE, xlim=c(hmin, hmax))
hmin
hmax
barplot(h1$counts, space=0, horiz=TRUE, xlim=c(hmin, hmax))
?barplot
barplot(h2$counts, space=0, horiz=TRUE, xlim=c(hmin, hmax))
barplot(h1$counts, space=0, horiz=TRUE, add=TRUE)
barplot(h1$counts, space=0, horiz=TRUE, xlim=c(hmin, hmax),
col="green")
barplot(h2$counts, space=0, horiz=TRUE, add=TRUE, col="blue")
h1$breaks
axis(side =2, labels=h1$breaks)
barplot(h1$counts, space=0, horiz=TRUE, xlim=c(hmin, hmax),
col="green")
barplot(h2$counts, space=0, horiz=TRUE, add=TRUE, col="blue")
axis(side =2, labels=h1$breaks, at = seq_along(h1$breaks))
?barplot
barplot(h1$counts, space=0, horiz=TRUE, xlim=c(hmin, hmax),
col="green")
barplot(h2$counts, space=0, horiz=TRUE, add=TRUE, col="blue")
axis(side =2, labels=h1$breaks, at = seq_along(h1$breaks)-.5)
barplot(h1$counts, space=0, horiz=TRUE, xlim=c(hmin, hmax),
col="green")
barplot(h2$counts, space=0, horiz=TRUE, add=TRUE, col="blue")
axis(side =2, labels=h1$breaks, at = seq_along(h1$breaks)-.5)
barplot(h1$counts, space=0, horiz=TRUE, xlim=c(hmin, hmax),
col="green")
barplot(h2$counts, space=0, horiz=TRUE, add=TRUE, col="blue")
axis(side =2, labels=h1$breaks, at = seq_along(h1$breaks)-1.5)
## using base
h1 = hist(df$x, plot=FALSE)
h2 = hist(df$x2, plot=FALSE)
h2$counts = - h2$counts
hmax = max(h1$counts)
hmin = min(h2$counts)
X = c(h1$breaks, h2$breaks)
xmax = max(X)
xmin = min(X)
plot(h1, ylim=c(hmin, hmax), col="green", xlim=c(xmin, xmax))
lines(h2, col="blue")
barplot(h1$counts, space=0, horiz=TRUE, xlim=c(hmin, hmax),
col="green")
barplot(h2$counts, space=0, horiz=TRUE, add=TRUE, col="blue")
axis(side =2, labels=h1$breaks, at = seq_along(h1$breaks)-1.5)
h2$mids
barplot(h1$counts, space=0, horiz=TRUE, xlim=c(hmin, hmax),
col="green")
barplot(h2$counts, space=0, horiz=TRUE, add=TRUE, col="blue")
axis(side =2, labels=h2$mids, at = seq_along(h1$breaks)-1.5)
barplot(h1$counts, space=0, horiz=TRUE, xlim=c(hmin, hmax),
col="green")
barplot(h2$counts, space=0, horiz=TRUE, add=TRUE, col="blue")
axis(side =2, labels=h2$mids, at = seq_along(h1$mids)-1.5)
## using base
h1 = hist(df$x, plot=FALSE)
h2 = hist(df$x2, plot=FALSE)
h2$counts = - h2$counts
hmax = max(h1$counts)
hmin = min(h2$counts)
X = c(h1$breaks, h2$breaks)
xmax = max(X)
xmin = min(X)
plot(h1, ylim=c(hmin, hmax), col="green", xlim=c(xmin, xmax))
lines(h2, col="blue")
library(ggplot2)
df = data.frame(x = rnorm(100), x2 = rnorm(100, mean=2))
g = ggplot(df, aes(x)) + geom_histogram( aes(x = x, y = ..density..), fill="blue") +
geom_histogram( aes(x = x2, y = -..density..), fill= "green")
print(g)
print(g + coord_flip())
## using base
h1 = hist(df$x, plot=FALSE)
h2 = hist(df$x2, plot=FALSE)
h2$counts = - h2$counts
hmax = max(h1$counts)
hmin = min(h2$counts)
X = c(h1$breaks, h2$breaks)
xmax = max(X)
xmin = min(X)
plot(h1, ylim=c(hmin, hmax), col="green", xlim=c(xmin, xmax))
lines(h2, col="blue")
?barplot
hh1 = h1
hh2 = h2
library(plyr)
hh1 = rename(h1, c(mids="counts", counts="mids")
hh1 = rename(h1, c(mids="counts", counts="mids"))
plot(hh1)
library(plyr)
hh1 = rename(h1, c(mids="counts", counts="mids"))
hh2 = rename(h2, c(mids="counts", counts="mids"))
plot(h1)
plot(hh1)
library(plyr)
hh1 = rename(h1, c(mids="counts", counts="mids"))
hh2 = rename(h2, c(mids="counts", counts="mids"))
hh1$counts
hh1$mids
?hh1
?hist
plot(h1, type="l")
plot(h1)
plot(h1)
?plot
?barplot
plot(df$x, type="h")
plot(abs(df$x), type="h")
library(plyr)
hh1 = rename(h1, c(mids="counts", counts="mids"))
hh2 = rename(h2, c(mids="counts", counts="mids"))
plot(hh1)
hh1$counts
hh1$mids
?plot.histogram
plot.histogram
graphics:::plot.histogram
?stat_bin
df = data.frame(x = rnorm(100), x2 = rnorm(100, mean=2))
g = ggplot(df, aes(x)) + geom_histogram( aes(x = x, y = ..density..,
binwidth = range(x)/30), fill="blue") +
geom_histogram( aes(x = x2, y = -..density..), fill= "green")
print(g)
library(ggplot2)
df = data.frame(x = rnorm(100), x2 = rnorm(100, mean=2))
g = ggplot(df, aes(x)) + geom_histogram( aes(x = x, y = ..density..,)
binwidth = range(x)/30, fill="blue") +
geom_histogram( aes(x = x2, y = -..density..), fill= "green")
print(g)
library(ggplot2)
df = data.frame(x = rnorm(100), x2 = rnorm(100, mean=2))
g = ggplot(df, aes(x)) + geom_histogram( aes(x = x, y = ..density..,)
binwidth = range(df$x)/30, fill="blue")
library(ggplot2)
df = data.frame(x = rnorm(100), x2 = rnorm(100, mean=2))
g = ggplot(df, aes(x)) + geom_histogram( aes(x = x, y = ..density..),
binwidth = range(df$x)/30, fill="blue")
g
library(ggplot2)
df = data.frame(x = rnorm(100), x2 = rnorm(100, mean=2))
g = ggplot(df, aes(x)) + geom_histogram( aes(x = x, y = ..density..),
binwidth = range(x)/30, fill="blue")
library(ggplot2)
df = data.frame(x = rnorm(100), x2 = rnorm(100, mean=2))
g = ggplot(df, aes(x)) + geom_histogram( aes(x = x, y = ..density..),
binwidth = range(df$x)/30, fill="blue")
g
range(df$x)
?stat_bin
library(ggplot2)
df = data.frame(x = rnorm(100), x2 = rnorm(100, mean=2))
g = ggplot(df, aes(x)) + geom_histogram( aes(x = x, y = ..density..),
binwidth = diff(range(df$x))/30, fill="blue")
g
library(ggplot2)
df = data.frame(x = rnorm(100), x2 = rnorm(100, mean=2))
g = ggplot(df, aes(x)) + geom_histogram( aes(x = x, y = ..density..),
binwidth = diff(range(df$x))/30, fill="blue") +
geom_histogram( aes(x = x2, y = -..density..), binwidth = diff(range(df$x))/30, fill= "green")
print(g)
print(g + coord_flip())
library(knitr)
wp = TRUE
#### set up new post
wpfol <- "WordPress_Hopstat"
wpdir <- file.path("~/Dropbox/Public", wpfol)
wpdir <- path.expand(wpdir)
folname <- "Back_to_Back_Histograms"
mytitle <- 'Making Back-to-Back Histograms'
categories = c("rbloggers", "bmorebiostats")
# c("rbloggers", "bmorebiostats")
#"bmorebiostats"
publish = TRUE
fol = file.path(wpdir, folname)
rmdname <- file.path(wpdir, folname,  paste0(folname, ".Rmd"))
if (!file.exists(fol)) {
dir.create(fol)
}
if (!file.exists(rmdname)) {
file.create(rmdname)
system(sprintf("open %s", rmdname))
}
######### Send it to the Website
if (wp){
if (!require('RWordPress'))
install.packages('RWordPress',
repos = 'http://www.omegahat.org/R',
type = 'source')
library(RWordPress)
pwd = 'hopkinsstat'
stopifnot(pwd != 'PWD')
options(WordpressLogin = c(strictlystat = pwd))
uname <- names(getOption("WordpressLogin"))
options( WordpressURL = 'http://hopstat.wordpress.com/xmlrpc.php')
### change this for the new folder
stopifnot(file.exists(rmdname))
opts_knit$set(base.dir = wpdir)
#   opts_knit$set(
#     base.url = paste0(
#       'https://dl.dropboxusercontent.com/u/600586/', wpfol, '/'),
#                 base.dir = wpdir)
opts_knit$set(upload.fun = imgur_upload,
base.url = NULL) # upload all images to imgur.com
knit2wp(rmdname,
title = mytitle, categories = categories,
shortcode=TRUE, post_date_gmt = "20140430T11:11:04Z",
publish=publish)
}
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
wpfol <- "WordPress_Hopstat"
wpdir <- file.path("~/Dropbox/Public", wpfol)
setwd(wpdir)
library(knitr)
wp = TRUE
#### set up new post
wpfol <- "WordPress_Hopstat"
wpdir <- file.path("~/Dropbox/Public", wpfol)
wpdir <- path.expand(wpdir)
folname <- "How_to_Write_A_Lot"
mytitle <- 'How to Write a Lot'
categories = c("bmorebiostats")
#"rbloggers",
# c("rbloggers", "bmorebiostats")
#"bmorebiostats"
publish = TRUE
fol = file.path(wpdir, folname)
rmdname <- file.path(wpdir, folname,  paste0(folname, ".Rmd"))
if (!file.exists(fol)) {
dir.create(fol)
}
if (!file.exists(rmdname)) {
file.create(rmdname)
system(sprintf("open %s", rmdname))
}
#install the necessary packages
install.packages("ROAuth")
install.packages("twitteR")
install.packages("wordcloud")
install.packages("tm")
library("ROAuth")
library("twitteR")
library("wordcloud")
library("tm")
#necessary step for Windows
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
#to get your consumerKey and consumerSecret see the twitteR documentation for instructions
cred <- OAuthFactory$new(consumerKey='secret',
consumerSecret='secret',
requestURL='https://api.twitter.com/oauth/request_token',
accessURL='http://api.twitter.com/oauth/access_token',
authURL='http://api.twitter.com/oauth/authorize')
red
cred
