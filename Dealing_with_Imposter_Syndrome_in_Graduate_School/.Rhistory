geocheck = strsplit(geocode[[1]], ",")[[1]]
lat = as.numeric(geocheck[1])
lon = as.numeric(geocheck[2])
if ((lon > 180) || (lon < -180)) {
stop("Longitude need to be in range [180,-180].")
}
if ((lat > 90) || (lat < -90)) {
stop("Latitude need to be in range [90.0,-90.0].")
}
}
params <- buildCommonArgs(lang = lang, locale = locale, since = since_date,
until = until_date, geocode = geocode, since_id = sinceID,
max_id = maxID, result_type = resultType)
params[["q"]] <- searchString
rm( list = ls() )
library(twitteR)
api_file = "~/Dropbox/Twitter_API_Key.txt"
twitter = readLines(api_file)
setup_twitter_oauth(twitter[1], twitter[2], twitter[3], twitter[4])
searchString = "@kwbroman"
n = 25; lang = NULL; since = NULL; until = NULL;
locale = NULL; geocode = NULL; sinceID = NULL; maxID = NULL;
resultType = NULL; retryOnRateLimit = 120;
rm( list = ls() )
library(twitteR)
api_file = "~/Dropbox/Twitter_API_Key.txt"
twitter = readLines(api_file)
setup_twitter_oauth(twitter[1], twitter[2], twitter[3], twitter[4])
searchString = "@kwbroman"
user = "strictlystat"
n = 25; lang = NULL; since = NULL; until = NULL;
locale = NULL; geocode = NULL; sinceID = NULL; maxID = NULL;
resultType = NULL; retryOnRateLimit = 120;
if (nchar(searchString) > 1000) {
stop("searchString can only be up to 1000 characters")
}
if (n <= 0)
stop("n must be positive")
n <- as.integer(n)
if (is.null(since)) {
since_date = NULL
}  else {
since_date = strsplit(since, " ")[[1]][1]
}
if (is.null(until)) {
until_date = NULL
}  else {
until_date = strsplit(until, " ")[[1]][1]
if (until_date == since_date) {
until_date = as.Date(since_date) + 1
}
}
if (!is.null(geocode)) {
geocheck = strsplit(geocode[[1]], ",")[[1]]
lat = as.numeric(geocheck[1])
lon = as.numeric(geocheck[2])
if ((lon > 180) || (lon < -180)) {
stop("Longitude need to be in range [180,-180].")
}
if ((lat > 90) || (lat < -90)) {
stop("Latitude need to be in range [90.0,-90.0].")
}
}
params <- twitteR:::buildCommonArgs(lang = lang, locale = locale, since = since_date,
until = until_date, geocode = geocode, since_id = sinceID,
max_id = maxID, result_type = resultType)
params[["q"]] <- searchString
params[["include_entities"]] = TRUE
if (!is.null(user)){
uParams = twitteR:::parseUsers(user)
params[["user_id"]] = uParams[["user_id"]]
params[["screen_name"]] = uParams[["screen_name"]]
}
doRppAPICall
jsonList <- twitteR:::doRppAPICall("search/tweets", n, params = params,
retryOnRateLimit = retryOnRateLimit
)()
jsonList <- twitteR:::doRppAPICall("search/tweets", n, params = params,
retryOnRateLimit = retryOnRateLimit
)
statuses = import_statuses(jsonList)
datetimes = sapply(statuses, function(x) x$getCreated())
if (is.null(since)) {
since_statuses = seq_along(statuses)
} else {
since_statuses = which(datetimes >= as.numeric(as.POSIXct(since,
tz = "UTC")))
}
if (is.null(until)) {
until_statuses = seq_along(statuses)
} else {
until_statuses = which(datetimes <= as.numeric(as.POSIXct(until,
tz = "UTC")))
}
good_statuses = intersect(since_statuses, until_statuses)
good_statuses
statuses[good_statuses]
params
uParams
getSlots
statuses
?statuses
?status
rm( list = ls() )
library(twitteR)
api_file = "~/Dropbox/Twitter_API_Key.txt"
twitter = readLines(api_file)
setup_twitter_oauth(twitter[1], twitter[2], twitter[3], twitter[4])
##############################
# Get favorited tweets by a certain user
##############################
user = "strictlystat"
favs = favorites(user = user, n = 100)
find_user = "kwbroman"
sns = sapply(favs, `[[`, "screenName")
find_user_favs = favs[sns %in% find_user]
find_user = "kwbroman"
sns = sapply(favs, `[[`, "screenName")
find_user_favs = favs[sns %in% find_user]
find_user_favs
?mentions
mentions
ss = searchTwitter("@kwbroman -from:@strictlystat")
ss
ss = searchTwitter("@kwbroman+from:@strictlystat")
ss
ss = searchTwitter("@kwbroman+from:strictlystat")
ss
ss = searchTwitter("kwbroman+from:strictlystat")
ss
searchTwitter()
searchTwitter
ss = searchTwitter("@kwbroman+from:@strictlystat")
searchTwitter()
searchTwitter
searchTwitter()
searchTwitter
?searchTwitter
source('~/Dropbox/Twitter_Example.R')
ss
?searchTwitteR
library(swirl)
swirl()
y
bye()
library(dplyr)
mtcars
head(mtcars)
mtcars[ mtcars$gear == 4, ]
gear4 = filter(mtcars, gear == 4)
head(gear4)
?filter
library(BiocParallel)
?BiocParallel:::bplapply
browseVignettes("BiocParallel")
library(caret)
library(readr)
?read_csv
library(data.table)
?fread
library(ggvis)
browseVignettes("ggvis")
??ggvis
?ggvis
mtcars %>% ggvis(~mpg, ~wt)
mtcars %>%
ggvis(~mpg, ~wt) %>%
layer_points() %>%
layer_smooths()
library(manipulate)
help("manipulate")
manipulate(
plot(cars, xlim=c(x.min,x.max)),
x.min=slider(0,15),
x.max=slider(15,30))
manipulate(
plot(cars, xlim=c(x.min,x.max)),
x.min=slider(0,15),
x.max=slider(15,30))
.Platform
.Platform()
.Platform
.Platform$OS.type
source('~/Dropbox/ShinyApps/ShinyDesignOptimizer/Descriptions.R')
rm(list=ls())
library(knitr)
wp = TRUE
publish = TRUE
# knit2wp2 = function (input, title = "A post from knitr", ..., shortcode = FALSE,
#                      encoding = getOption("encoding"), publish = TRUE)
# {
#   out = knit(input, encoding = encoding)
#   on.exit(unlink(out))
#   con = file(out, encoding = encoding)
#   on.exit(close(con), add = TRUE)
#   content = knitr:::native_encode(readLines(con, warn = FALSE))
#   content = paste(content, collapse = "\n")
#   content = markdown::markdownToHTML(text = content, fragment.only = TRUE)
#   shortcode = rep(shortcode, length.out = 2L)
#   if (shortcode[1]) {
#     content = gsub("<pre><code class=\"([[:alpha:]]+)\">(.+?)</code></pre>",
#                    "[sourcecode language=\"\\1\"]\\2[/sourcecode]",
#                    content)
#   }
#   content = gsub("<pre><code( class=\"no-highlight\"|)>(.+?)</code></pre>",
#                  if (shortcode[2])
#                    "[sourcecode]\\2[/sourcecode]"
#                  else "<pre>\\2</pre>", content)
#   content = knitr:::native_encode(content, "UTF-8")
#   title = knitr:::native_encode(title, "UTF-8")
#   return(list(content = content, title=title))
# }
#### set up new post
wpfol <- "WordPress_Hopstat"
wpdir <- file.path("~/Dropbox/Public", wpfol)
wpdir <- path.expand(wpdir)
# mytitle <- folname <- "A full structural MRI processing pipeline in R"
mytitle <- folname <- "Dealing with Imposter Syndrome in Graduate School"
# folname <- "Converting LaTeX to MS Word"
folname = gsub(" ", "_", folname)
folname = gsub(",", "_", folname)
folname = gsub("'", "_", folname)
folname = gsub(":", "_", folname)
folname = gsub(";", "_", folname)
# categories = c("bmorebiostats")
# categories = "rbloggers"
categories = c("rbloggers", "bmorebiostats")
#"bmorebiostats"
fol = file.path(wpdir, folname)
rmdname <- file.path(wpdir, folname,  paste0(folname, ".Rmd"))
if (!file.exists(fol)) {
dir.create(fol)
}
if (!file.exists(rmdname)) {
file.create(rmdname)
addtxt = paste0("---\n",
paste0('title: "', mytitle, '"\n'),
'author: "John Muschelli"\n',
"date: '`r Sys.Date()`'\n", "output: html_document\n", "---\n")
addtxt = paste0(addtxt,
"```{r label=opts, results='hide', echo=FALSE, message = FALSE, warning=FALSE}",
"\n", "library(knitr)\n", "opts_chunk$set(echo=TRUE, ",
"prompt=FALSE, message=FALSE, warning=FALSE, ",
'comment="", ', "results='hide')\n", "```")
cat(addtxt, file=rmdname)
}
system(sprintf("open %s", shQuote(rmdname)))
setwd(file.path(wpdir, folname))
rm(list=ls())
library(knitr)
wp = TRUE
publish = TRUE
# knit2wp2 = function (input, title = "A post from knitr", ..., shortcode = FALSE,
#                      encoding = getOption("encoding"), publish = TRUE)
# {
#   out = knit(input, encoding = encoding)
#   on.exit(unlink(out))
#   con = file(out, encoding = encoding)
#   on.exit(close(con), add = TRUE)
#   content = knitr:::native_encode(readLines(con, warn = FALSE))
#   content = paste(content, collapse = "\n")
#   content = markdown::markdownToHTML(text = content, fragment.only = TRUE)
#   shortcode = rep(shortcode, length.out = 2L)
#   if (shortcode[1]) {
#     content = gsub("<pre><code class=\"([[:alpha:]]+)\">(.+?)</code></pre>",
#                    "[sourcecode language=\"\\1\"]\\2[/sourcecode]",
#                    content)
#   }
#   content = gsub("<pre><code( class=\"no-highlight\"|)>(.+?)</code></pre>",
#                  if (shortcode[2])
#                    "[sourcecode]\\2[/sourcecode]"
#                  else "<pre>\\2</pre>", content)
#   content = knitr:::native_encode(content, "UTF-8")
#   title = knitr:::native_encode(title, "UTF-8")
#   return(list(content = content, title=title))
# }
#### set up new post
wpfol <- "WordPress_Hopstat"
wpdir <- file.path("~/Dropbox/Public", wpfol)
wpdir <- path.expand(wpdir)
# mytitle <- folname <- "A full structural MRI processing pipeline in R"
mytitle <- folname <- "Dealing with Imposter Syndrome in Graduate School"
# folname <- "Converting LaTeX to MS Word"
folname = gsub(" ", "_", folname)
folname = gsub(",", "_", folname)
folname = gsub("'", "_", folname)
folname = gsub(":", "_", folname)
folname = gsub(";", "_", folname)
# categories = c("bmorebiostats")
# categories = "rbloggers"
categories = c("rbloggers", "bmorebiostats")
#"bmorebiostats"
fol = file.path(wpdir, folname)
rmdname <- file.path(wpdir, folname,  paste0(folname, ".Rmd"))
if (!file.exists(fol)) {
dir.create(fol)
}
if (!file.exists(rmdname)) {
file.create(rmdname)
addtxt = paste0("---\n",
paste0('title: "', mytitle, '"\n'),
'author: "John Muschelli"\n',
"date: '`r Sys.Date()`'\n", "output: html_document\n", "---\n")
addtxt = paste0(addtxt,
"```{r label=opts, results='hide', echo=FALSE, message = FALSE, warning=FALSE}",
"\n", "library(knitr)\n", "opts_chunk$set(echo=TRUE, ",
"prompt=FALSE, message=FALSE, warning=FALSE, ",
'comment="", ', "results='hide')\n", "```")
cat(addtxt, file=rmdname)
}
system(sprintf("open %s", shQuote(rmdname)))
setwd(file.path(wpdir, folname))
rm( list = ls() )
library(twitteR)
api_file = "~/Dropbox/Twitter_API_Key.txt"
twitter = readLines(api_file)
setup_twitter_oauth(twitter[1], twitter[2], twitter[3], twitter[4])
rm( list = ls() )
library(twitteR)
api_file = "~/Dropbox/Twitter_API_Key.txt"
twitter = readLines(api_file)
setup_twitter_oauth(twitter[1], twitter[2], twitter[3], twitter[4])
ss = searchTwitter("@StatModeling PMXStan")
ss
ss[[1]]
rm(list=ls())
library(knitr)
wp = TRUE
publish = TRUE
# knit2wp2 = function (input, title = "A post from knitr", ..., shortcode = FALSE,
#                      encoding = getOption("encoding"), publish = TRUE)
# {
#   out = knit(input, encoding = encoding)
#   on.exit(unlink(out))
#   con = file(out, encoding = encoding)
#   on.exit(close(con), add = TRUE)
#   content = knitr:::native_encode(readLines(con, warn = FALSE))
#   content = paste(content, collapse = "\n")
#   content = markdown::markdownToHTML(text = content, fragment.only = TRUE)
#   shortcode = rep(shortcode, length.out = 2L)
#   if (shortcode[1]) {
#     content = gsub("<pre><code class=\"([[:alpha:]]+)\">(.+?)</code></pre>",
#                    "[sourcecode language=\"\\1\"]\\2[/sourcecode]",
#                    content)
#   }
#   content = gsub("<pre><code( class=\"no-highlight\"|)>(.+?)</code></pre>",
#                  if (shortcode[2])
#                    "[sourcecode]\\2[/sourcecode]"
#                  else "<pre>\\2</pre>", content)
#   content = knitr:::native_encode(content, "UTF-8")
#   title = knitr:::native_encode(title, "UTF-8")
#   return(list(content = content, title=title))
# }
#### set up new post
wpfol <- "WordPress_Hopstat"
wpdir <- file.path("~/Dropbox/Public", wpfol)
wpdir <- path.expand(wpdir)
# mytitle <- folname <- "A full structural MRI processing pipeline in R"
mytitle <- folname <- "Dealing with Imposter Syndrome in Graduate School"
# folname <- "Converting LaTeX to MS Word"
folname = gsub(" ", "_", folname)
folname = gsub(",", "_", folname)
folname = gsub("'", "_", folname)
folname = gsub(":", "_", folname)
folname = gsub(";", "_", folname)
# categories = c("bmorebiostats")
# categories = "rbloggers"
categories = c("rbloggers", "bmorebiostats")
#"bmorebiostats"
fol = file.path(wpdir, folname)
rmdname <- file.path(wpdir, folname,  paste0(folname, ".Rmd"))
if (!file.exists(fol)) {
dir.create(fol)
}
if (!file.exists(rmdname)) {
file.create(rmdname)
addtxt = paste0("---\n",
paste0('title: "', mytitle, '"\n'),
'author: "John Muschelli"\n',
"date: '`r Sys.Date()`'\n", "output: html_document\n", "---\n")
addtxt = paste0(addtxt,
"```{r label=opts, results='hide', echo=FALSE, message = FALSE, warning=FALSE}",
"\n", "library(knitr)\n", "opts_chunk$set(echo=TRUE, ",
"prompt=FALSE, message=FALSE, warning=FALSE, ",
'comment="", ', "results='hide')\n", "```")
cat(addtxt, file=rmdname)
}
system(sprintf("open %s", shQuote(rmdname)))
setwd(file.path(wpdir, folname))
rm(list=ls())
library(knitr)
wp = TRUE
publish = TRUE
# knit2wp2 = function (input, title = "A post from knitr", ..., shortcode = FALSE,
#                      encoding = getOption("encoding"), publish = TRUE)
# {
#   out = knit(input, encoding = encoding)
#   on.exit(unlink(out))
#   con = file(out, encoding = encoding)
#   on.exit(close(con), add = TRUE)
#   content = knitr:::native_encode(readLines(con, warn = FALSE))
#   content = paste(content, collapse = "\n")
#   content = markdown::markdownToHTML(text = content, fragment.only = TRUE)
#   shortcode = rep(shortcode, length.out = 2L)
#   if (shortcode[1]) {
#     content = gsub("<pre><code class=\"([[:alpha:]]+)\">(.+?)</code></pre>",
#                    "[sourcecode language=\"\\1\"]\\2[/sourcecode]",
#                    content)
#   }
#   content = gsub("<pre><code( class=\"no-highlight\"|)>(.+?)</code></pre>",
#                  if (shortcode[2])
#                    "[sourcecode]\\2[/sourcecode]"
#                  else "<pre>\\2</pre>", content)
#   content = knitr:::native_encode(content, "UTF-8")
#   title = knitr:::native_encode(title, "UTF-8")
#   return(list(content = content, title=title))
# }
#### set up new post
wpfol <- "WordPress_Hopstat"
wpdir <- file.path("~/Dropbox/Public", wpfol)
wpdir <- path.expand(wpdir)
# mytitle <- folname <- "A full structural MRI processing pipeline in R"
mytitle <- folname <- "Dealing with Imposter Syndrome in Graduate School"
# folname <- "Converting LaTeX to MS Word"
folname = gsub(" ", "_", folname)
folname = gsub(",", "_", folname)
folname = gsub("'", "_", folname)
folname = gsub(":", "_", folname)
folname = gsub(";", "_", folname)
# categories = c("bmorebiostats")
# categories = "rbloggers"
categories = c("rbloggers", "bmorebiostats")
#"bmorebiostats"
fol = file.path(wpdir, folname)
rmdname <- file.path(wpdir, folname,  paste0(folname, ".Rmd"))
if (!file.exists(fol)) {
dir.create(fol)
}
if (!file.exists(rmdname)) {
file.create(rmdname)
addtxt = paste0("---\n",
paste0('title: "', mytitle, '"\n'),
'author: "John Muschelli"\n',
"date: '`r Sys.Date()`'\n", "output: html_document\n", "---\n")
addtxt = paste0(addtxt,
"```{r label=opts, results='hide', echo=FALSE, message = FALSE, warning=FALSE}",
"\n", "library(knitr)\n", "opts_chunk$set(echo=TRUE, ",
"prompt=FALSE, message=FALSE, warning=FALSE, ",
'comment="", ', "results='hide')\n", "```")
cat(addtxt, file=rmdname)
}
system(sprintf("open %s", shQuote(rmdname)))
setwd(file.path(wpdir, folname))
######### Send it to the Website
if (wp){
#   if (!require('RWordPress'))
#     install.packages('RWordPress',
#                      repos = 'http://www.omegahat.org/R',
#                      type = 'source')
#   library(RWordPress)
pwd = 'hopkinsstat'
stopifnot(pwd != 'PWD')
options(WordpressLogin = c(strictlystat = pwd))
uname <- names(getOption("WordpressLogin"))
options( WordpressURL = 'https://hopstat.wordpress.com/xmlrpc.php')
### change this for the new folder
stopifnot(file.exists(rmdname))
opts_knit$set(base.dir = file.path(wpdir, folname))
#     opts_knit$set(
#       base.url = paste0(
#         'https://dl.dropboxusercontent.com/u/600586/', wpfol, '/'),
#                   base.dir = wpdir)
opts_knit$set(upload.fun = function(file) {
print("Hey")
imgur_upload(file, key = "9f3460e67f308f6")
})
opts_knit$set(upload.fun = imgur_upload,
base.url = NULL) # upload all images to imgur.com
#   input = rmdname
#   title = mytitle
#   shortcode= TRUE
#   encoding = getOption("encoding")
#   debug({
knit2wp(rmdname,
shortcode = TRUE,
action = "newPost",
title = mytitle,
categories = categories,
publish=publish)
#     })
#   x = knit2wp2(input = rmdname,
#           title = "Using Tables for Statistics on Large Vectors", categories = categories,
#           shortcode=c(TRUE, TRUE),
#           publish=publish)
# #
#   x$content = gsub("&gt;", ">", x$content, fixed=TRUE)
#   x$content = gsub("&lt;", "<", x$content, fixed=TRUE)
#   x$content = gsub("&quot;", '"', x$content, fixed=TRUE)
#   x$content = gsub("&#39;", "'", x$content, fixed=TRUE)
#   x$content = gsub("&rsquo;", "'", x$content, fixed=TRUE)
#   x$content = gsub("&rdquo;", '"', x$content, fixed=TRUE)
#   x$content = gsub("&ldquo;", '"', x$content, fixed=TRUE)
#   x$content = gsub("&amp;", '"', x$content, fixed=TRUE)
#
#   x$content = gsub("\\(", "ZZZZZZZ", x$content, fixed=TRUE)
#   x$content = gsub("\\)", "$", x$content, fixed=TRUE)
#   x$content = gsub("ZZZZZZZ", "$latex ",
#                    x$content, fixed=FALSE)
#
#   writeLines(text =x$content, con=gsub("[.]Rmd$", "_text.html", rmdname))
purl(rmdname)
}
